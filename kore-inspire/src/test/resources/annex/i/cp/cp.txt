Container <<applicationSchema>> "CadastralParcels" {
  * fileName = "CadastralParcels"
  Class <<featureType>> "CadastralZoning" {
    geometry : MULTISURFACE
    label : TEXT
    nationalCadastalZoningReference : TEXT
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion : DATETIME [0..1]
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> estimatedAccuracy : TEXT [0..1]
    <<voidable>> estimatedAccuracy_uom : TEXT [0..1]
    <<voidable>> level : TEXT [0..1]
    <<voidable>> originalMapScaleDenominator : INTEGER [0..1]
    <<voidable>> referencePoint : POINT [0..1]
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> levelName GMD_LocalisedCharacterString [0..*] as ref
    <<voidable>> name BASE2_SimpleGeographicalName [0..*] as ref
  }
  Feature <<featureType>> "CP_CadastralBoundary" {
    * description = "Part of the outline of a cadastral parcel. One cadastral boundary may be shared by two neighbouring cadastral parcels.
  
    NOTE In the INSPIRE context, cadastral boundaries are to be made available by member states where absolute positional accuracy information is recorded for the cadastral boundary (attribute estimated accuracy)."
    * identifier = "CadastralParcels::CadastralBoundary"
    * tableName = "CP_CadastralBoundary"
    geometry CURVE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>> estimatedAccuracy TEXT
    <<voidable>> estimatedAccuracy_uom TEXT CHECK(GML_UomIdentifier)
    <<reference>> inspireId INTEGER
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
  }
  Class <<featureType>> "CadastralParcel" {
    modeldocument = "null"
    geometry : GEOMETRY
    label : TEXT
    nationalCadastralReference : TEXT
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion : DATETIME [0..1]
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> areaValue : TEXT [0..1]
    <<voidable>> areaValue_uom : TEXT [0..1]
    <<voidable>> referencePoint : POINT [0..1]
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier as ref
    <<voidable>> administrativeUnit_AdministrativeUnit BASE_Identifier [0..1] as ref
  }
  Constraint Enum <<codeList>> "CP_CadastralZoningLevelValue" {
    * identifier = "CadastralParcels::CadastralZoningLevelValue"
    1stOrder
    2ndOrder
    3rdOrder
  }
  Attributes <<featureType>> "CP_BasicPropertyUnit" {
    * description = "The basic unit of ownership that is recorded in the land books, land registers or equivalent. It is defined by unique ownership and homogeneous real property rights, and may consist of one or more adjacent or geographically separate parcels.
  
    SOURCE Adapted from UN ECE 2004.
  
    NOTE 1 In the INSPIRE context, basic property units are to be made available by member states where unique cadastral references are given only for basic property units and not for parcels.
  
    NOTE 2 In many (but not all) countries, the area of the basic property unit corresponds to the cadastral parcel itself.
  
    NOTE 3 Some countries, such as Finland, may also register officially basic property units without any area. These basic property units are considered out of the INSPIRE scope.
  
    NOTE 4 Some countries, such as Norway, may have parcels which belong to several basic property units."
    * identifier = "CadastralParcels::BasicPropertyUnit"
    * tableName = "CP_BasicPropertyUnit"
    id INTEGER NOT NULL PRIMARY KEY
    nationalCadastralReference TEXT NOT NULL
    <<voidable>>, <<reference>> administrativeUnit_AdministrativeUnit INTEGER
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>> areaValue TEXT
    <<voidable>> areaValue_uom TEXT CHECK(GML_UomIdentifier)
    <<reference>> inspireId INTEGER
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
  }
  Relation "CP_CadastralBoundary_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute CP_CadastralBoundary#inspireId"
    * tableName = "CP_CadastralBoundary_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES CP_CadastralBoundary(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "CP_BasicPropertyUnit_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute CP_BasicPropertyUnit#inspireId"
    * tableName = "CP_BasicPropertyUnit_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES CP_BasicPropertyUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "CP_BasicPropertyUnit_administrativeUnit_AdministrativeUnit" {
    * profile = "attributes"
    * relatedReference = "attribute CP_BasicPropertyUnit#administrativeUnit_AdministrativeUnit"
    * tableName = "CP_BasicPropertyUnit_administrativeUnit_AdministrativeUnit"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES CP_BasicPropertyUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
}
Container "ISO 00639 Language Codes" {
  * fileName = "ISO 00639 Language Codes"
  Constraint Enum <<codeList>> "GMD_LanguageCode" {
    * identifier = "ISO 00639 Language Codes::LanguageCode"
    Afrikaans
    Albanian
    Arabic
    Basque
    Belarusian
    Bulgarian
    Catalan
    Chinese
    Croatian
    Czech
    Danish
    Dutch
    English
    Estonian
    Faeroese
    Finnish
    French
    French(Canadian)
    German
    Greek
    Hawaian
    Hebrew
    Hungarian
    Icelandic
    Indonesian
    Italian
    Japanese
    Korean
    Latvian
    Lithuanian
    Malaysian
    Norwegian
    Polish
    Portuguese
    Romanian
    Russian
    Serbian
    Slovak
    Slovenian
    Spanish
    Swahili
    Swedish
    Turkish
    Ukranian
  }
}
Container "ISO 03166 Country Codes" {
  * fileName = "ISO 03166 Country Codes"
  Constraint Enum <<codeList>> "GMD_CountryCode" {
    * identifier = "ISO 03166 Country Codes::CountryCode"
  }
}
Container "Identification information" {
  * fileName = "Identification information"
  Constraint Enum <<codeList>> "GMD_MD_CharacterSetCode" {
    * identifier = "Identification information::MD_CharacterSetCode"
    (reservedforfutureuse)
    8859part1
    8859part10
    8859part11
    8859part13
    8859part14
    8859part15
    8859part16
    8859part2
    8859part3
    8859part4
    8859part5
    8859part6
    8859part7
    8859part8
    8859part9
    GB2312
    big5
    ebcdic
    eucJP
    eucKR
    jis
    shiftJIS
    ucs2
    ucs4
    usAscii
    utf16
    utf7
    utf8
  }
}
Container <<applicationSchema>> "Base Types" {
  * fileName = "Base Types"
  Attributes <<dataType>> "BASE_Identifier" {
    * description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    * identifier = "Base Types::Identifier"
    * tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    <<lifeCycleInfo>>, <<voidable>> versionId TEXT
  }
  Metadata "Unknown" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
}
Container "Cultural and linguistic adapdability" {
  * fileName = "Cultural and linguistic adapdability"
  Attributes <<dataType>> "GMD_LocalisedCharacterString" {
    * identifier = "Cultural and linguistic adapdability::LocalisedCharacterString"
    * tableName = "GMD_LocalisedCharacterString"
    characterSetCode TEXT CHECK(GMD_MD_CharacterSetCode)
    country TEXT CHECK(GMD_CountryCode)
    id INTEGER NOT NULL PRIMARY KEY
    languageCode TEXT NOT NULL CHECK(GMD_LanguageCode)
    text TEXT NOT NULL
  }
}
Container <<applicationSchema>> "Base Types 2" {
  * fileName = "Base Types 2"
  Attributes <<dataType>> "BASE2_SimpleGeographicalName" {
    * tableName = "BASE2_SimpleGeographicalName"
    id INTEGER NOT NULL PRIMARY KEY
    language TEXT
    spelling_text TEXT NOT NULL
  }
}
Package "EA Model" {
  Class "applicationSchema" {}
}

Container "Units of Measure" {
  * fileName = "Units of Measure"
  Constraint Enum "GML_UomIdentifier" {}
}
