Container <<applicationSchema>> "CadastralParcels" {
  * fileName = "CadastralParcels"
  Feature <<featureType>> "CP_CadastralZoning" {
    * description = "Intermediary areas used in order to divide national territory into cadastral parcels.
  
    NOTE 1 In the INSPIRE context, cadastral zonings are to be used to carry metadata information and to facilitate portrayal and search of data.
  
    NOTE 2 Cadastral zonings have generally been defined when cadastral maps were created for the first time.
  
    EXAMPLE Municipality, section, parish, district, block."
    * identifier = "CadastralParcels::CadastralZoning"
    * tableName = "CP_CadastralZoning"
    geometry MULTISURFACE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    label TEXT NOT NULL
    nationalCadastalZoningReference TEXT NOT NULL
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>>, <<reference>> upperLevelUnit INTEGER
    <<voidable>> estimatedAccuracy TEXT
    <<voidable>> estimatedAccuracy_uom TEXT CHECK(GML_UomIdentifier)
    <<reference>> inspireId INTEGER
    <<voidable>> level TEXT CHECK(CP_CadastralZoningLevelValue)
    <<voidable>> originalMapScaleDenominator INTEGER
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
  }
  Feature <<featureType>> "CP_CadastralBoundary" {
    * description = "Part of the outline of a cadastral parcel. One cadastral boundary may be shared by two neighbouring cadastral parcels.
  
    NOTE In the INSPIRE context, cadastral boundaries are to be made available by member states where absolute positional accuracy information is recorded for the cadastral boundary (attribute estimated accuracy)."
    * identifier = "CadastralParcels::CadastralBoundary"
    * tableName = "CP_CadastralBoundary"
    geometry CURVE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>> estimatedAccuracy TEXT
    <<voidable>> estimatedAccuracy_uom TEXT CHECK(GML_UomIdentifier)
    <<reference>> inspireId INTEGER
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
  }
  Feature <<featureType>> "CP_CadastralParcel" {
    * description = "Areas defined by cadastral registers or equivalent.
  
    SOURCE [INSPIRE Directive:2007].
  
    NOTE As much as possible, in the INSPIRE context, cadastral parcels should be forming a partition of national territory. Cadastral parcel should be considered as a single area of Earth surface (land and/or water), under homogeneous real property rights and unique ownership, real property rights and ownership being defined by national law (adapted from UN ECE 2004 and WG-CPI, 2006). By unique ownership is meant that the ownership is held by one or several joint owners for the whole parcel."
    * identifier = "CadastralParcels::CadastralParcel"
    * tableName = "CP_CadastralParcel"
    geometry GEOMETRY NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    label TEXT NOT NULL
    nationalCadastralReference TEXT NOT NULL
    <<voidable>>, <<reference>> administrativeUnit_AdministrativeUnit INTEGER
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>>, <<reference>> zoning INTEGER
    <<voidable>> areaValue TEXT
    <<voidable>> areaValue_uom TEXT CHECK(GML_UomIdentifier)
    <<reference>> inspireId INTEGER
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
  }
  Constraint Enum <<codeList>> "CP_CadastralZoningLevelValue" {
    * identifier = "CadastralParcels::CadastralZoningLevelValue"
    1stOrder
    2ndOrder
    3rdOrder
  }
  Attributes <<featureType>> "CP_BasicPropertyUnit" {
    * description = "The basic unit of ownership that is recorded in the land books, land registers or equivalent. It is defined by unique ownership and homogeneous real property rights, and may consist of one or more adjacent or geographically separate parcels.
  
    SOURCE Adapted from UN ECE 2004.
  
    NOTE 1 In the INSPIRE context, basic property units are to be made available by member states where unique cadastral references are given only for basic property units and not for parcels.
  
    NOTE 2 In many (but not all) countries, the area of the basic property unit corresponds to the cadastral parcel itself.
  
    NOTE 3 Some countries, such as Finland, may also register officially basic property units without any area. These basic property units are considered out of the INSPIRE scope.
  
    NOTE 4 Some countries, such as Norway, may have parcels which belong to several basic property units."
    * identifier = "CadastralParcels::BasicPropertyUnit"
    * tableName = "CP_BasicPropertyUnit"
    id INTEGER NOT NULL PRIMARY KEY
    nationalCadastralReference TEXT NOT NULL
    <<voidable>>, <<reference>> administrativeUnit_AdministrativeUnit INTEGER
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>> areaValue TEXT
    <<voidable>> areaValue_uom TEXT CHECK(GML_UomIdentifier)
    <<reference>> inspireId INTEGER
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
  }
  Feature <<featureType>> "CP_CadastralZoning_referencePoint" {
    * tableName = "CP_CadastralZoning_referencePoint"
    id INTEGER NOT NULL PRIMARY KEY
    referencePoint POINT
  }
  Feature <<featureType>> "CP_CadastralParcel_referencePoint" {
    * tableName = "CP_CadastralParcel_referencePoint"
    id INTEGER NOT NULL PRIMARY KEY
    referencePoint POINT
  }
  Relation "CP_CadastralZoning_upperLevelUnit" {
    * profile = "features"
    * relatedReference = "attribute CP_CadastralZoning#upperLevelUnit"
    * tableName = "CP_CadastralZoning_upperLevelUnit"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES CP_CadastralZoning(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES CP_CadastralZoning(id)
  }
  Relation "CP_CadastralZoning_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute CP_CadastralZoning#inspireId"
    * tableName = "CP_CadastralZoning_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES CP_CadastralZoning(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "CP_CadastralZoning_levelName" {
    * profile = "attributes"
    * tableName = "CP_CadastralZoning_levelName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES CP_CadastralZoning(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleLocalisedCharacterString(id)
  }
  Relation "CP_CadastralZoning_name" {
    * profile = "attributes"
    * tableName = "CP_CadastralZoning_name"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES CP_CadastralZoning(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation "CP_CadastralBoundary_parcel" {
    * profile = "features"
    * tableName = "CP_CadastralBoundary_parcel"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES CP_CadastralBoundary(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES CP_CadastralParcel(id)
  }
  Relation "CP_CadastralBoundary_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute CP_CadastralBoundary#inspireId"
    * tableName = "CP_CadastralBoundary_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES CP_CadastralBoundary(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "CP_CadastralParcel_zoning" {
    * profile = "features"
    * relatedReference = "attribute CP_CadastralParcel#zoning"
    * tableName = "CP_CadastralParcel_zoning"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES CP_CadastralParcel(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES CP_CadastralZoning(id)
  }
  Relation "CP_CadastralParcel_basicPropertyUnit" {
    * profile = "attributes"
    * tableName = "CP_CadastralParcel_basicPropertyUnit"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES CP_CadastralParcel(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES CP_BasicPropertyUnit(id)
  }
  Relation "CP_CadastralParcel_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute CP_CadastralParcel#inspireId"
    * tableName = "CP_CadastralParcel_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES CP_CadastralParcel(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "CP_CadastralParcel_administrativeUnit_AdministrativeUnit" {
    * profile = "attributes"
    * relatedReference = "attribute CP_CadastralParcel#administrativeUnit_AdministrativeUnit"
    * tableName = "CP_CadastralParcel_administrativeUnit_AdministrativeUnit"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES CP_CadastralParcel(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "CP_BasicPropertyUnit_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute CP_BasicPropertyUnit#inspireId"
    * tableName = "CP_BasicPropertyUnit_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES CP_BasicPropertyUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "CP_BasicPropertyUnit_administrativeUnit_AdministrativeUnit" {
    * profile = "attributes"
    * relatedReference = "attribute CP_BasicPropertyUnit#administrativeUnit_AdministrativeUnit"
    * tableName = "CP_BasicPropertyUnit_administrativeUnit_AdministrativeUnit"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES CP_BasicPropertyUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
}
Container <<applicationSchema>> "Base Types 2" {
  * fileName = "Base Types 2"
  Attributes <<dataType>> "BASE2_SimpleGeographicalName" {
    * tableName = "BASE2_SimpleGeographicalName"
    id INTEGER NOT NULL PRIMARY KEY
    language TEXT
    spelling_text TEXT NOT NULL
  }
  Constraint Enum <<codeList>> "BASE2_Locale" {}
  Attributes <<type>> "BASE2_SimpleLocalisedCharacterString" {
    * tableName = "BASE2_SimpleLocalisedCharacterString"
    id INTEGER NOT NULL PRIMARY KEY
    locale TEXT NOT NULL CHECK(BASE2_Locale)
    value TEXT NOT NULL
  }
}
Container <<applicationSchema>> "Base Types" {
  * fileName = "Base Types"
  Attributes <<dataType>> "BASE_Identifier" {
    * description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    * identifier = "Base Types::Identifier"
    * tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    <<lifeCycleInfo>>, <<voidable>> versionId TEXT
  }
  Metadata "Unknown" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
}
Package "EA Model" {
  Class "applicationSchema" {}
}

Container "Units of Measure" {
  * fileName = "Units of Measure"
  Constraint Enum "GML_UomIdentifier" {}
}
