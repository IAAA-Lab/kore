Container <<applicationSchema>> "Hydro - Physical Waters" {
  * fileName = "Hydro - Physical Waters"
  Feature <<featureType>> "HY_P_Shore" {
    * description = "The narrow strip of land in immediate contact with any body of water including the area between high and low water lines.
  
    SOURCE [IHO S-32].
  
    NOTE Regarded as a candidate spatial object in Annex II theme 'Land cover' due to unconsolidated shore inclusion in coastal land-cover classificaction schemes."
    * identifier = "Hydro - Physical Waters::Shore"
    * tableName = "HY_P_Shore"
    geometry MULTISURFACE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> composition TEXT CHECK(HY_P_ShoreTypeValue)
    <<voidable>> delineationKnown BOOLEAN
    <<reference>> inspireId INTEGER
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Attributes <<dataType>> "HY_P_WidthRange" {
    * description = "The range of a watercourse's horizontal width along its length."
    * identifier = "Hydro - Physical Waters::WidthRange"
    * tableName = "HY_P_WidthRange"
    id INTEGER NOT NULL PRIMARY KEY
    lower TEXT NOT NULL
    lower_uom TEXT NOT NULL CHECK(GML_UomIdentifier)
    upper TEXT NOT NULL
    upper_uom TEXT NOT NULL CHECK(GML_UomIdentifier)
  }
  Abstract Class <<featureType>> "HydroPointOfInterest" {
    levelOfDetail_distance : TEXT [0..1]
    levelOfDetail_distance_uom : TEXT [0..1]
    levelOfDetail_equivalentScale_denominator : INTEGER [0..1]
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion : DATETIME [0..1]
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> geometry : GEOMETRY [0..1]
    inspireId BASE_Identifier as ref
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Attributes <<featureType>> "HY_P_Crossing" {
    * description = "A man-made object allowing the passage of water above or below an obstacle.
  
    EXAMPLE Aqueduct, bridge, culvert, siphon."
    * identifier = "Hydro - Physical Waters::Crossing"
    * tableName = "HY_P_Crossing"
    id INTEGER NOT NULL PRIMARY KEY
    levelOfDetail_distance TEXT
    levelOfDetail_distance_uom TEXT CHECK(GML_UomIdentifier)
    levelOfDetail_equivalentScale_denominator INTEGER
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> condition TEXT CHECK(BASE_ConditionOfFacilityValue)
    <<voidable>> geometry GEOMETRY
    <<reference>> inspireId INTEGER
    <<voidable>> type TEXT CHECK(HY_P_CrossingTypeValue)
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Attributes <<featureType>> "HY_P_Lock" {
    * description = "An enclosure with a pair or series of gates used for raising or lowering vessels as they pass from one water level to another.
  
    SOURCE [DFDD]."
    * identifier = "Hydro - Physical Waters::Lock"
    * tableName = "HY_P_Lock"
    id INTEGER NOT NULL PRIMARY KEY
    levelOfDetail_distance TEXT
    levelOfDetail_distance_uom TEXT CHECK(GML_UomIdentifier)
    levelOfDetail_equivalentScale_denominator INTEGER
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> condition TEXT CHECK(BASE_ConditionOfFacilityValue)
    <<voidable>> geometry GEOMETRY
    <<reference>> inspireId INTEGER
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Attributes <<featureType>> "HY_P_ShorelineConstruction" {
    * description = "An artificial structure attached to land bordering a body of water and fixed in position.
  
    SOURCE [DFDD].
  
    NOTE 1 It is usually fixed to the waterbody bottom (for example: a mole) but may occasionally be fixed in position (for example: attached to the shore at one end and held between pilings at the other) but floating. Shoreline constructions are normally used for berthing and/or protection.
  
    NOTE 2 Includes breakwater/groyne/wharf; but has more flexibility - also applies to inland waters."
    * identifier = "Hydro - Physical Waters::ShorelineConstruction"
    * tableName = "HY_P_ShorelineConstruction"
    id INTEGER NOT NULL PRIMARY KEY
    levelOfDetail_distance TEXT
    levelOfDetail_distance_uom TEXT CHECK(GML_UomIdentifier)
    levelOfDetail_equivalentScale_denominator INTEGER
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> condition TEXT CHECK(BASE_ConditionOfFacilityValue)
    <<voidable>> geometry GEOMETRY
    <<reference>> inspireId INTEGER
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Abstract Class <<featureType>> "SurfaceWater" {
    geometry : GEOMETRY
    levelOfDetail_distance : TEXT [0..1]
    levelOfDetail_distance_uom : TEXT [0..1]
    levelOfDetail_equivalentScale_denominator : INTEGER [0..1]
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion : DATETIME [0..1]
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> localType : TEXT [0..1]
    <<voidable>> localType_locale : TEXT [0..1]
    <<voidable>> origin : TEXT [0..1]
    <<voidable>> persistence : TEXT [0..1]
    <<voidable>> tidal : BOOLEAN [0..1]
    inspireId BASE_Identifier as ref
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Feature <<featureType>> "HY_P_LandWaterBoundary" {
    * description = "The line where a land mass is in contact with a body of water.
  
    SOURCE [DFDD].
  
    NOTE The plane of reference for the land-water boundary should be a high water datum, such as 'Mean High Water Springs', 'High Water' or 'Mean Higher High Water'. Where there is little appreciable change in waterlevels / tide at the adjacent shore, then 'Mean Sea Level' or 'Local Datum' may be used."
    * identifier = "Hydro - Physical Waters::LandWaterBoundary"
    * tableName = "HY_P_LandWaterBoundary"
    geometry CURVE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<reference>> inspireId INTEGER
    <<voidable>> origin TEXT CHECK(HY_P_OriginValue)
    <<voidable>> waterLevelCategory TEXT CHECK(HY_P_WaterLevelValue)
  }
  Attributes <<featureType>> "HY_P_Watercourse" {
    * description = "A natural or man-made flowing watercourse or stream.
  
    SOURCE [EuroRegionalMap]."
    * identifier = "Hydro - Physical Waters::Watercourse"
    * tableName = "HY_P_Watercourse"
    geometry GEOMETRY NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    levelOfDetail_distance TEXT
    levelOfDetail_distance_uom TEXT CHECK(GML_UomIdentifier)
    levelOfDetail_equivalentScale_denominator INTEGER
    streamOrder_order TEXT
    streamOrder_orderScheme TEXT
    streamOrder_scope TEXT
    width_lower TEXT NOT NULL
    width_lower_uom TEXT NOT NULL CHECK(GML_UomIdentifier)
    width_upper TEXT NOT NULL
    width_upper_uom TEXT NOT NULL CHECK(GML_UomIdentifier)
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> condition TEXT CHECK(BASE_ConditionOfFacilityValue)
    <<voidable>> delineationKnown BOOLEAN
    <<reference>> inspireId INTEGER
    <<voidable>> length TEXT
    <<voidable>> length_uom TEXT CHECK(GML_UomIdentifier)
    <<voidable>> level TEXT CHECK(BASE_VerticalPositionValue)
    <<voidable>> localType TEXT
    <<voidable>> localType_locale TEXT CHECK(BASE2_Locale)
    <<voidable>> origin TEXT CHECK(HY_P_OriginValue)
    <<voidable>> persistence TEXT CHECK(HY_P_HydrologicalPersistenceValue)
    <<voidable>> tidal BOOLEAN
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Constraint Enum <<codeList>> "HY_P_ShoreTypeValue" {
    * identifier = "Hydro - Physical Waters::ShoreTypeValue"
    boulders
    clay
    gravel
    mud
    rock
    sand
    shingle
    stone
  }
  Attributes <<featureType>> "HY_P_RiverBasin" {
    * description = "The area of land from which all surface run-off flows through a sequence of streams, rivers and, possibly, lakes into the sea at a single river mouth, estuary or delta.
  
    SOURCE [2000/60/EC Art. 2(13)]."
    * identifier = "Hydro - Physical Waters::RiverBasin"
    * tableName = "HY_P_RiverBasin"
    basinOrder_order TEXT
    basinOrder_orderScheme TEXT
    basinOrder_scope TEXT
    geometry SURFACE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> area TEXT
    <<voidable>> area_uom TEXT CHECK(GML_UomIdentifier)
    <<reference>> inspireId INTEGER
    <<voidable>> origin TEXT CHECK(HY_P_OriginValue)
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Feature <<featureType>> "HY_P_Wetland" {
    * description = "A poorly drained or periodically flooded area where the soil is saturated with water, and vegetation is supported.
  
    SOURCE [EuroRegionalMap].
  
    EXAMPLE Marsh/swamp, bog/moor.
  
    NOTE Regarded as a candidate spatial object in Annex II theme 'Land cover' due to explicit mention in 2007/2/EC Ann. II 2."
    * identifier = "Hydro - Physical Waters::Wetland"
    * tableName = "HY_P_Wetland"
    geometry SURFACE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<reference>> inspireId INTEGER
    <<voidable>> localType TEXT
    <<voidable>> localType_locale TEXT CHECK(BASE2_Locale)
    <<voidable>> tidal BOOLEAN
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Attributes <<featureType>> "HY_P_Sluice" {
    * description = "An open, inclined conduit fitted with a gate for regulating water flow.
  
    SOURCE [DFDD]."
    * identifier = "Hydro - Physical Waters::Sluice"
    * tableName = "HY_P_Sluice"
    id INTEGER NOT NULL PRIMARY KEY
    levelOfDetail_distance TEXT
    levelOfDetail_distance_uom TEXT CHECK(GML_UomIdentifier)
    levelOfDetail_equivalentScale_denominator INTEGER
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> condition TEXT CHECK(BASE_ConditionOfFacilityValue)
    <<voidable>> geometry GEOMETRY
    <<reference>> inspireId INTEGER
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Attributes <<featureType>> "HY_P_Ford" {
    * description = "A shallow part of a watercourse used as a road crossing.
  
    SOURCE [DFDD]."
    * identifier = "Hydro - Physical Waters::Ford"
    * tableName = "HY_P_Ford"
    id INTEGER NOT NULL PRIMARY KEY
    levelOfDetail_distance TEXT
    levelOfDetail_distance_uom TEXT CHECK(GML_UomIdentifier)
    levelOfDetail_equivalentScale_denominator INTEGER
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> condition TEXT CHECK(BASE_ConditionOfFacilityValue)
    <<voidable>> geometry GEOMETRY
    <<reference>> inspireId INTEGER
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Abstract Class <<featureType>> "FluvialPoint" {
    levelOfDetail_distance : TEXT [0..1]
    levelOfDetail_distance_uom : TEXT [0..1]
    levelOfDetail_equivalentScale_denominator : INTEGER [0..1]
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion : DATETIME [0..1]
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> geometry : GEOMETRY [0..1]
    inspireId BASE_Identifier as ref
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Abstract Class <<featureType>> "ManMadeObject" {
    levelOfDetail_distance : TEXT [0..1]
    levelOfDetail_distance_uom : TEXT [0..1]
    levelOfDetail_equivalentScale_denominator : INTEGER [0..1]
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion : DATETIME [0..1]
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> condition : TEXT [0..1]
    <<voidable>> geometry : GEOMETRY [0..1]
    inspireId BASE_Identifier as ref
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Attributes <<featureType>> "HY_P_Embankment" {
    * description = "A man-made raised long mound of earth or other material.
  
    SOURCE [DFDD].
  
    NOTE 1 Includes retaining walls, harbours, dikes.
  
    NOTE 2 Regarded as a candidate spatial object in Annex III theme 'Natural risk zones' due to its role in limiting flooding."
    * identifier = "Hydro - Physical Waters::Embankment"
    * tableName = "HY_P_Embankment"
    id INTEGER NOT NULL PRIMARY KEY
    levelOfDetail_distance TEXT
    levelOfDetail_distance_uom TEXT CHECK(GML_UomIdentifier)
    levelOfDetail_equivalentScale_denominator INTEGER
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> condition TEXT CHECK(BASE_ConditionOfFacilityValue)
    <<voidable>> geometry GEOMETRY
    <<reference>> inspireId INTEGER
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Attributes <<featureType>> "HY_P_Rapids" {
    * description = "Portions of a stream with accelerated current where it descends rapidly but without a break in the slope of the bed sufficient to form a waterfall.
  
    SOURCE [DFDD]."
    * identifier = "Hydro - Physical Waters::Rapids"
    * tableName = "HY_P_Rapids"
    id INTEGER NOT NULL PRIMARY KEY
    levelOfDetail_distance TEXT
    levelOfDetail_distance_uom TEXT CHECK(GML_UomIdentifier)
    levelOfDetail_equivalentScale_denominator INTEGER
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> geometry GEOMETRY
    <<reference>> inspireId INTEGER
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Constraint Enum <<enumeration>> "HY_P_OriginValue" {
    * identifier = "Hydro - Physical Waters::OriginValue"
    manMade
    natural
  }
  Constraint Enum <<codeList>> "HY_P_CrossingTypeValue" {
    * identifier = "Hydro - Physical Waters::CrossingTypeValue"
    aqueduct
    bridge
    culvert
    siphon
  }
  Attributes <<featureType>> "HY_P_StandingWater" {
    * description = "A body of water that is entirely surrounded by land.
  
    SOURCE [DFDD].
  
    NOTE It may occur in a natural terrain depression in which water collects, or may be impounded by a dam, or formed by its bed being hollowed out of the soil, or formed by embanking and/or damming up a natural hollow (for example: by a beaver dam). It may be connected to inflowing / outflowing watercourses or other standing waters."
    * identifier = "Hydro - Physical Waters::StandingWater"
    * tableName = "HY_P_StandingWater"
    geometry GEOMETRY NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    levelOfDetail_distance TEXT
    levelOfDetail_distance_uom TEXT CHECK(GML_UomIdentifier)
    levelOfDetail_equivalentScale_denominator INTEGER
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> elevation TEXT
    <<voidable>> elevation_uom TEXT CHECK(GML_UomIdentifier)
    <<reference>> inspireId INTEGER
    <<voidable>> localType TEXT
    <<voidable>> localType_locale TEXT CHECK(BASE2_Locale)
    <<voidable>> meanDepth TEXT
    <<voidable>> meanDepth_uom TEXT CHECK(GML_UomIdentifier)
    <<voidable>> origin TEXT CHECK(HY_P_OriginValue)
    <<voidable>> persistence TEXT CHECK(HY_P_HydrologicalPersistenceValue)
    <<voidable>> surfaceArea TEXT
    <<voidable>> surfaceArea_uom TEXT CHECK(GML_UomIdentifier)
    <<voidable>> tidal BOOLEAN
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Constraint Enum <<codeList>> "HY_P_WaterLevelValue" {
    * identifier = "Hydro - Physical Waters::WaterLevelValue"
    equinoctialSpringLowWater
    highWater
    highWaterSprings
    higherHighWater
    higherHighWaterLargeTide
    highestAstronomicalTide
    highestHighWater
    indianSpringHighWater
    indianSpringLowWater
    localDatum
    lowWater
    lowWaterDatum
    lowWaterSprings
    lowerLowWater
    lowerLowWaterLargeTide
    lowestAstronomicalTide
    lowestLowWater
    lowestLowWaterSprings
    meanHighWater
    meanHighWaterNeaps
    meanHighWaterSprings
    meanHigherHighWater
    meanHigherHighWaterSprings
    meanHigherLowWater
    meanLowWater
    meanLowWaterNeaps
    meanLowWaterSprings
    meanLowerHighWater
    meanLowerLowWater
    meanLowerLowWaterSprings
    meanSeaLevel
    meanTideLevel
    meanWaterLevel
    nearlyHighestHighWater
    nearlyLowestLowWater
    tropicHigherHighWater
    tropicLowerLowWater
  }
  Attributes <<featureType>> "HY_P_Falls" {
    * description = "A vertically descending part of a watercourse where it falls from a height.
  
    SOURCE [Based on DFDD].
  
    EXAMPLE Waterfalls over a rock or a precipice."
    * identifier = "Hydro - Physical Waters::Falls"
    * tableName = "HY_P_Falls"
    id INTEGER NOT NULL PRIMARY KEY
    levelOfDetail_distance TEXT
    levelOfDetail_distance_uom TEXT CHECK(GML_UomIdentifier)
    levelOfDetail_equivalentScale_denominator INTEGER
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> geometry GEOMETRY
    <<voidable>> height TEXT
    <<voidable>> height_uom TEXT CHECK(GML_UomIdentifier)
    <<reference>> inspireId INTEGER
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Attributes <<featureType>> "HY_P_DamOrWeir" {
    * description = "A permanent barrier across a watercourse used to impound water or to control its flow.
  
    SOURCE [EuroRegionalMap]."
    * identifier = "Hydro - Physical Waters::DamOrWeir"
    * tableName = "HY_P_DamOrWeir"
    id INTEGER NOT NULL PRIMARY KEY
    levelOfDetail_distance TEXT
    levelOfDetail_distance_uom TEXT CHECK(GML_UomIdentifier)
    levelOfDetail_equivalentScale_denominator INTEGER
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> condition TEXT CHECK(BASE_ConditionOfFacilityValue)
    <<voidable>> geometry GEOMETRY
    <<reference>> inspireId INTEGER
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Attributes <<dataType>> "HY_P_HydroOrderCode" {
    * description = "A hydrologically meaningful 'order code' for ordering hierarchies of watercourses and drainage basins."
    * identifier = "Hydro - Physical Waters::HydroOrderCode"
    * tableName = "HY_P_HydroOrderCode"
    id INTEGER NOT NULL PRIMARY KEY
    order TEXT NOT NULL
    orderScheme TEXT NOT NULL
    scope TEXT NOT NULL
  }
  Feature <<featureType>> "HY_P_DrainageBasin" {
    * description = "Area having a common outlet for its surface runoff.
  
    SOURCE [UNESCO/WMO International Glossary of Hydrology].
  
    NOTE 1 Regarding the different classifications of drainage basins, no distinction is made between drainage basins / sub-basins since this will vary with application. It is possible to build basins from other basins.
  
    NOTE 2 The outlet of a drainage basin may be a canal or a lake.
  
    NOTE 3 Synonyms for drainage basin include: catchment; catchment area; drainage area; river basin; watershed."
    * identifier = "Hydro - Physical Waters::DrainageBasin"
    * tableName = "HY_P_DrainageBasin"
    basinOrder_order TEXT
    basinOrder_orderScheme TEXT
    basinOrder_scope TEXT
    geometry SURFACE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> area TEXT
    <<voidable>> area_uom TEXT CHECK(GML_UomIdentifier)
    <<reference>> inspireId INTEGER
    <<voidable>> origin TEXT CHECK(HY_P_OriginValue)
    relatedHydroObject_HydroObject BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
    <<voidable>> hydroId HY_HydroIdentifier [0..*] as ref
  }
  Constraint Enum <<codeList>> "HY_P_HydrologicalPersistenceValue" {
    * identifier = "Hydro - Physical Waters::HydrologicalPersistenceValue"
    dry
    ephemeral
    intermittent
    perennial
  }
  Relation "HY_P_Shore_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute HY_P_Shore#inspireId"
    * tableName = "HY_P_Shore_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Shore(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_Shore_geographicalName" {
    * profile = "attributes"
    * tableName = "HY_P_Shore_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Shore(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "HY_P_Shore_hydroId" {
    * profile = "attributes"
    * tableName = "HY_P_Shore_hydroId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Shore(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_HydroIdentifier(id)
  }
  Relation "HY_P_Shore_relatedHydroObject_HydroObject" {
    * profile = "attributes"
    * tableName = "HY_P_Shore_relatedHydroObject_HydroObject"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Shore(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "HY_P_Crossing_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute HY_P_Crossing#inspireId"
    * tableName = "HY_P_Crossing_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Crossing(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_Crossing_geographicalName" {
    * profile = "attributes"
    * tableName = "HY_P_Crossing_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Crossing(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "HY_P_Crossing_hydroId" {
    * profile = "attributes"
    * tableName = "HY_P_Crossing_hydroId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Crossing(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_HydroIdentifier(id)
  }
  Relation "HY_P_Crossing_relatedHydroObject_HydroObject" {
    * profile = "attributes"
    * tableName = "HY_P_Crossing_relatedHydroObject_HydroObject"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Crossing(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "HY_P_Lock_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute HY_P_Lock#inspireId"
    * tableName = "HY_P_Lock_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Lock(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_Lock_geographicalName" {
    * profile = "attributes"
    * tableName = "HY_P_Lock_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Lock(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "HY_P_Lock_hydroId" {
    * profile = "attributes"
    * tableName = "HY_P_Lock_hydroId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Lock(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_HydroIdentifier(id)
  }
  Relation "HY_P_Lock_relatedHydroObject_HydroObject" {
    * profile = "attributes"
    * tableName = "HY_P_Lock_relatedHydroObject_HydroObject"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Lock(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "HY_P_ShorelineConstruction_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute HY_P_ShorelineConstruction#inspireId"
    * tableName = "HY_P_ShorelineConstruction_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_ShorelineConstruction(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_ShorelineConstruction_geographicalName" {
    * profile = "attributes"
    * tableName = "HY_P_ShorelineConstruction_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_ShorelineConstruction(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "HY_P_ShorelineConstruction_hydroId" {
    * profile = "attributes"
    * tableName = "HY_P_ShorelineConstruction_hydroId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_ShorelineConstruction(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_HydroIdentifier(id)
  }
  Relation "HY_P_ShorelineConstruction_relatedHydroObject_HydroObject" {
    * profile = "attributes"
    * tableName = "HY_P_ShorelineConstruction_relatedHydroObject_HydroObject"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_ShorelineConstruction(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "HY_P_LandWaterBoundary_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute HY_P_LandWaterBoundary#inspireId"
    * tableName = "HY_P_LandWaterBoundary_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_LandWaterBoundary(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_Watercourse_bank" {
    * profile = "features"
    * tableName = "HY_P_Watercourse_bank"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Watercourse(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_P_Shore(id)
  }
  Relation <<voidable>> "HY_P_Watercourse_neighbour_SurfaceWater" {
    * profile = "attributes"
    * tableName = "HY_P_Watercourse_neighbour_SurfaceWater"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Watercourse(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_Watercourse_drainsBasin" {
    * profile = "features"
    * tableName = "HY_P_Watercourse_drainsBasin"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Watercourse(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_P_DrainageBasin(id)
  }
  Relation "HY_P_Watercourse_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute HY_P_Watercourse#inspireId"
    * tableName = "HY_P_Watercourse_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Watercourse(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_Watercourse_geographicalName" {
    * profile = "attributes"
    * tableName = "HY_P_Watercourse_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Watercourse(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "HY_P_Watercourse_hydroId" {
    * profile = "attributes"
    * tableName = "HY_P_Watercourse_hydroId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Watercourse(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_HydroIdentifier(id)
  }
  Relation "HY_P_Watercourse_relatedHydroObject_HydroObject" {
    * profile = "attributes"
    * tableName = "HY_P_Watercourse_relatedHydroObject_HydroObject"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Watercourse(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_RiverBasin_outlet_SurfaceWater" {
    * profile = "attributes"
    * tableName = "HY_P_RiverBasin_outlet_SurfaceWater"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_RiverBasin(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_RiverBasin_containsBasin" {
    * profile = "features"
    * tableName = "HY_P_RiverBasin_containsBasin"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_RiverBasin(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_P_DrainageBasin(id)
  }
  Relation "HY_P_RiverBasin_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute HY_P_RiverBasin#inspireId"
    * tableName = "HY_P_RiverBasin_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_RiverBasin(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_RiverBasin_geographicalName" {
    * profile = "attributes"
    * tableName = "HY_P_RiverBasin_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_RiverBasin(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "HY_P_RiverBasin_hydroId" {
    * profile = "attributes"
    * tableName = "HY_P_RiverBasin_hydroId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_RiverBasin(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_HydroIdentifier(id)
  }
  Relation "HY_P_RiverBasin_relatedHydroObject_HydroObject" {
    * profile = "attributes"
    * tableName = "HY_P_RiverBasin_relatedHydroObject_HydroObject"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_RiverBasin(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "HY_P_Wetland_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute HY_P_Wetland#inspireId"
    * tableName = "HY_P_Wetland_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Wetland(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_Wetland_geographicalName" {
    * profile = "attributes"
    * tableName = "HY_P_Wetland_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Wetland(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "HY_P_Wetland_hydroId" {
    * profile = "attributes"
    * tableName = "HY_P_Wetland_hydroId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Wetland(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_HydroIdentifier(id)
  }
  Relation "HY_P_Wetland_relatedHydroObject_HydroObject" {
    * profile = "attributes"
    * tableName = "HY_P_Wetland_relatedHydroObject_HydroObject"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Wetland(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "HY_P_Sluice_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute HY_P_Sluice#inspireId"
    * tableName = "HY_P_Sluice_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Sluice(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_Sluice_geographicalName" {
    * profile = "attributes"
    * tableName = "HY_P_Sluice_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Sluice(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "HY_P_Sluice_hydroId" {
    * profile = "attributes"
    * tableName = "HY_P_Sluice_hydroId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Sluice(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_HydroIdentifier(id)
  }
  Relation "HY_P_Sluice_relatedHydroObject_HydroObject" {
    * profile = "attributes"
    * tableName = "HY_P_Sluice_relatedHydroObject_HydroObject"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Sluice(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "HY_P_Ford_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute HY_P_Ford#inspireId"
    * tableName = "HY_P_Ford_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Ford(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_Ford_geographicalName" {
    * profile = "attributes"
    * tableName = "HY_P_Ford_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Ford(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "HY_P_Ford_hydroId" {
    * profile = "attributes"
    * tableName = "HY_P_Ford_hydroId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Ford(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_HydroIdentifier(id)
  }
  Relation "HY_P_Ford_relatedHydroObject_HydroObject" {
    * profile = "attributes"
    * tableName = "HY_P_Ford_relatedHydroObject_HydroObject"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Ford(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "HY_P_Embankment_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute HY_P_Embankment#inspireId"
    * tableName = "HY_P_Embankment_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Embankment(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_Embankment_geographicalName" {
    * profile = "attributes"
    * tableName = "HY_P_Embankment_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Embankment(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "HY_P_Embankment_hydroId" {
    * profile = "attributes"
    * tableName = "HY_P_Embankment_hydroId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Embankment(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_HydroIdentifier(id)
  }
  Relation "HY_P_Embankment_relatedHydroObject_HydroObject" {
    * profile = "attributes"
    * tableName = "HY_P_Embankment_relatedHydroObject_HydroObject"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Embankment(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "HY_P_Rapids_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute HY_P_Rapids#inspireId"
    * tableName = "HY_P_Rapids_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Rapids(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_Rapids_geographicalName" {
    * profile = "attributes"
    * tableName = "HY_P_Rapids_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Rapids(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "HY_P_Rapids_hydroId" {
    * profile = "attributes"
    * tableName = "HY_P_Rapids_hydroId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Rapids(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_HydroIdentifier(id)
  }
  Relation "HY_P_Rapids_relatedHydroObject_HydroObject" {
    * profile = "attributes"
    * tableName = "HY_P_Rapids_relatedHydroObject_HydroObject"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Rapids(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_StandingWater_bank" {
    * profile = "features"
    * tableName = "HY_P_StandingWater_bank"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_StandingWater(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_P_Shore(id)
  }
  Relation <<voidable>> "HY_P_StandingWater_neighbour_SurfaceWater" {
    * profile = "attributes"
    * tableName = "HY_P_StandingWater_neighbour_SurfaceWater"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_StandingWater(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_StandingWater_drainsBasin" {
    * profile = "features"
    * tableName = "HY_P_StandingWater_drainsBasin"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_StandingWater(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_P_DrainageBasin(id)
  }
  Relation "HY_P_StandingWater_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute HY_P_StandingWater#inspireId"
    * tableName = "HY_P_StandingWater_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_StandingWater(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_StandingWater_geographicalName" {
    * profile = "attributes"
    * tableName = "HY_P_StandingWater_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_StandingWater(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "HY_P_StandingWater_hydroId" {
    * profile = "attributes"
    * tableName = "HY_P_StandingWater_hydroId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_StandingWater(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_HydroIdentifier(id)
  }
  Relation "HY_P_StandingWater_relatedHydroObject_HydroObject" {
    * profile = "attributes"
    * tableName = "HY_P_StandingWater_relatedHydroObject_HydroObject"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_StandingWater(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "HY_P_Falls_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute HY_P_Falls#inspireId"
    * tableName = "HY_P_Falls_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Falls(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_Falls_geographicalName" {
    * profile = "attributes"
    * tableName = "HY_P_Falls_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Falls(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "HY_P_Falls_hydroId" {
    * profile = "attributes"
    * tableName = "HY_P_Falls_hydroId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Falls(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_HydroIdentifier(id)
  }
  Relation "HY_P_Falls_relatedHydroObject_HydroObject" {
    * profile = "attributes"
    * tableName = "HY_P_Falls_relatedHydroObject_HydroObject"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_Falls(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "HY_P_DamOrWeir_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute HY_P_DamOrWeir#inspireId"
    * tableName = "HY_P_DamOrWeir_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_DamOrWeir(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_DamOrWeir_geographicalName" {
    * profile = "attributes"
    * tableName = "HY_P_DamOrWeir_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_DamOrWeir(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "HY_P_DamOrWeir_hydroId" {
    * profile = "attributes"
    * tableName = "HY_P_DamOrWeir_hydroId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_DamOrWeir(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_HydroIdentifier(id)
  }
  Relation "HY_P_DamOrWeir_relatedHydroObject_HydroObject" {
    * profile = "attributes"
    * tableName = "HY_P_DamOrWeir_relatedHydroObject_HydroObject"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_DamOrWeir(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_drainsBasin_outlet_SurfaceWater" {
    * profile = "attributes"
    * tableName = "HY_P_drainsBasin_outlet_SurfaceWater"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_DrainageBasin(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_DrainageBasin_containsBasin" {
    * profile = "features"
    * tableName = "HY_P_DrainageBasin_containsBasin"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_DrainageBasin(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_P_DrainageBasin(id)
  }
  Relation "HY_P_DrainageBasin_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute HY_P_DrainageBasin#inspireId"
    * tableName = "HY_P_DrainageBasin_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_DrainageBasin(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "HY_P_DrainageBasin_geographicalName" {
    * profile = "attributes"
    * tableName = "HY_P_DrainageBasin_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_DrainageBasin(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "HY_P_DrainageBasin_hydroId" {
    * profile = "attributes"
    * tableName = "HY_P_DrainageBasin_hydroId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_DrainageBasin(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HY_HydroIdentifier(id)
  }
  Relation "HY_P_DrainageBasin_relatedHydroObject_HydroObject" {
    * profile = "attributes"
    * tableName = "HY_P_DrainageBasin_relatedHydroObject_HydroObject"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HY_P_DrainageBasin(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
}
Container <<applicationSchema>> "Base Types" {
  * fileName = "Base Types"
  Constraint Enum <<enumeration>> "BASE_VerticalPositionValue" {
    * identifier = "Base Types::VerticalPositionValue"
    onGroundSurface
    suspendedOrElevated
    underground
  }
  Constraint Enum <<codeList>> "BASE_ConditionOfFacilityValue" {
    * identifier = "Base Types::ConditionOfFacilityValue"
    decommissioned
    disused
    functional
    projected
    underConstruction
  }
  Attributes <<dataType>> "BASE_Identifier" {
    * description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    * identifier = "Base Types::Identifier"
    * tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    <<lifeCycleInfo>>, <<voidable>> versionId TEXT
  }
  Metadata "Unknown" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
}
Container <<applicationSchema>> "Base Types 2" {
  * fileName = "Base Types 2"
  Attributes <<dataType>> "BASE2_SimpleGeographicalName" {
    * tableName = "BASE2_SimpleGeographicalName"
    id INTEGER NOT NULL PRIMARY KEY
    language TEXT
    spelling_text TEXT NOT NULL
  }
  Constraint Enum <<codeList>> "BASE2_Locale" {}
}
Container <<applicationSchema>> "Hydro - base" {
  * fileName = "Hydro - base"
  Attributes <<dataType>> "HY_HydroIdentifier" {
    * description = "A hydrographic thematic identifier.
  
    NOTE May be used to hold a national hydrological identification code."
    * identifier = "Hydro - base::HydroIdentifier"
    * tableName = "HY_HydroIdentifier"
    classificationScheme TEXT
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
  }
}
Package "EA Model" {
  Class "applicationSchema" {}
}

Container "Units of Measure" {
  * fileName = "Units of Measure"
  Constraint Enum "GML_UomIdentifier" {}
}
