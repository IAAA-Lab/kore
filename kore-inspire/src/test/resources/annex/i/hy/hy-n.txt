Container <<applicationSchema>>  "Hydro - Network" {
  Attributes "HY_N_WatercourseSeparatedCrossing" {
    description = "An element in the hydrographic network used to indicate non-interacting crossing of watercourse links separated by level.
  
    NOTE The crossing may legitimately break a no-intersection quality rule."
    identifier = "Hydro - Network::WatercourseSeparatedCrossing"
    tableName = "HY_N_WatercourseSeparatedCrossing"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    id INTEGER NOT NULL PRIMARY KEY
    ref geographicalName: GN_GeographicalName[0..*]
    ref hydroId: HY_HydroIdentifier[0..*]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
  }
  Constraint Enum "HY_N_HydroNodeCategoryValue" {
    identifier = "Hydro - Network::HydroNodeCategoryValue"
    boundary
    flowConstriction
    flowRegulation
    junction
    outlet
    source
  }
  Attributes "HY_N_HydroNode" {
    description = "A node within the hydrographic network.
  
    NOTE May represent a physical confluence, bifurcation/confluence/vanishing point etc, or it may be associated with a hydrographic point of interest or facility."
    identifier = "Hydro - Network::HydroNode"
    tableName = "HY_N_HydroNode"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    geometry: POINT
    hydroNodeCategory TEXT CHECK(HY_N_HydroNodeCategoryValue)
    id INTEGER NOT NULL PRIMARY KEY
    ref geographicalName: GN_GeographicalName[0..*]
    ref hydroId: HY_HydroIdentifier[0..*]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
    ref spokeEnd: Link[0..*] inv endNode[0..1]
    ref spokeStart: Link[0..*] inv startNode[0..1]
  }
  Attributes "HY_N_WatercourseLink" {
    description = "A segment of a watercourse within a hydrographic network.
  
    NOTE A watercourse link may be fictitious, with no direct correspondence to a real-world object and included only to ensure a closed network.
  
    EXAMPLE Fictitious examples:
  
    - virtual network segment in coastal water area
  
    - virtual network segment in lake area
  
    - virtual network segment in river to connect tributary
  
    - virtual network segment in transitional water area"
    identifier = "Hydro - Network::WatercourseLink"
    tableName = "HY_N_WatercourseLink"
    beginLifespanVersion: DATETIME [0..1]
    centrelineGeometry: CURVE
    endLifespanVersion: DATETIME [0..1]
    fictitious: BOOLEAN
    flowDirection TEXT CHECK(NET_LinkDirectionValue)
    id INTEGER NOT NULL PRIMARY KEY
    length TEXT
    length_uom TEXT CHECK(GML_UomIdentifier)
    ref endNode: Node[0..1] inv spokeEnd[0..*]
    ref geographicalName: GN_GeographicalName[0..*]
    ref hydroId: HY_HydroIdentifier[0..*]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
    ref startNode: Node[0..1] inv spokeStart[0..*]
    ref LinkSet inv link[1..*]
  }
  Attributes "HY_N_WatercourseLinkSequence" {
    description = "A sequence of watercourse links representing a non-branching path through a hydrographic network."
    identifier = "Hydro - Network::WatercourseLinkSequence"
    tableName = "HY_N_WatercourseLinkSequence"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    id INTEGER NOT NULL PRIMARY KEY
    ref geographicalName: GN_GeographicalName[0..*]
    ref hydroId: HY_HydroIdentifier[0..*]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
    ref link: NET_DirectedLink[1..*]
    ref LinkSet inv link[1..*]
  }
  Metadata "Unknown" {
    metadata = ""
    mimeType = "text/xml"
    scope = "attribute"
    standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    metadata = ""
    mimeType = "text/xml"
    scope = "attributeType"
    standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    metadata = ""
    mimeType = "text/xml"
    scope = "attribute"
    standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    metadata = ""
    mimeType = "text/xml"
    scope = "attributeType"
    standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Relation "GN_GeographicalName_spelling" {
    profile = "attributes"
    tableName = "GN_GeographicalName_spelling"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES GN_GeographicalName(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GN_SpellingOfName(id)
  }
  Relation "NET_Network_geographicalName" {
    profile = "attributes"
    tableName = "NET_Network_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES NET_Network(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GN_GeographicalName(id)
  }
  Constraint Enum "NET_LinkDirectionValue" {
    identifier = "Network::LinkDirectionValue"
    bothDirections
    inDirection
    inOppositeDirection
  }
  Constraint Enum "GML_UomIdentifier" {}
  Attributes "GN_GeographicalName" {
    description = "Proper noun applied to a real world entity."
    identifier = "Geographical Names::GeographicalName"
    tableName = "GN_GeographicalName"
    grammaticalGender TEXT CHECK(GN_GrammaticalGenderValue)
    grammaticalNumber TEXT CHECK(GN_GrammaticalNumberValue)
    id INTEGER NOT NULL PRIMARY KEY
    language TEXT
    nameStatus TEXT CHECK(GN_NameStatusValue)
    nativeness TEXT CHECK(GN_NativenessValue)
    pronunciation_pronunciationIPA TEXT
    pronunciation_pronunciationSoundLink TEXT
    sourceOfName TEXT
  }
  Attributes "HY_HydroIdentifier" {
    description = "A hydrographic thematic identifier.
  
    NOTE May be used to hold a national hydrological identification code."
    identifier = "Hydro - base::HydroIdentifier"
    tableName = "HY_HydroIdentifier"
    classificationScheme TEXT
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
  }
  Attributes "NET_Network" {
    description = "A network is a collection of network elements.
  
    The reason for collecting certain elements in a certain network may vary (e.g. connected elements for the same mode of transport)"
    identifier = "Network::Network"
    tableName = "NET_Network"
    id INTEGER NOT NULL PRIMARY KEY
    ref elements: NetworkElement[0..*] inv inNetwork[0..*]
  }
  Attributes "BASE_Identifier" {
    description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    identifier = "Base Types::Identifier"
    tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    versionId TEXT
  }
  Attributes "NET_DirectedLink" {
    description = "A link either in its positive or negative direction."
    identifier = "Network::DirectedLink"
    tableName = "NET_DirectedLink"
    direction Sign NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
  }
  Attributes "GN_SpellingOfName" {
    description = "Proper way of writing a name.
  
    SOURCE Adapted from [UNGEGN Manual 2006].
  
    NOTE Proper spelling means the writing of a name with the correct capitalisation and the correct letters and diacritics present in an accepted standard order."
    identifier = "Geographical Names::SpellingOfName"
    tableName = "GN_SpellingOfName"
    id INTEGER NOT NULL PRIMARY KEY
    script TEXT
    text TEXT NOT NULL
    transliterationScheme TEXT
  }
  Constraint Enum "GN_NativenessValue" {
    identifier = "Geographical Names::NativenessValue"
    endonym
    exonym
  }
  Constraint Enum "GN_NameStatusValue" {
    identifier = "Geographical Names::NameStatusValue"
    historical
    official
    other
    standardised
  }
  Constraint Enum "GN_GrammaticalGenderValue" {
    identifier = "Geographical Names::GrammaticalGenderValue"
    common
    feminine
    masculine
    neuter
  }
  Constraint Enum "GN_GrammaticalNumberValue" {
    identifier = "Geographical Names::GrammaticalNumberValue"
    dual
    plural
    singular
  }
}
