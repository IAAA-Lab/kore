Container <<applicationSchema>>  "Cable Transport Network" {
  Constraint Enum "TN_C_CablewayTypeValue" {
    identifier = "Cable Transport Network::CablewayTypeValue"
    cabinCableCar
    chairLift
    skiTow
  }
  Attributes "TN_C_CablewayLinkSequence" {
    description = "An ordered collection of cableway links that are characterized by one or more thematic identifiers and/or properties."
    identifier = "Cable Transport Network::CablewayLinkSequence"
    tableName = "TN_C_CablewayLinkSequence"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    id INTEGER NOT NULL PRIMARY KEY
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref geographicalName: GN_GeographicalName[0..1]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
    ref link: NET_DirectedLink[1..*]
  }
  Attributes "TN_C_CablewayNode" {
    description = "A point spatial object that is used to represent connectivity between two consecutive cableway links."
    identifier = "Cable Transport Network::CablewayNode"
    tableName = "TN_C_CablewayNode"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    geometry: POINT
    id INTEGER NOT NULL PRIMARY KEY
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref geographicalName: GN_GeographicalName[0..1]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
    ref spokeEnd: Link[0..*] inv endNode[0..1]
    ref spokeStart: Link[0..*] inv startNode[0..1]
  }
  Attributes "TN_C_CablewayLinkSet" {
    description = "A collection of cableway link sequences and or individual cableway links that has a specific function or significance in a cable transport network."
    identifier = "Cable Transport Network::CablewayLinkSet"
    tableName = "TN_C_CablewayLinkSet"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    id INTEGER NOT NULL PRIMARY KEY
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref geographicalName: GN_GeographicalName[0..1]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
    ref post: TN_MarkerPost[0..*] inv route[0..1]
  }
  Attributes "TN_C_CablewayLink" {
    description = "Linear spatial object that describes the geometry and connectivity of a cable network between two points in a cableway transport network.
  
    NOTE Cableway transport is a form of transport based on a cable suspended normally from a set of consecutive towers."
    identifier = "Cable Transport Network::CablewayLink"
    tableName = "TN_C_CablewayLink"
    beginLifespanVersion: DATETIME [0..1]
    cablewayType TEXT CHECK(TN_C_CablewayTypeValue)
    centrelineGeometry: CURVE
    endLifespanVersion: DATETIME [0..1]
    fictitious: BOOLEAN
    id INTEGER NOT NULL PRIMARY KEY
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref endNode: Node[0..1] inv spokeEnd[0..*]
    ref geographicalName: GN_GeographicalName[0..1]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
    ref startNode: Node[0..1] inv spokeStart[0..*]
    ref ThoroughfareName inv transportLink[0..*]
  }
  Metadata "Unknown" {
    metadata = ""
    mimeType = "text/xml"
    scope = "attribute"
    standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    metadata = ""
    mimeType = "text/xml"
    scope = "attributeType"
    standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    metadata = ""
    mimeType = "text/xml"
    scope = "attribute"
    standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    metadata = ""
    mimeType = "text/xml"
    scope = "attributeType"
    standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Relation "GN_GeographicalName_spelling" {
    profile = "attributes"
    tableName = "GN_GeographicalName_spelling"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES GN_GeographicalName(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GN_SpellingOfName(id)
  }
  Relation "NET_Network_geographicalName" {
    profile = "attributes"
    tableName = "NET_Network_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES NET_Network(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GN_GeographicalName(id)
  }
  Attributes "GN_GeographicalName" {
    description = "Proper noun applied to a real world entity."
    identifier = "Geographical Names::GeographicalName"
    tableName = "GN_GeographicalName"
    grammaticalGender TEXT CHECK(GN_GrammaticalGenderValue)
    grammaticalNumber TEXT CHECK(GN_GrammaticalNumberValue)
    id INTEGER NOT NULL PRIMARY KEY
    language TEXT
    nameStatus TEXT CHECK(GN_NameStatusValue)
    nativeness TEXT CHECK(GN_NativenessValue)
    pronunciation_pronunciationIPA TEXT
    pronunciation_pronunciationSoundLink TEXT
    sourceOfName TEXT
  }
  Attributes "NET_DirectedLink" {
    description = "A link either in its positive or negative direction."
    identifier = "Network::DirectedLink"
    tableName = "NET_DirectedLink"
    direction TEXT NOT NULL CHECK(GML_Sign)
    id INTEGER NOT NULL PRIMARY KEY
  }
  Attributes "NET_Network" {
    description = "A network is a collection of network elements.
  
    The reason for collecting certain elements in a certain network may vary (e.g. connected elements for the same mode of transport)"
    identifier = "Network::Network"
    tableName = "NET_Network"
    id INTEGER NOT NULL PRIMARY KEY
    ref elements: NetworkElement[0..*] inv inNetwork[0..*]
  }
  Attributes "BASE_Identifier" {
    description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    identifier = "Base Types::Identifier"
    tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    versionId TEXT
  }
  Attributes "TN_MarkerPost" {
    description = "Reference marker placed along a route in a transport network, mostly at regular intervals, indicating the distance from the beginning of the route, or some other reference point, to the point where the marker is located.
  
    EXAMPLE Examples of routes along which marker posts can be found are roads, railway lines and navigable waterways."
    identifier = "Common Transport Elements::MarkerPost"
    tableName = "TN_MarkerPost"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    geometry: POINT
    id INTEGER NOT NULL PRIMARY KEY
    location TEXT NOT NULL
    location_uom TEXT NOT NULL CHECK(GML_UomIdentifier)
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref geographicalName: GN_GeographicalName[0..1]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
    ref route: TransportLinkSet[0..1] inv post[0..*]
  }
  Attributes "GN_SpellingOfName" {
    description = "Proper way of writing a name.
  
    SOURCE Adapted from [UNGEGN Manual 2006].
  
    NOTE Proper spelling means the writing of a name with the correct capitalisation and the correct letters and diacritics present in an accepted standard order."
    identifier = "Geographical Names::SpellingOfName"
    tableName = "GN_SpellingOfName"
    id INTEGER NOT NULL PRIMARY KEY
    script TEXT
    text TEXT NOT NULL
    transliterationScheme TEXT
  }
  Constraint Enum "GN_NativenessValue" {
    identifier = "Geographical Names::NativenessValue"
    endonym
    exonym
  }
  Constraint Enum "GN_NameStatusValue" {
    identifier = "Geographical Names::NameStatusValue"
    historical
    official
    other
    standardised
  }
  Constraint Enum "GN_GrammaticalGenderValue" {
    identifier = "Geographical Names::GrammaticalGenderValue"
    common
    feminine
    masculine
    neuter
  }
  Constraint Enum "GN_GrammaticalNumberValue" {
    identifier = "Geographical Names::GrammaticalNumberValue"
    dual
    plural
    singular
  }
  Constraint Enum <<Enumeration>>  "GML_Sign" {
    identifier = "basicTypes::Sign"
    "+"
    "-"
  }
  Constraint Enum "GML_UomIdentifier" {}
}
