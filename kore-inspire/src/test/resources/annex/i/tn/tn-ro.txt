Container <<applicationSchema>> "Road Transport Network" {
  * fileName = "Road Transport Network"
  Constraint Enum <<codeList>> "TN_RO_AreaConditionValue" {
    * identifier = "Road Transport Network::AreaConditionValue"
    inNationalPark
    insideCities
    nearRailroadCrossing
    nearSchool
    outsideCities
    trafficCalmingArea
  }
  Constraint Enum <<codeList>> "TN_RO_RoadServiceTypeValue" {
    * identifier = "Road Transport Network::RoadServiceTypeValue"
    busStation
    parking
    restArea
    toll
  }
  Attributes <<featureType>> "TN_RO_RoadServiceArea" {
    * description = "Surface annexed to a road and devoted to offer particular services for it.
  
    EXAMPLES Gas station, rest area, toll area."
    * identifier = "Road Transport Network::RoadServiceArea"
    * tableName = "TN_RO_RoadServiceArea"
    geometry : SURFACE
    id INTEGER NOT NULL PRIMARY KEY
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion : DATETIME [0..1]
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..1] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "TN_RO_RoadNode" {
    * description = "A point spatial object that is used to either represent connectivity between two road links or to represent a significant spatial object such as a services station or  roundabout."
    * identifier = "Road Transport Network::RoadNode"
    * tableName = "TN_RO_RoadNode"
    geometry : POINT
    id INTEGER NOT NULL PRIMARY KEY
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion : DATETIME [0..1]
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> formOfRoadNode TEXT CHECK(TN_RO_FormOfRoadNodeValue)
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..1] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
    <<voidable>> spokeEnd_Link BASE_Identifier [0..*] as ref
    <<voidable>> spokeStart_Link BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "TN_RO_RoadServiceType" {
    * description = "Description of the type of road service area and the available facilities."
    * identifier = "Road Transport Network::RoadServiceType"
    * tableName = "TN_RO_RoadServiceType"
    id INTEGER NOT NULL PRIMARY KEY
    type TEXT NOT NULL CHECK(TN_RO_RoadServiceTypeValue)
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion : DATETIME [0..1]
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion : DATETIME [0..1]
    <<array>> availableFacilities TEXT
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> networkRef NET_NetworkReference [0..*] as ref
  }
  Constraint Enum <<codeList>> "TN_RO_ServiceFacilityValue" {
    * identifier = "Road Transport Network::ServiceFacilityValue"
    drinks
    food
    fuel
    picnicArea
    playground
    shop
    toilets
  }
  Constraint Enum <<codeList>> "TN_RO_VehicleTypeValue" {
    * identifier = "Road Transport Network::VehicleTypeValue"
    allVehicle
    bicycle
    carWithTrailer
    deliveryTruck
    emergencyVehicle
    employeeVehicle
    facilityVehicle
    farmVehicle
    highOccupancyVehicle
    lightRail
    mailVehicle
    militaryVehicle
    moped
    motorcycle
    passengerCar
    pedestrian
    privateBus
    publicBus
    residentialVehicle
    schoolBus
    snowChainEquippedVehicle
    tanker
    taxi
    transportTruck
    trolleyBus
    vehicleForDisabledPerson
    vehicleWithExplosiveLoad
    vehicleWithOtherDangerousLoad
    vehicleWithWaterPollutingLoad
  }
  Attributes <<featureType>> "TN_RO_NumberOfLanes" {
    * description = "The number of lanes of a road element.
  
    SOURCE Adapated from [Euroroads]."
    * identifier = "Road Transport Network::NumberOfLanes"
    * tableName = "TN_RO_NumberOfLanes"
    id INTEGER NOT NULL PRIMARY KEY
    numberOfLanes INTEGER NOT NULL
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion : DATETIME [0..1]
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> direction TEXT CHECK(NET_LinkDirectionValue)
    <<voidable>> minMaxNumberOfLanes TEXT CHECK(TN_RO_MinMaxLaneValue)
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> networkRef NET_NetworkReference [0..*] as ref
  }
  Attributes <<featureType>> "TN_RO_FormOfWay" {
    * description = "A classification based on the physical properties of the Road Link.
  
    SOURCE Based on [EuroRoadS]."
    * identifier = "Road Transport Network::FormOfWay"
    * tableName = "TN_RO_FormOfWay"
    formOfWay TEXT NOT NULL CHECK(TN_RO_FormOfWayValue)
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion : DATETIME [0..1]
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> networkRef NET_NetworkReference [0..*] as ref
  }
  Constraint Enum <<enumeration>> "TN_RO_FunctionalRoadClassValue" {
    * identifier = "Road Transport Network::FunctionalRoadClassValue"
    eighthClass
    fifthClass
    firstClass
    fourthClass
    mainRoad
    ninthClass
    secondClass
    seventhClass
    sixthClass
    thirdClass
  }
  Constraint Enum <<codeList>> "TN_RO_WeatherConditionValue" {
    * identifier = "Road Transport Network::WeatherConditionValue"
    fog
    ice
    rain
    smog
    snow
  }
  Constraint Enum <<codeList>> "TN_RO_FormOfWayValue" {
    * identifier = "Road Transport Network::FormOfWayValue"
    bicycleRoad
    dualCarriageway
    enclosedTrafficArea
    entranceOrExitCarPark
    entranceOrExitService
    freeway
    motorway
    pedestrianZone
    roundabout
    serviceRoad
    singleCarriageway
    slipRoad
    tractor
    trafficSquare
    walkway
  }
  Attributes <<featureType>> "TN_RO_RoadArea" {
    * description = "Surface which extends to the limits of a road, including vehicular areas and other parts of it.
  
    EAXMPLE Pedestrian areas."
    * identifier = "Road Transport Network::RoadArea"
    * tableName = "TN_RO_RoadArea"
    geometry : SURFACE
    id INTEGER NOT NULL PRIMARY KEY
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion : DATETIME [0..1]
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..1] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
  }
  Constraint Enum <<enumeration>> "TN_RO_MinMaxLaneValue" {
    * identifier = "Road Transport Network::MinMaxLaneValue"
    average
    maximum
    minimum
  }
  Attributes <<featureType>> "TN_RO_RoadSurfaceCategory" {
    * description = "Specification of the state of the surface of the associated Road Element. Indicates whether a road is paved or unpaved.
  
    SOURCE [GDF3, Euroroads]."
    * identifier = "Road Transport Network::RoadSurfaceCategory"
    * tableName = "TN_RO_RoadSurfaceCategory"
    id INTEGER NOT NULL PRIMARY KEY
    surfaceCategory TEXT NOT NULL CHECK(TN_RO_RoadSurfaceCategoryValue)
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion : DATETIME [0..1]
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> networkRef NET_NetworkReference [0..*] as ref
  }
  Attributes <<featureType>> "TN_RO_RoadLink" {
    * description = "A linear spatial object that describes the geometry and connectivity of a road network between two points in the network.
  
    Road links can represent paths, bicycle roads, single carriageways, multiple carriageway roads and even fictitious trajectories across traffic squares."
    * identifier = "Road Transport Network::RoadLink"
    * tableName = "TN_RO_RoadLink"
    centrelineGeometry : CURVE
    fictitious : BOOLEAN
    id INTEGER NOT NULL PRIMARY KEY
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion : DATETIME [0..1]
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    endNode_Node BASE_Identifier [0..1] as ref
    inspireId BASE_Identifier [0..1] as ref
    startNode_Node BASE_Identifier [0..1] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..1] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "TN_RO_RoadLinkSequence" {
    * description = "A linear spatial object, composed of an ordered collection of road links, which represents a continuous path in a road network without any branches. The element has a defined beginning and end and every position on the road link sequence is identifiable with one single parameter such as length. It describes an element of the road network, characterized by one or more thematic identifiers and/or properties."
    * identifier = "Road Transport Network::RoadLinkSequence"
    * tableName = "TN_RO_RoadLinkSequence"
    id INTEGER NOT NULL PRIMARY KEY
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion : DATETIME [0..1]
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    link NET_DirectedLink [1..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..1] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
  }
  Constraint Enum <<codeList>> "TN_RO_FormOfRoadNodeValue" {
    * identifier = "Road Transport Network::FormOfRoadNodeValue"
    enclosedTrafficArea
    junction
    levelCrossing
    pseudoNode
    roadEnd
    roadServiceArea
    roundabout
    trafficSquare
  }
  Attributes <<featureType>> "TN_RO_RoadName" {
    * description = "Name of a road, as assigned by the responsible authority."
    * identifier = "Road Transport Network::RoadName"
    * tableName = "TN_RO_RoadName"
    id INTEGER NOT NULL PRIMARY KEY
    name_language TEXT
    name_spelling_text TEXT NOT NULL
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion : DATETIME [0..1]
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> networkRef NET_NetworkReference [0..*] as ref
  }
  Attributes <<featureType>> "TN_RO_VehicleTrafficArea" {
    * description = "Surface that represents the part of a road which is used for the normal traffic of vehicles."
    * identifier = "Road Transport Network::VehicleTrafficArea"
    * tableName = "TN_RO_VehicleTrafficArea"
    geometry : SURFACE
    id INTEGER NOT NULL PRIMARY KEY
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion : DATETIME [0..1]
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..1] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
  }
  Constraint Enum <<codeList>> "TN_RO_SpeedLimitSourceValue" {
    * identifier = "Road Transport Network::SpeedLimitSourceValue"
    fixedTrafficSign
    regulation
    variableTrafficSign
  }
  Constraint Enum <<enumeration>> "TN_RO_SpeedLimitMinMaxValue" {
    * identifier = "Road Transport Network::SpeedLimitMinMaxValue"
    maximum
    minimum
    recommendedMaximum
    recommendedMinimum
  }
  Attributes <<featureType>> "TN_RO_Road" {
    * description = "A collection of road link sequences and/or individual road links that are characterized by one or more thematic identifiers and/or properties.
  
    EXAMPLE Examples are roads characterized by a specific identification code, used by road management authorities or tourist routes, identified by a specific name."
    * identifier = "Road Transport Network::Road"
    * tableName = "TN_RO_Road"
    id INTEGER NOT NULL PRIMARY KEY
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion : DATETIME [0..1]
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> localRoadCode TEXT
    <<voidable>> nationalRoadCode TEXT
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    link_GeneralisedLink BASE_Identifier [1..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..1] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
    <<voidable>> post_MarkerPost BASE_Identifier [0..*] as ref
  }
  Constraint Enum <<codeList>> "TN_RO_RoadPartValue" {
    * identifier = "Road Transport Network::RoadPartValue"
    carriageway
    pavedSurface
  }
  Constraint Enum <<codeList>> "TN_RO_RoadSurfaceCategoryValue" {
    * identifier = "Road Transport Network::RoadSurfaceCategoryValue"
    paved
    unpaved
  }
  Attributes <<featureType>> "TN_RO_FunctionalRoadClass" {
    * description = "A classification based on the importance of the role that the road performs in the road network.
  
    SOURCE Adapted from [GDF, EuroRoadS]."
    * identifier = "Road Transport Network::FunctionalRoadClass"
    * tableName = "TN_RO_FunctionalRoadClass"
    functionalClass TEXT NOT NULL CHECK(TN_RO_FunctionalRoadClassValue)
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion : DATETIME [0..1]
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> networkRef NET_NetworkReference [0..*] as ref
  }
  Attributes <<featureType>> "TN_RO_SpeedLimit" {
    * description = "Limit for the speed of a vehicle on a road..
  
    SOURCE [Euroroads]."
    * identifier = "Road Transport Network::SpeedLimit"
    * tableName = "TN_RO_SpeedLimit"
    id INTEGER NOT NULL PRIMARY KEY
    speedLimitMinMaxType TEXT NOT NULL CHECK(TN_RO_SpeedLimitMinMaxValue) DEFAULT 'Maximum'
    speedLimitValue TEXT NOT NULL
    speedLimitValue_uom TEXT NOT NULL CHECK(GML_UomIdentifier)
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion : DATETIME [0..1]
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> areaCondition TEXT CHECK(TN_RO_AreaConditionValue)
    <<voidable>> direction TEXT CHECK(NET_LinkDirectionValue)
    <<voidable>> laneExtension INTEGER
    <<voidable>> speedLimitSource TEXT CHECK(TN_RO_SpeedLimitSourceValue)
    <<voidable>> startLane INTEGER
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    <<voidable>> vehicleType TEXT CHECK(TN_RO_VehicleTypeValue)
    <<voidable>> weatherCondition TEXT CHECK(TN_RO_WeatherConditionValue)
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> networkRef NET_NetworkReference [0..*] as ref
  }
  Attributes <<featureType>> "TN_RO_RoadWidth" {
    * description = "The width of the road, measured as an average value.
  
    SOURCE [Euroroads]."
    * identifier = "Road Transport Network::RoadWidth"
    * tableName = "TN_RO_RoadWidth"
    id INTEGER NOT NULL PRIMARY KEY
    width TEXT NOT NULL
    width_uom TEXT NOT NULL CHECK(GML_UomIdentifier)
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion : DATETIME [0..1]
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> measuredRoadPart TEXT CHECK(TN_RO_RoadPartValue)
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> networkRef NET_NetworkReference [0..*] as ref
  }
  Attributes <<featureType>> "TN_RO_ERoad" {
    * description = "A collection of road link sequences and or individual road links that represents a route that is part of the international E-road network, characterized by its European route number.
  
    EXAMPLE E40."
    * identifier = "Road Transport Network::ERoad"
    * tableName = "TN_RO_ERoad"
    id INTEGER NOT NULL PRIMARY KEY
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion : DATETIME [0..1]
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> europeanRouteNumber TEXT
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    link_GeneralisedLink BASE_Identifier [1..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..1] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
    <<voidable>> post_MarkerPost BASE_Identifier [0..*] as ref
  }
}
Container "basicTypes" {
  * fileName = "basicTypes"
  Constraint Enum <<enumeration>>, <<enumeration>> "GML_Sign" {
    * identifier = "basicTypes::Sign"
    "+"
    "-"
  }
}
Container <<applicationSchema>> "Base Types 2" {
  * fileName = "Base Types 2"
  Constraint Enum <<enumeration>> "BASE2_SimpleCitationType" {
    CI_Citation
    DocumentCitation
    LegislationCitation
  }
  Attributes <<dataType>> "BASE2_SimpleCitation" {
    * tableName = "BASE2_SimpleCitation"
    date DATE
    id INTEGER NOT NULL PRIMARY KEY
    level LegislationLevelValue
    link TEXT
    name TEXT NOT NULL
    type TEXT NOT NULL CHECK(BASE2_SimpleCitationType)
  }
  Attributes <<dataType>> "BASE2_SimpleGeographicalName" {
    * tableName = "BASE2_SimpleGeographicalName"
    id INTEGER NOT NULL PRIMARY KEY
    language TEXT
    spelling_text TEXT NOT NULL
  }
}
Container <<applicationSchema>> "Network" {
  * fileName = "Network"
  Attributes <<dataType>> "NET_DirectedLink" {
    * description = "A link either in its positive or negative direction."
    * identifier = "Network::DirectedLink"
    * tableName = "NET_DirectedLink"
    direction TEXT NOT NULL CHECK(GML_Sign)
    id INTEGER NOT NULL PRIMARY KEY
    <<reference>> link_Link INTEGER
  }
  Constraint Enum <<codeList>> "NET_LinkDirectionValue" {
    * identifier = "Network::LinkDirectionValue"
    bothDirections
    inDirection
    inOppositeDirection
  }
  Attributes <<dataType>> "NET_NetworkReference" {
    * description = "A reference to a network element."
    * identifier = "Network::NetworkReference"
    * tableName = "NET_NetworkReference"
    id INTEGER NOT NULL PRIMARY KEY
    <<version>>, <<reference>> element_NetworkElement INTEGER
    involves TrafficRelatedEvent [0..*] as ref
  }
  Relation "NET_NetworkReference_element_NetworkElement" {
    * profile = "attributes"
    * relatedReference = "attribute NET_NetworkReference#element_NetworkElement"
    * tableName = "NET_NetworkReference_element_NetworkElement"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES NET_NetworkReference(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "NET_DirectedLink_link_Link" {
    * profile = "attributes"
    * relatedReference = "attribute NET_DirectedLink#link_Link"
    * tableName = "NET_DirectedLink_link_Link"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES NET_DirectedLink(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
}
Container <<applicationSchema>> "Base Types" {
  * fileName = "Base Types"
  Attributes <<dataType>> "BASE_Identifier" {
    * description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    * identifier = "Base Types::Identifier"
    * tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    <<lifeCycleInfo>>, <<voidable>> versionId TEXT
  }
  Metadata "Unknown" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
}
Package "Location referencing mechanisms" {
  Class "NodeLocationReference" {
    node_Node BASE_Identifier as ref
    <<voidable>> networkReference BASE2_SimpleCitation [0..1] as ref
  }
}
Package "EA Model" {
  Class "applicationSchema" {}
  Datatype LegislationLevelValue
  
}

Container "Units of Measure" {
  * fileName = "Units of Measure"
  Constraint Enum "GML_UomIdentifier" {}
}
