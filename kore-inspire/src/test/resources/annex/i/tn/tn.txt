Container <<applicationSchema>> "Common Transport Elements" {
  * fileName = "Common Transport Elements"
  Abstract Class <<featureType>> "TransportArea" {
    geometry : SURFACE
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>> geographicalName_language TEXT
    <<voidable>> geographicalName_spelling_text TEXT
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "TN_VerticalPosition" {
    * description = "Vertical level relative to other transport network elements."
    * identifier = "Common Transport Elements::VerticalPosition"
    * tableName = "TN_VerticalPosition"
    id INTEGER NOT NULL PRIMARY KEY
    verticalPosition TEXT NOT NULL CHECK(BASE_VerticalPositionValue)
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> networkRef NET_NetworkReference [0..*] as ref
  }
  Constraint Enum <<codeList>> "TN_AccessRestrictionValue" {
    * identifier = "Common Transport Elements::AccessRestrictionValue"
    forbiddenLegally
    physicallyImpossible
    private
    publicAccess
    seasonal
    toll
  }
  Attributes <<featureType>> "TN_ConditionOfFacility" {
    * description = "State of a transport network element with regards to its completion and use."
    * identifier = "Common Transport Elements::ConditionOfFacility"
    * tableName = "TN_ConditionOfFacility"
    currentStatus TEXT NOT NULL CHECK(BASE_ConditionOfFacilityValue)
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> networkRef NET_NetworkReference [0..*] as ref
  }
  Attributes <<featureType>> "TN_OwnerAuthority" {
    * description = "The authority owning the transport element."
    * identifier = "Common Transport Elements::OwnerAuthority"
    * tableName = "TN_OwnerAuthority"
    authority_date DATE
    authority_level LegislationLevelValue
    authority_link TEXT
    authority_name TEXT NOT NULL
    authority_type TEXT NOT NULL CHECK(BASE2_SimpleCitationType)
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> networkRef NET_NetworkReference [0..*] as ref
  }
  Attributes <<featureType>> "TN_TrafficFlowDirection" {
    * description = "Indicates the direction of the flow of traffic in relation to the direction of the transport link vector."
    * identifier = "Common Transport Elements::TrafficFlowDirection"
    * tableName = "TN_TrafficFlowDirection"
    direction TEXT NOT NULL CHECK(NET_LinkDirectionValue)
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> networkRef NET_NetworkReference [0..*] as ref
  }
  Abstract Class <<featureType>> "TransportLinkSequence" {
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>> geographicalName_language TEXT
    <<voidable>> geographicalName_spelling_text TEXT
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    link NET_DirectedLink [1..*] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "TN_RestrictionForVehicles" {
    * description = "Restriction on vehicles on a transport element."
    * identifier = "Common Transport Elements::RestrictionForVehicles"
    * tableName = "TN_RestrictionForVehicles"
    id INTEGER NOT NULL PRIMARY KEY
    measure TEXT NOT NULL
    measure_uom TEXT NOT NULL CHECK(GML_UomIdentifier)
    restrictionType TEXT NOT NULL CHECK(TN_RestrictionTypeValue)
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> networkRef NET_NetworkReference [0..*] as ref
  }
  Attributes <<featureType>> "TN_MaintenanceAuthority" {
    * description = "The authority responsible for maintenance of the transport element."
    * identifier = "Common Transport Elements::MaintenanceAuthority"
    * tableName = "TN_MaintenanceAuthority"
    authority_date DATE
    authority_level LegislationLevelValue
    authority_link TEXT
    authority_name TEXT NOT NULL
    authority_type TEXT NOT NULL CHECK(BASE2_SimpleCitationType)
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> networkRef NET_NetworkReference [0..*] as ref
  }
  Attributes <<featureType>> "TN_MarkerPost" {
    * description = "Reference marker placed along a route in a transport network, mostly at regular intervals, indicating the distance from the beginning of the route, or some other reference point, to the point where the marker is located.
  
    EXAMPLE Examples of routes along which marker posts can be found are roads, railway lines and navigable waterways."
    * identifier = "Common Transport Elements::MarkerPost"
    * tableName = "TN_MarkerPost"
    geometry POINT NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    location TEXT NOT NULL
    location_uom TEXT NOT NULL CHECK(GML_UomIdentifier)
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>> geographicalName_language TEXT
    <<voidable>> geographicalName_spelling_text TEXT
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
    <<voidable>> route TransportLinkSet [0..1] as ref
  }
  Abstract Class <<featureType>> "TransportPoint" {
    geometry POINT NOT NULL
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>> geographicalName_language TEXT
    <<voidable>> geographicalName_spelling_text TEXT
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
  }
  Abstract Class <<featureType>> "TransportLinkSet" {
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>> geographicalName_language TEXT
    <<voidable>> geographicalName_spelling_text TEXT
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    link_GeneralisedLink BASE_Identifier [1..*] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
    <<voidable>> post TN_MarkerPost [0..*] as ref
  }
  Abstract Class <<featureType>> "TransportNode" {
    geometry : POINT
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>> geographicalName_language TEXT
    <<voidable>> geographicalName_spelling_text TEXT
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
    <<voidable>> spokeEnd_Link BASE_Identifier [0..*] as ref
    <<voidable>> spokeStart_Link BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "TN_AccessRestriction" {
    * description = "A restriction on the access to a transport element."
    * identifier = "Common Transport Elements::AccessRestriction"
    * tableName = "TN_AccessRestriction"
    id INTEGER NOT NULL PRIMARY KEY
    restriction TEXT NOT NULL CHECK(TN_AccessRestrictionValue)
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> networkRef NET_NetworkReference [0..*] as ref
  }
  Abstract Class <<featureType>> "TransportProperty" {
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> networkRef NET_NetworkReference [0..*] as ref
  }
  Constraint Enum <<codeList>> "TN_RestrictionTypeValue" {
    * identifier = "Common Transport Elements::RestrictionTypeValue"
    maximumDoubleAxleWeight
    maximumHeight
    maximumLength
    maximumSingleAxleWeight
    maximumTotalWeight
    maximumTripleAxleWeight
    maximumWidth
  }
  Abstract Class <<featureType>> "TransportLink" {
    centrelineGeometry : CURVE
    fictitious : BOOLEAN
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>> geographicalName_language TEXT
    <<voidable>> geographicalName_spelling_text TEXT
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    endNode_Node BASE_Identifier [0..1] as ref
    inspireId BASE_Identifier [0..1] as ref
    startNode_Node BASE_Identifier [0..1] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
  }
  Constraint Enum <<enumeration>> "TN_TransportTypeValue" {
    * identifier = "Common Transport Elements::TransportTypeValue"
    air
    cable
    rail
    road
    water
  }
  Attributes <<featureType>> "TN_TransportNetwork" {
    * description = "Collection of network elements that belong to a single mode of transport.
  
    NOTE Road, rail, water and air transport are always considered separate transport modes. Even within these four categories, multiple modes of transport can be defined, based on infrastructure, vehicle types, propulsion system, operation and/or other defining characteristics.
  
    EXAMPLE All road transport can be considered one mode of transport for some applications. For other applications, it might be necessary to distinguish between different public road transport networks. Within water transport, marine and inland water transport can be considered to be separate modes of transport for some applications, as they use different types of ships."
    * identifier = "Common Transport Elements::TransportNetwork"
    * tableName = "TN_TransportNetwork"
    id INTEGER NOT NULL PRIMARY KEY
    typeOfTransport TEXT NOT NULL CHECK(TN_TransportTypeValue)
    <<reference>> inspireId INTEGER
    elements_NetworkElement BASE_Identifier [0..*] as ref
    <<voidable>> geographicalName BASE2_SimpleGeographicalName [0..*] as ref
  }
  Abstract Class <<featureType>> "TransportObject" {
    <<voidable>> geographicalName_language TEXT
    <<voidable>> geographicalName_spelling_text TEXT
  }
  Relation "TN_TransportNetwork_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute TN_TransportNetwork#inspireId"
    * tableName = "TN_TransportNetwork_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES TN_TransportNetwork(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
}
Container <<applicationSchema>> "Base Types" {
  * fileName = "Base Types"
  Constraint Enum <<enumeration>> "BASE_VerticalPositionValue" {
    * identifier = "Base Types::VerticalPositionValue"
    onGroundSurface
    suspendedOrElevated
    underground
  }
  Constraint Enum <<codeList>> "BASE_ConditionOfFacilityValue" {
    * identifier = "Base Types::ConditionOfFacilityValue"
    decommissioned
    disused
    functional
    projected
    underConstruction
  }
  Attributes <<dataType>> "BASE_Identifier" {
    * description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    * identifier = "Base Types::Identifier"
    * tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    <<lifeCycleInfo>>, <<voidable>> versionId TEXT
  }
  Metadata "Unknown" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
}
Container <<applicationSchema>> "Base Types 2" {
  * fileName = "Base Types 2"
  Constraint Enum <<enumeration>> "BASE2_SimpleCitationType" {
    CI_Citation
    DocumentCitation
    LegislationCitation
  }
  Attributes <<dataType>> "BASE2_SimpleCitation" {
    * tableName = "BASE2_SimpleCitation"
    date DATE
    id INTEGER NOT NULL PRIMARY KEY
    level LegislationLevelValue
    link TEXT
    name TEXT NOT NULL
    type TEXT NOT NULL CHECK(BASE2_SimpleCitationType)
  }
  Attributes <<dataType>> "BASE2_SimpleGeographicalName" {
    * tableName = "BASE2_SimpleGeographicalName"
    id INTEGER NOT NULL PRIMARY KEY
    language TEXT
    spelling_text TEXT NOT NULL
  }
}
Container "basicTypes" {
  * fileName = "basicTypes"
  Constraint Enum <<enumeration>>, <<enumeration>> "GML_Sign" {
    * identifier = "basicTypes::Sign"
    "+"
    "-"
  }
}
Container <<applicationSchema>> "Network" {
  * fileName = "Network"
  Attributes <<dataType>> "NET_DirectedLink" {
    * description = "A link either in its positive or negative direction."
    * identifier = "Network::DirectedLink"
    * tableName = "NET_DirectedLink"
    direction TEXT NOT NULL CHECK(GML_Sign)
    id INTEGER NOT NULL PRIMARY KEY
    <<reference>> link_Link INTEGER
  }
  Constraint Enum <<codeList>> "NET_LinkDirectionValue" {
    * identifier = "Network::LinkDirectionValue"
    bothDirections
    inDirection
    inOppositeDirection
  }
  Attributes <<dataType>> "NET_NetworkReference" {
    * description = "A reference to a network element."
    * identifier = "Network::NetworkReference"
    * tableName = "NET_NetworkReference"
    id INTEGER NOT NULL PRIMARY KEY
    <<version>>, <<reference>> element_NetworkElement INTEGER
    involves TrafficRelatedEvent [0..*] as ref
  }
  Relation "NET_NetworkReference_element_NetworkElement" {
    * profile = "attributes"
    * relatedReference = "attribute NET_NetworkReference#element_NetworkElement"
    * tableName = "NET_NetworkReference_element_NetworkElement"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES NET_NetworkReference(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "NET_DirectedLink_link_Link" {
    * profile = "attributes"
    * relatedReference = "attribute NET_DirectedLink#link_Link"
    * tableName = "NET_DirectedLink_link_Link"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES NET_DirectedLink(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
}
Package "EA Model" {
  Class "applicationSchema" {}
  Datatype LegislationLevelValue
  
}

Package "Location referencing mechanisms" {
  Class "NodeLocationReference" {
    node_Node BASE_Identifier as ref
    <<voidable>> networkReference BASE2_SimpleCitation [0..1] as ref
  }
}
Container "Units of Measure" {
  * fileName = "Units of Measure"
  Constraint Enum "GML_UomIdentifier" {}
}
