Container <<applicationSchema>>  "Railway Transport Network" {
  Attributes "TN_RA_RailwayStationCode" {
    description = "The unique code assigned to a railway station."
    identifier = "Railway Transport Network::RailwayStationCode"
    tableName = "TN_RA_RailwayStationCode"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    id INTEGER NOT NULL PRIMARY KEY
    stationCode TEXT NOT NULL
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref inspireId: BASE_Identifier[0..1]
    ref networkRef: NET_NetworkReference[0..*]
  }
  Attributes "TN_RA_RailwayElectrification" {
    description = "Indication whether the railway is provided with an electric system to power vehicles moving along it."
    identifier = "Railway Transport Network::RailwayElectrification"
    tableName = "TN_RA_RailwayElectrification"
    beginLifespanVersion: DATETIME [0..1]
    electrified BOOLEAN NOT NULL
    endLifespanVersion: DATETIME [0..1]
    id INTEGER NOT NULL PRIMARY KEY
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref inspireId: BASE_Identifier[0..1]
    ref networkRef: NET_NetworkReference[0..*]
  }
  Constraint Enum "TN_RA_FormOfRailwayNodeValue" {
    identifier = "Railway Transport Network::FormOfRailwayNodeValue"
    junction
    levelCrossing
    pseudoNode
    railwayEnd
    railwayStop
  }
  Attributes "TN_RA_DesignSpeed" {
    description = "The specification of the maximum speed to which a railway line is designed for."
    identifier = "Railway Transport Network::DesignSpeed"
    tableName = "TN_RA_DesignSpeed"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    id INTEGER NOT NULL PRIMARY KEY
    speed Velocity NOT NULL
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref inspireId: BASE_Identifier[0..1]
    ref networkRef: NET_NetworkReference[0..*]
  }
  Attributes "TN_RA_RailwayLinkSequence" {
    description = "A linear spatial object, composed of an ordered collection of railway links, which represents a continuous path in a railway network without any branches. The element has a defined beginning and end and every position on the railway link sequence is identifiable with one single parameter such as length. It describes an element of the railway network, characterized by one or more thematical identifiers and/or properties."
    identifier = "Railway Transport Network::RailwayLinkSequence"
    tableName = "TN_RA_RailwayLinkSequence"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    id INTEGER NOT NULL PRIMARY KEY
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref geographicalName: GN_GeographicalName[0..1]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
    ref link: NET_DirectedLink[1..*]
  }
  Attributes "TN_RA_RailwayNode" {
    description = "A point spatial object which represents a significant point along the railway network or defines an intersection of railway tracks used to describe its connectivity."
    identifier = "Railway Transport Network::RailwayNode"
    tableName = "TN_RA_RailwayNode"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    formOfNode TEXT CHECK(TN_RA_FormOfRailwayNodeValue)
    geometry: POINT
    id INTEGER NOT NULL PRIMARY KEY
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref geographicalName: GN_GeographicalName[0..1]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
    ref spokeEnd: Link[0..*] inv endNode[0..1]
    ref spokeStart: Link[0..*] inv startNode[0..1]
  }
  Attributes "TN_RA_RailwayYardArea" {
    description = "An area spatial object which is used to represent the topographical limits of a railway yard.
  
    DEFINITION Railway yard: An area crossed by a number of parallel railway tracks (usually more than two) interconnected between them, which are used to stop trains in order to load / unload freight without interrupting the traffic of a main railway line."
    identifier = "Railway Transport Network::RailwayYardArea"
    tableName = "TN_RA_RailwayYardArea"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    geometry: GM_Surface
    id INTEGER NOT NULL PRIMARY KEY
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref geographicalName: GN_GeographicalName[0..1]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
  }
  Attributes "TN_RA_RailwayStationNode" {
    description = "A railway node which represents the location of a railway station along the railway network."
    identifier = "Railway Transport Network::RailwayStationNode"
    tableName = "TN_RA_RailwayStationNode"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    formOfNode TEXT CHECK(TN_RA_FormOfRailwayNodeValue)
    geometry: POINT
    id INTEGER NOT NULL PRIMARY KEY
    numberOfPlatforms INTEGER
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref geographicalName: GN_GeographicalName[0..1]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
    ref spokeEnd: Link[0..*] inv endNode[0..1]
    ref spokeStart: Link[0..*] inv startNode[0..1]
  }
  Constraint Enum "TN_RA_MinMaxTrackValue" {
    identifier = "Railway Transport Network::MinMaxTrackValue"
    average
    maximum
    minimum
  }
  Attributes "TN_RA_RailwayStationArea" {
    description = "An area spatial object which is used to represent the topographical limits of the facilities of a railway station (buildings, railway yards, installations and equipment) devoted to carry out railway station operations."
    identifier = "Railway Transport Network::RailwayStationArea"
    tableName = "TN_RA_RailwayStationArea"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    geometry: GM_Surface
    id INTEGER NOT NULL PRIMARY KEY
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref geographicalName: GN_GeographicalName[0..1]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
  }
  Attributes "TN_RA_RailwayUse" {
    description = "The current use of the railway."
    identifier = "Railway Transport Network::RailwayUse"
    tableName = "TN_RA_RailwayUse"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    id INTEGER NOT NULL PRIMARY KEY
    use TEXT NOT NULL CHECK(TN_RA_RailwayUseValue)
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref inspireId: BASE_Identifier[0..1]
    ref networkRef: NET_NetworkReference[0..*]
  }
  Attributes "TN_RA_RailwayLink" {
    description = "A linear spatial object that describes the geometry and connectivity of a railway network between two points in the network.
  
    NOTE Railway links can be used to represent stretches of railway with one or multiple tracks."
    identifier = "Railway Transport Network::RailwayLink"
    tableName = "TN_RA_RailwayLink"
    beginLifespanVersion: DATETIME [0..1]
    centrelineGeometry: CURVE
    endLifespanVersion: DATETIME [0..1]
    fictitious BOOLEAN
    id INTEGER NOT NULL PRIMARY KEY
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref endNode: Node[0..1] inv spokeEnd[0..*]
    ref geographicalName: GN_GeographicalName[0..1]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
    ref startNode: Node[0..1] inv spokeStart[0..*]
    ref ThoroughfareName inv transportLink[0..*]
  }
  Constraint Enum "TN_RA_TrackGaugeCategoryValue" {
    identifier = "Railway Transport Network::TrackGaugeCategoryValue"
    broad
    narrow
    notApplicable
    standard
  }
  Attributes "TN_RA_RailwayType" {
    description = "The type of railway transport the line is designed for."
    identifier = "Railway Transport Network::RailwayType"
    tableName = "TN_RA_RailwayType"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    id INTEGER NOT NULL PRIMARY KEY
    type TEXT NOT NULL CHECK(TN_RA_RailwayTypeValue)
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref inspireId: BASE_Identifier[0..1]
    ref networkRef: NET_NetworkReference[0..*]
  }
  Attributes "TN_RA_RailwayLine" {
    description = "A collection of railway link sequences and or individual railway links that are characterized by one or more thematical identifiers and/or properties.
  
    EXAMPLE Railway lines characterized by a specific identification code, used by railroad companies or tourist railways, identified by a specific name."
    identifier = "Railway Transport Network::RailwayLine"
    tableName = "TN_RA_RailwayLine"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    id INTEGER NOT NULL PRIMARY KEY
    railwayLineCode TEXT
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref geographicalName: GN_GeographicalName[0..1]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
    ref post: TN_MarkerPost[0..*] inv route[0..1]
  }
  Constraint Enum "TN_RA_RailwayUseValue" {
    identifier = "Railway Transport Network::RailwayUseValue"
    carShuttle
    cargo
    mixed
    passengers
  }
  Attributes "TN_RA_NominalTrackGauge" {
    description = "The nominal distance between the two outer rails (gauge) of a railway track."
    identifier = "Railway Transport Network::NominalTrackGauge"
    tableName = "TN_RA_NominalTrackGauge"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    id INTEGER NOT NULL PRIMARY KEY
    nominalGauge Measure
    nominalGaugeCategory TEXT CHECK(TN_RA_TrackGaugeCategoryValue)
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref inspireId: BASE_Identifier[0..1]
    ref networkRef: NET_NetworkReference[0..*]
  }
  Attributes "TN_RA_RailwayArea" {
    description = "Surface occupied by a railway track, including ballast."
    identifier = "Railway Transport Network::RailwayArea"
    tableName = "TN_RA_RailwayArea"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    geometry: GM_Surface
    id INTEGER NOT NULL PRIMARY KEY
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref geographicalName: GN_GeographicalName[0..1]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
  }
  Constraint Enum "TN_RA_RailwayTypeValue" {
    identifier = "Railway Transport Network::RailwayTypeValue"
    cogRailway
    funicular
    magneticLevitation
    metro
    monorail
    suspendedRail
    train
    tramway
  }
  Attributes "TN_RA_NumberOfTracks" {
    description = "The number of tracks for a railway stretch.
  
    This is dependent on the resolution of the data."
    identifier = "Railway Transport Network::NumberOfTracks"
    tableName = "TN_RA_NumberOfTracks"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    id INTEGER NOT NULL PRIMARY KEY
    minMaxNumberOfTracks TEXT CHECK(TN_RA_MinMaxTrackValue)
    numberOfTracks INTEGER NOT NULL
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref inspireId: BASE_Identifier[0..1]
    ref networkRef: NET_NetworkReference[0..*]
  }
  Attributes "TN_RA_RailwayYardNode" {
    description = "A railway node which occurs within a railway yard area.
  
    DEFINTION Railway yard: An area crossed by a number of parallel railway tracks (usually more than two) interconnected between them, which are used to stop trains in order to load / unload freight without interrupting the traffic of a main railway line."
    identifier = "Railway Transport Network::RailwayYardNode"
    tableName = "TN_RA_RailwayYardNode"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    formOfNode TEXT CHECK(TN_RA_FormOfRailwayNodeValue)
    geometry: POINT
    id INTEGER NOT NULL PRIMARY KEY
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref geographicalName: GN_GeographicalName[0..1]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
    ref spokeEnd: Link[0..*] inv endNode[0..1]
    ref spokeStart: Link[0..*] inv startNode[0..1]
  }
  Metadata "Unknown" {
    metadata = ""
    mimeType = "text/xml"
    scope = "attribute"
    standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    metadata = ""
    mimeType = "text/xml"
    scope = "attributeType"
    standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    metadata = ""
    mimeType = "text/xml"
    scope = "attribute"
    standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    metadata = ""
    mimeType = "text/xml"
    scope = "attributeType"
    standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Relation "NET_NetworkReference_involves" {
    profile = "attributes"
    tableName = "NET_NetworkReference_involves"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES NET_NetworkReference(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HH_SA_TrafficRelatedEvent(id)
  }
  Relation "GN_GeographicalName_spelling" {
    profile = "attributes"
    tableName = "GN_GeographicalName_spelling"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES GN_GeographicalName(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GN_SpellingOfName(id)
  }
  Relation "NET_Network_geographicalName" {
    profile = "attributes"
    tableName = "NET_Network_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES NET_Network(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GN_GeographicalName(id)
  }
  Relation "HH_SA_Event_additionalInformation" {
    profile = "attributes"
    relatedReference = "HH_SA_Event#additionalInformation"
    tableName = "HH_SA_Event_additionalInformation"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HH_SA_Event(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HH_SA_EventInformation(id)
  }
  Relation "HH_SA_Event_part" {
    profile = "attributes"
    relatedReference = "HH_SA_Event#aggregation"
    tableName = "HH_SA_Event_part"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HH_SA_Event(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HH_SA_Event(id)
  }
  Relation "HH_SA_Event_inspireId" {
    profile = "attributes"
    relatedReference = "HH_SA_Event#inspireId"
    tableName = "HH_SA_Event_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HH_SA_Event(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "HH_SA_EventConsequence_event" {
    profile = "attributes"
    relatedReference = "HH_SA_EventConsequence#event"
    tableName = "HH_SA_EventConsequence_event"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HH_SA_EventConsequence(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HH_SA_Event(id)
  }
  Relation "AU_admUnit_boundary" {
    profile = "features"
    tableName = "AU_admUnit_boundary"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_AdministrativeUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES AU_AdministrativeBoundary(id)
  }
  Relation "AU_AdministrativeUnit_administeredBy" {
    profile = "features"
    tableName = "AU_AdministrativeUnit_administeredBy"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_AdministrativeUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES AU_AdministrativeUnit(id)
  }
  Relation "AU_AdministrativeUnit_lowerLevelUnit" {
    profile = "features"
    relatedReference = "AU_AdministrativeUnit#upperLevelUnit"
    tableName = "AU_AdministrativeUnit_lowerLevelUnit"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_AdministrativeUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES AU_AdministrativeUnit(id)
  }
  Relation "AU_AdministrativeUnit_inspireId" {
    profile = "attributes"
    relatedReference = "AU_AdministrativeUnit#inspireId"
    tableName = "AU_AdministrativeUnit_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_AdministrativeUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "AU_AdministrativeUnit_name" {
    profile = "attributes"
    tableName = "AU_AdministrativeUnit_name"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_AdministrativeUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GN_GeographicalName(id)
  }
  Relation "AU_AdministrativeUnit_nationalLevelName" {
    profile = "attributes"
    tableName = "AU_AdministrativeUnit_nationalLevelName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_AdministrativeUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GMD_LocalisedCharacterString(id)
  }
  Relation "AU_AdministrativeUnit_residenceOfAuthority" {
    profile = "features"
    tableName = "AU_AdministrativeUnit_residenceOfAuthority"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_AdministrativeUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES AU_ResidenceOfAuthority(id)
  }
  Relation "AU_AdministrativeBoundary_inspireId" {
    profile = "attributes"
    relatedReference = "AU_AdministrativeBoundary#inspireId"
    tableName = "AU_AdministrativeBoundary_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_AdministrativeBoundary(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "AU_AdministrativeBoundary_nationalLevel" {
    profile = "attributes"
    tableName = "AU_AdministrativeBoundary_nationalLevel"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_AdministrativeBoundary(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES AU_AdministrativeHierarchyLevel(id)
  }
  Relation "AU_Condominium_admUnit" {
    profile = "features"
    tableName = "AU_Condominium_admUnit"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_Condominium(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES AU_AdministrativeUnit(id)
  }
  Relation "AU_Condominium_inspireId" {
    profile = "attributes"
    relatedReference = "AU_Condominium#inspireId"
    tableName = "AU_Condominium_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_Condominium(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "AU_Condominium_name" {
    profile = "attributes"
    tableName = "AU_Condominium_name"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_Condominium(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GN_GeographicalName(id)
  }
  Relation "AU_ResidenceOfAuthority_name" {
    profile = "attributes"
    relatedReference = "AU_ResidenceOfAuthority#name"
    tableName = "AU_ResidenceOfAuthority_name"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_ResidenceOfAuthority(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GN_GeographicalName(id)
  }
  Attributes "NET_NetworkReference" {
    description = "A reference to a network element."
    identifier = "Network::NetworkReference"
    tableName = "NET_NetworkReference"
    id INTEGER NOT NULL PRIMARY KEY
  }
  Attributes "BASE_Identifier" {
    description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    identifier = "Base Types::Identifier"
    tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    versionId TEXT
  }
  Attributes "GN_GeographicalName" {
    description = "Proper noun applied to a real world entity."
    identifier = "Geographical Names::GeographicalName"
    tableName = "GN_GeographicalName"
    grammaticalGender TEXT CHECK(GN_GrammaticalGenderValue)
    grammaticalNumber TEXT CHECK(GN_GrammaticalNumberValue)
    id INTEGER NOT NULL PRIMARY KEY
    language TEXT
    nameStatus TEXT CHECK(GN_NameStatusValue)
    nativeness TEXT CHECK(GN_NativenessValue)
    pronunciation_pronunciationIPA TEXT
    pronunciation_pronunciationSoundLink TEXT
    sourceOfName TEXT
  }
  Attributes "NET_DirectedLink" {
    description = "A link either in its positive or negative direction."
    identifier = "Network::DirectedLink"
    tableName = "NET_DirectedLink"
    direction Sign NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
  }
  Attributes "NET_Network" {
    description = "A network is a collection of network elements.
  
    The reason for collecting certain elements in a certain network may vary (e.g. connected elements for the same mode of transport)"
    identifier = "Network::Network"
    tableName = "NET_Network"
    id INTEGER NOT NULL PRIMARY KEY
    ref elements: NetworkElement[0..*] inv inNetwork[0..*]
  }
  Attributes "TN_MarkerPost" {
    description = "Reference marker placed along a route in a transport network, mostly at regular intervals, indicating the distance from the beginning of the route, or some other reference point, to the point where the marker is located.
  
    EXAMPLE Examples of routes along which marker posts can be found are roads, railway lines and navigable waterways."
    identifier = "Common Transport Elements::MarkerPost"
    tableName = "TN_MarkerPost"
    beginLifespanVersion: DATETIME [0..1]
    endLifespanVersion: DATETIME [0..1]
    geometry: POINT
    id INTEGER NOT NULL PRIMARY KEY
    location TEXT NOT NULL
    location_uom TEXT NOT NULL CHECK(GML_UomIdentifier)
    validFrom: DATETIME [0..1]
    validTo: DATETIME [0..1]
    ref geographicalName: GN_GeographicalName[0..1]
    ref inNetwork: NET_Network[0..*] inv elements[0..*]
    ref inspireId: BASE_Identifier[0..1]
    ref route: TransportLinkSet[0..1] inv post[0..*]
  }
  Attributes "HH_SA_TrafficRelatedEvent" {
    description = "An unintentional event arising by a traffic facility along a traffic network harming humans, property or the environment."
    identifier = "Safety::TrafficRelatedEvent"
    tableName = "HH_SA_TrafficRelatedEvent"
    additionalInformation INTEGER
    aggregation INTEGER
    beginLifespanVersion DATETIME
    endLifespanVersion DATETIME
    endTime DATETIME
    id INTEGER NOT NULL PRIMARY KEY
    inspireId INTEGER
    isIntentional BOOLEAN
    isMajor BOOLEAN
    locationUnit LocationUnitType NOT NULL
    startTime DATETIME NOT NULL
    trafficType TEXT NOT NULL CHECK(HH_SA_TrafficTypeValue)
    ref causeOfEvent: PT_FreeText[0..*]
    ref sourceReference: CI_Citation[0..*]
  }
  Attributes "GN_SpellingOfName" {
    description = "Proper way of writing a name.
  
    SOURCE Adapted from [UNGEGN Manual 2006].
  
    NOTE Proper spelling means the writing of a name with the correct capitalisation and the correct letters and diacritics present in an accepted standard order."
    identifier = "Geographical Names::SpellingOfName"
    tableName = "GN_SpellingOfName"
    id INTEGER NOT NULL PRIMARY KEY
    script TEXT
    text TEXT NOT NULL
    transliterationScheme TEXT
  }
  Attributes "HH_SA_Event" {
    description = "Unintentional or intentional accident or incident harming  or damaging humans, properties or the environment."
    identifier = "Safety::Event"
    tableName = "HH_SA_Event"
    additionalInformation INTEGER
    aggregation INTEGER
    beginLifespanVersion DATETIME
    endLifespanVersion DATETIME
    endTime DATETIME
    id INTEGER NOT NULL PRIMARY KEY
    inspireId INTEGER
    isIntentional BOOLEAN
    isMajor BOOLEAN
    locationUnit LocationUnitType NOT NULL
    startTime DATETIME NOT NULL
    ref causeOfEvent: PT_FreeText[0..*]
    ref sourceReference: CI_Citation[0..*]
  }
  Attributes "HH_SA_EventInformation" {
    description = "All available information about the  event."
    identifier = "Safety::EventInformation"
    tableName = "HH_SA_EventInformation"
    id INTEGER NOT NULL PRIMARY KEY
  }
  Attributes "HH_SA_EventConsequence" {
    description = "The harm an event caused for humans, propriety."
    identifier = "Safety::EventConsequence"
    tableName = "HH_SA_EventConsequence"
    consequenceType TEXT NOT NULL CHECK(HH_SA_ConsequenceTypeValue)
    event INTEGER
    id INTEGER NOT NULL PRIMARY KEY
    value DOUBLE NOT NULL
  }
  Feature "AU_AdministrativeUnit" {
    description = "Unit of administration where a Member State has and/or exercises jurisdictional rights, for local, regional and national governance."
    identifier = "AdministrativeUnits::AdministrativeUnit"
    tableName = "AU_AdministrativeUnit"
    beginLifespanVersion DATETIME
    country TEXT NOT NULL CHECK(BASE2_CountryCode)
    endLifespanVersion DATETIME
    geometry MULTISURFACE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    inspireId INTEGER
    nationalCode TEXT NOT NULL
    nationalLevel TEXT NOT NULL CHECK(AU_AdministrativeHierarchyLevel)
    upperLevelUnit INTEGER
  }
  Feature "AU_AdministrativeBoundary" {
    description = "A line of demarcation between administrative units."
    identifier = "AdministrativeUnits::AdministrativeBoundary"
    tableName = "AU_AdministrativeBoundary"
    beginLifespanVersion DATETIME
    country TEXT NOT NULL CHECK(BASE2_CountryCode)
    endLifespanVersion DATETIME
    geometry CURVE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    inspireId INTEGER
    legalStatus TEXT CHECK(AU_LegalStatusValue) DEFAULT 'agreed'
    technicalStatus TEXT CHECK(AU_TechnicalStatusValue) DEFAULT 'edgeMatched'
  }
  Attributes "GMD_LocalisedCharacterString" {
    identifier = "Cultural and linguistic adapdability::LocalisedCharacterString"
    tableName = "GMD_LocalisedCharacterString"
    characterSetCode TEXT CHECK(GMD_MD_CharacterSetCode)
    country TEXT CHECK(GMD_CountryCode)
    id INTEGER NOT NULL PRIMARY KEY
    languageCode TEXT NOT NULL CHECK(GMD_LanguageCode)
    text TEXT NOT NULL
  }
  Feature "AU_ResidenceOfAuthority" {
    description = "Data type representing the name and position of a residence of authority."
    identifier = "AdministrativeUnits::ResidenceOfAuthority"
    tableName = "AU_ResidenceOfAuthority"
    geometry POINT
    id INTEGER NOT NULL PRIMARY KEY
    name INTEGER
  }
  Attributes "AU_AdministrativeHierarchyLevel" {
    description = "Levels of administration in the national administrative hierarchy. This code list reflects the level in the hierarchical pyramid of the administrative structures, which is based on geometric aggregation of territories and does not necessarily describe the subordination between the related administrative authorities."
    identifier = "AdministrativeUnits::AdministrativeHierarchyLevel"
    tableName = "AU_AdministrativeHierarchyLevel"
    id INTEGER NOT NULL PRIMARY KEY
    value TEXT NOT NULL CHECK(AU_AdministrativeHierarchyLevel)
  }
  Feature "AU_Condominium" {
    description = "An administrative area established independently to any national administrative division of territory  and administered by two or more countries.
  
    NOTE Condominium is not a part of any national administrative hierarchy of territory division in Member State."
    identifier = "AdministrativeUnits::Condominium"
    tableName = "AU_Condominium"
    beginLifespanVersion DATETIME
    endLifespanVersion DATETIME
    geometry MULTISURFACE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    inspireId INTEGER
  }
  Constraint Enum "GN_NativenessValue" {
    identifier = "Geographical Names::NativenessValue"
    endonym
    exonym
  }
  Constraint Enum "GN_NameStatusValue" {
    identifier = "Geographical Names::NameStatusValue"
    historical
    official
    other
    standardised
  }
  Constraint Enum "GN_GrammaticalGenderValue" {
    identifier = "Geographical Names::GrammaticalGenderValue"
    common
    feminine
    masculine
    neuter
  }
  Constraint Enum "GN_GrammaticalNumberValue" {
    identifier = "Geographical Names::GrammaticalNumberValue"
    dual
    plural
    singular
  }
  Constraint Enum "GML_UomIdentifier" {}
  Constraint Enum "HH_SA_TrafficTypeValue" {
    identifier = "Safety::TrafficTypeValue"
  }
  Constraint Enum "HH_SA_ConsequenceTypeValue" {
    identifier = "Safety::ConsequenceTypeValue"
  }
  Constraint Enum "BASE2_CountryCode" {
    identifier = "Base Types 2::CountryCode"
    AT
    BE
    BG
    CY
    CZ
    DE
    DK
    EE
    EL
    ES
    FI
    FR
    HR
    HU
    IE
    IT
    LT
    LU
    LV
    MT
    NL
    PL
    PT
    RO
    SE
    SI
    SK
    TR
    UK
  }
  Constraint Enum "AU_AdministrativeHierarchyLevel" {
    identifier = "AdministrativeUnits::AdministrativeHierarchyLevel"
    1stOrder
    2ndOrder
    3rdOrder
    4thOrder
    5thOrder
    6thOrder
  }
  Constraint Enum "AU_LegalStatusValue" {
    identifier = "AdministrativeUnits::LegalStatusValue"
    agreed
    notAgreed
  }
  Constraint Enum "AU_TechnicalStatusValue" {
    identifier = "AdministrativeUnits::TechnicalStatusValue"
    edgeMatched
    notEdgeMatched
  }
  Constraint Enum "GMD_LanguageCode" {
    identifier = "ISO 00639 Language Codes::LanguageCode"
    Afrikaans
    Albanian
    Arabic
    Basque
    Belarusian
    Bulgarian
    Catalan
    Chinese
    Croatian
    Czech
    Danish
    Dutch
    English
    Estonian
    Faeroese
    Finnish
    French
    French(Canadian)
    German
    Greek
    Hawaian
    Hebrew
    Hungarian
    Icelandic
    Indonesian
    Italian
    Japanese
    Korean
    Latvian
    Lithuanian
    Malaysian
    Norwegian
    Polish
    Portuguese
    Romanian
    Russian
    Serbian
    Slovak
    Slovenian
    Spanish
    Swahili
    Swedish
    Turkish
    Ukranian
  }
  Constraint Enum "GMD_CountryCode" {
    identifier = "ISO 03166 Country Codes::CountryCode"
  }
  Constraint Enum "GMD_MD_CharacterSetCode" {
    identifier = "Identification information::MD_CharacterSetCode"
    (reservedforfutureuse)
    8859part1
    8859part10
    8859part11
    8859part13
    8859part14
    8859part15
    8859part16
    8859part2
    8859part3
    8859part4
    8859part5
    8859part6
    8859part7
    8859part8
    8859part9
    GB2312
    big5
    ebcdic
    eucJP
    eucKR
    jis
    shiftJIS
    ucs2
    ucs4
    usAscii
    utf16
    utf7
    utf8
  }
  Attributes "GMD_CI_PresentationFormCode" {
    description = "Mode in which the data is represented"
    identifier = "Citation and responsible party information::CI_PresentationFormCode"
    tableName = "GMD_CI_PresentationFormCode"
    id INTEGER NOT NULL PRIMARY KEY
    value TEXT NOT NULL CHECK(GMD_CI_PresentationFormCode)
  }
  Constraint Enum "GMD_CI_DateTypeCode" {
    identifier = "Citation and responsible party information::CI_DateTypeCode"
    creation
    publication
    revision
  }
  Constraint Enum "GMD_CI_RoleCode" {
    identifier = "Citation and responsible party information::CI_RoleCode"
    author
    custodian
    distributor
    originator
    owner
    pointOfContact
    principalInvestigator
    processor
    publisher
    resourceProvider
    user
  }
  Constraint Enum "GMD_CI_PresentationFormCode" {
    identifier = "Citation and responsible party information::CI_PresentationFormCode"
    documentDigital
    documentHardcopy
    imageDigital
    imageHardcopy
    mapDigital
    mapHardcopy
    modelDigital
    modelHardcopy
    profileDigital
    profileHardcopy
    tableDigital
    tableHardcopy
    videoDigital
    videoHardcopy
  }
  Constraint Enum "GMD_CI_OnLineFunctionCode" {
    identifier = "Citation and responsible party information::CI_OnLineFunctionCode"
    download
    information
    offlineAccess
    order
    search
  }
}
