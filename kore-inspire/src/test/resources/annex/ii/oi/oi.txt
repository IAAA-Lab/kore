Container <<applicationSchema>> "Orthoimagery" {
  * fileName = "Orthoimagery"
  Attributes <<featureType>> "OI_AggregatedMosaicElement" {
    * description = "Mosaic element relating to several input images that share the same acquisition time at a given level of definition (e.g. day, month).
  
    NOTE The geometry of an aggregated mosaic element corresponds to the union of the contributing areas, in the mosaic, of several input images."
    * identifier = "Orthoimagery::AggregatedMosaicElement"
    * tableName = "OI_AggregatedMosaicElement"
    geometry MULTISURFACE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    <<reference>> inspireId INTEGER
  }
  Feature <<featureType>> "OI_OrthoimageCoverage" {
    * description = "Raster image of the Earth surface that has been geometrically corrected ("orthorectified") to remove distortion caused by differences in elevation, sensor tilt and, optionally, by sensor optics.
  
    NOTE 1 An orthoimage coverage is a continuous coverage based on a rectified quadrilateral grid. It is provided with an interpolation method to evaluate value records at any direct position within its domain.
  
    NOTE 2 An orthoimage coverage can be derived from one single input image or from different input images which have been mosaicked and merged together.
  
    NOTE 3 An orthoimage coverage may be an aggregation of subsets extracted from other orthoimage coverages. For the avoidance of data duplication, this kind of aggregated orthoimage is dynamically constructed thanks to references to the contributing orthoimage coverages ."
    * identifier = "Orthoimagery::OrthoimageCoverage"
    * tableName = "OI_OrthoimageCoverage"
    beginLifespanVersion_anyOther_indeterminatePosition TEXT CHECK(TRS_TM_IndeterminateValue)
    coverageFunction_ruleDefinition TEXT
    coverageFunction_ruleReference TEXT
    endLifespanVersion_anyOther_indeterminatePosition TEXT CHECK(TRS_TM_IndeterminateValue)
    id INTEGER NOT NULL PRIMARY KEY
    interpolationType TEXT NOT NULL CHECK(OI_InterpolationMethodValue) DEFAULT 'nearestneighbor'
    metadata _Any
    rangeSet _Any
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion_date8601 DATE
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion_dateTime8601 DATETIME
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion_time8601 TEXT
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion_time8601_uom TEXT CHECK(GML_UomIdentifier)
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion_date8601 DATE
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion_dateTime8601 DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion_time8601 TEXT
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion_time8601_uom TEXT CHECK(GML_UomIdentifier)
    <<reference>> coverageFunction_gridFunction INTEGER
    <<reference>> domainSet INTEGER
    <<voidable>> footprint MULTISURFACE
    <<reference>> inspireId INTEGER
    <<voidable>> name TEXT
    <<reference>> rangeType INTEGER
    domainExtent EX_Extent [1..*] as ref
  }
  Attributes <<featureType>> "OI_SingleMosaicElement" {
    * description = "Mosaic element relating to a single input image.
  
    NOTE The geometry of a single mosaic element corresponds exactly to the contributing area, in the mosaic, of the single input image."
    * identifier = "Orthoimagery::SingleMosaicElement"
    * tableName = "OI_SingleMosaicElement"
    geometry MULTISURFACE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>> imageSourceReference TEXT
    <<reference>> inspireId INTEGER
  }
  Feature <<dataType>> "OI_OrthoimageAggregation" {
    * description = "Geometrical characteristics of the orthoimage aggregation."
    * identifier = "Orthoimagery::OrthoimageAggregation"
    * tableName = "OI_OrthoimageAggregation"
    conID = "EAID_B8ACC2DD_B106_4e19_ACED_53E6E26FDDC6"
    contributingFootprint MULTISURFACE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
  }
  Constraint Enum <<codeList>> "OI_InterpolationMethodValue" {
    * identifier = "Orthoimagery::InterpolationMethodValue"
  }
  Abstract Class <<featureType>> "MosaicElement" {
    geometry : MULTISURFACE
    inspireId BASE_Identifier [0..1] as ref
  }
  Relation "OI_AggregatedMosaicElement_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute OI_AggregatedMosaicElement#inspireId"
    * tableName = "OI_AggregatedMosaicElement_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES OI_AggregatedMosaicElement(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "OI_OrthoimageCoverage_mosaicElement_MosaicElement" {
    * profile = "attributes"
    * tableName = "OI_OrthoimageCoverage_mosaicElement_MosaicElement"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES OI_OrthoimageCoverage(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "OI_OrthoimageCoverage_contributingOrthoimageCoverage" {
    * profile = "features"
    * tableName = "OI_OrthoimageCoverage_contributingOrthoimageCoverage"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES OI_OrthoimageCoverage(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES OI_OrthoimageCoverage(id)
  }
  Relation "OI_OrthoimageCoverage_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute OI_OrthoimageCoverage#inspireId"
    * tableName = "OI_OrthoimageCoverage_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES OI_OrthoimageCoverage(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "OI_OrthoimageCoverage_domainSet" {
    * profile = "attributes"
    * relatedReference = "attribute OI_OrthoimageCoverage#domainSet"
    * tableName = "OI_OrthoimageCoverage_domainSet"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES OI_OrthoimageCoverage(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES _Any(id)
  }
  Relation "OI_OrthoimageCoverage_rangeSet" {
    * profile = "attributes"
    * tableName = "OI_OrthoimageCoverage_rangeSet"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES OI_OrthoimageCoverage(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES _Any(id)
  }
  Relation "OI_OrthoimageCoverage_coverageFunction_gridFunction" {
    * profile = "attributes"
    * relatedReference = "attribute OI_OrthoimageCoverage#coverageFunction_gridFunction"
    * tableName = "OI_OrthoimageCoverage_coverageFunction_gridFunction"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES OI_OrthoimageCoverage(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GMLCOV_GridFunction(id)
  }
  Relation "OI_OrthoimageCoverage_metadata" {
    * profile = "attributes"
    * tableName = "OI_OrthoimageCoverage_metadata"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES OI_OrthoimageCoverage(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES _Any(id)
  }
  Relation "OI_OrthoimageCoverage_rangeType" {
    * profile = "attributes"
    * relatedReference = "attribute OI_OrthoimageCoverage#rangeType"
    * tableName = "OI_OrthoimageCoverage_rangeType"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES OI_OrthoimageCoverage(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES _RecordType(id)
  }
  Relation "OI_SingleMosaicElement_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute OI_SingleMosaicElement#inspireId"
    * tableName = "OI_SingleMosaicElement_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES OI_SingleMosaicElement(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
}
Container "Temporal Reference System" {
  * fileName = "Temporal Reference System"
  Constraint Enum <<enumeration>> "TRS_TM_IndeterminateValue" {
    * identifier = "Temporal Reference System::TM_IndeterminateValue"
    after
    before
    name
    now
    unknow
  }
}
Container <<applicationSchema>> "Base Types 2" {
  * fileName = "Base Types 2"
  Constraint Enum <<enumeration>> "BASE2_SimpleCitationType" {
    CI_Citation
    DocumentCitation
    LegislationCitation
  }
}
Container "Quadrilateral Grid" {
  * fileName = "Quadrilateral Grid"
  Constraint Enum <<codeList>> "CIS_CV_SequenceType" {
    * identifier = "Quadrilateral Grid::CV_SequenceType"
    CantorDiagonal
    Hilbert
    Morton
    boustrophedonic
    linear
    spiral
  }
}
Container "Data quality information" {
  * fileName = "Data quality information"
  Constraint Enum <<codeList>> "GMD_DQ_EvaluationMethodTypeCode" {
    * identifier = "Data quality information::DQ_EvaluationMethodTypeCode"
    directExternal
    directInternal
    indirect
  }
}
Container "Records and Class Metadata" {
  * fileName = "Records and Class Metadata"
  Attributes <<type>>, <<type>> "_Any" {
    * description = "<UsedBy>
  
    <NameSpace>ISO 19103 Conceptual Schema Language</NameSpace>
  
    <Class>Record</Class>
  
    <Package>Records and Class Metadata</Package>
  
    <Operation>locate</Operation>
  
    <Parameter>Return</Parameter>
  
    <Type>Any</Type>
  
    <UsedBy>"
    * identifier = "Records and Class Metadata::Any"
    * tableName = "_Any"
    id INTEGER NOT NULL PRIMARY KEY
  }
  Attributes <<type>>, <<type>> "_Type" {
    * description = "Type is used here for as a generic concept for any metalanguage description of an object class."
    * identifier = "Records and Class Metadata::Type"
    * tableName = "_Type"
    id INTEGER NOT NULL PRIMARY KEY
    typeName_aName TEXT NOT NULL
    schema Schema [0..*] as ref
  }
  Attributes <<type>>, <<type>> "_RecordType" {
    * description = "A RecordType is a look up mechanism that associates AttributeNames to TypeNames. AttributeNames are locally mapped. TypeNames are most often either primitives, or other types in the same schema as this record. Because the RecordType can control the structure of a set of Records, it is essentially a metaclass for that set of records view as a class.
  
    A RecordType is a NameSpace for its included attributeTypes."
    * identifier = "Records and Class Metadata::RecordType"
    * tableName = "_RecordType"
    id INTEGER NOT NULL PRIMARY KEY
    typeName_aName TEXT NOT NULL
    <<reference>> memberType INTEGER
    record Record [0..*] as ref
    schema Schema [0..*] as ref
  }
  Relation "_RecordType_memberType" {
    * profile = "attributes"
    * relatedReference = "attribute _RecordType#memberType"
    * tableName = "_RecordType_memberType"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES _RecordType(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES _Type(id)
  }
}
Container <<applicationSchema>> "Base Types" {
  * fileName = "Base Types"
  Attributes <<dataType>> "BASE_Identifier" {
    * description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    * identifier = "Base Types::Identifier"
    * tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    <<lifeCycleInfo>>, <<voidable>> versionId TEXT
  }
  Metadata "Unknown" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
}
Package "Extent information" {
  Class "EX_Extent" {
    RationalRose$Java:ConstructorIs = "public"
    RationalRose$Java:Final = "False"
    RationalRose$Java:GenerateDefaultConstructor = "True"
    RationalRose$Java:GenerateFinalizer = "False"
    RationalRose$Java:GenerateInstanceInitializer = "False"
    RationalRose$Java:GenerateStaticInitializer = "False"
    RationalRose$Oracle8:CollectionOfREFS = "False"
    RationalRose$Visual Basic:CollectionClass = "Collection"
    RationalRose$Visual Basic:Creatable = "(221)"
    RationalRose$Visual Basic:GenerateInitialization = "False"
    RationalRose$Visual Basic:GenerateTermination = "False"
    RationalRose$Visual Basic:OptionBase = "(none)"
    RationalRose$Visual Basic:OptionCompare = "(none)"
    RationalRose$Visual Basic:OptionExplicit = "True"
    description : TEXT [0..1]
    geographicElement_EX_GeographicExtent BASE_Identifier [0..*] as ref
  }
}
Container <<applicationSchema>> "Coverages (Domain and Range)" {
  * fileName = "Coverages (Domain and Range)"
  Attributes <<dataType>> "GMLCOV_GridFunction" {
    * description = "An explicit mapping rule for grid geometries"
    * identifier = "Coverages (Domain and Range)::GridFunction"
    * tableName = "GMLCOV_GridFunction"
    id INTEGER NOT NULL PRIMARY KEY
    sequenceRule_scanDirection <<missing>>
    sequenceRule_type TEXT CHECK(CIS_CV_SequenceType) DEFAULT 'linear'
    <<array>> startPoints TEXT
  }
}
Package "EA Model" {
  Class "applicationSchema" {}
}

Container "Units of Measure" {
  * fileName = "Units of Measure"
  Constraint Enum "GML_UomIdentifier" {}
}
