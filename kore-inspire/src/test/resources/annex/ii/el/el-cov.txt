Container <<applicationSchema>> "ElevationGridCoverage" {
  * fileName = "ElevationGridCoverage"
  Feature <<dataType>> "EL_COV_ElevationGridCoverageAggregation" {
    * description = "Geometrical characteristics of the elevation grid coverage aggregation."
    * identifier = "ElevationGridCoverage::ElevationGridCoverageAggregation"
    * tableName = "EL_COV_ElevationGridCoverageAggregation"
    conID = "EAID_38457AB3_74A2_4c0d_9D2D_4E8F54C3826F"
    contributingFootprint MULTISURFACE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
  }
  Attributes <<featureType>> "EL_COV_ElevationGridCoverage" {
    * description = "Continuous coverage which uses a systematic tessellation based on a regular rectified quadrilateral grid to cover its domain, where the elevation property value is usually known for each of the grid points forming this domain.
  
    SOURCE Adapted from [ISO 19123:2005]."
    * identifier = "ElevationGridCoverage::ElevationGridCoverage"
    * tableName = "EL_COV_ElevationGridCoverage"
    coverageFunction_ruleDefinition : TEXT [0..1]
    coverageFunction_ruleReference : TEXT [0..1]
    domainSet : Any
    id INTEGER NOT NULL PRIMARY KEY
    metadata : Any [0..*]
    propertyType TEXT NOT NULL CHECK(EL_BAS_ElevationPropertyTypeValue)
    rangeSet : Any [0..*]
    rangeType : RecordType
    surfaceType TEXT NOT NULL CHECK(EL_BAS_SurfaceTypeValue)
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<reference>> inspireId INTEGER
    coverageFunction_gridFunction GMLCOV_GridFunction [0..1] as ref
    domainExtent EX_Extent [1..*] as ref
  }
  Relation "EL_COV_ElevationGridCoverage_contributingElevationGridCoverage" {
    * profile = "attributes"
    * tableName = "EL_COV_ElevationGridCoverage_contributingElevationGridCoverage"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES EL_COV_ElevationGridCoverage(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES EL_COV_ElevationGridCoverage(id)
  }
  Relation "EL_COV_ElevationGridCoverage_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute EL_COV_ElevationGridCoverage#inspireId"
    * tableName = "EL_COV_ElevationGridCoverage_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES EL_COV_ElevationGridCoverage(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
}
Container <<applicationSchema>> "ElevationBaseTypes" {
  * fileName = "ElevationBaseTypes"
  Constraint Enum <<enumeration>> "EL_BAS_SurfaceTypeValue" {
    * identifier = "ElevationBaseTypes::SurfaceTypeValue"
    DSM
    DTM
  }
  Constraint Enum <<enumeration>> "EL_BAS_ElevationPropertyTypeValue" {
    * identifier = "ElevationBaseTypes::ElevationPropertyTypeValue"
    depth
    height
  }
}
Container <<applicationSchema>> "Base Types 2" {
  * fileName = "Base Types 2"
  Constraint Enum <<enumeration>> "BASE2_SimpleCitationType" {
    CI_Citation
    DocumentCitation
    LegislationCitation
  }
}
Container "Quadrilateral Grid" {
  * fileName = "Quadrilateral Grid"
  Constraint Enum <<codeList>> "CIS_CV_SequenceType" {
    * identifier = "Quadrilateral Grid::CV_SequenceType"
    CantorDiagonal
    Hilbert
    Morton
    boustrophedonic
    linear
    spiral
  }
}
Container "Data quality information" {
  * fileName = "Data quality information"
  Constraint Enum <<codeList>> "GMD_DQ_EvaluationMethodTypeCode" {
    * identifier = "Data quality information::DQ_EvaluationMethodTypeCode"
    directExternal
    directInternal
    indirect
  }
}
Container <<applicationSchema>> "Base Types" {
  * fileName = "Base Types"
  Attributes <<dataType>> "BASE_Identifier" {
    * description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    * identifier = "Base Types::Identifier"
    * tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    <<lifeCycleInfo>>, <<voidable>> versionId TEXT
  }
  Metadata "Unknown" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
}
Package "Records and Class Metadata" {
  Class <<type>>, <<type>> "Any" {}
  Class <<type>>, <<type>> "RecordType" {
    typeName_aName : TEXT
    record Record [0..*] as ref
    schema Schema [0..*] as ref
  }
}
Package "Extent information" {
  Class "EX_Extent" {
    RationalRose$Java:ConstructorIs = "public"
    RationalRose$Java:Final = "False"
    RationalRose$Java:GenerateDefaultConstructor = "True"
    RationalRose$Java:GenerateFinalizer = "False"
    RationalRose$Java:GenerateInstanceInitializer = "False"
    RationalRose$Java:GenerateStaticInitializer = "False"
    RationalRose$Oracle8:CollectionOfREFS = "False"
    RationalRose$Visual Basic:CollectionClass = "Collection"
    RationalRose$Visual Basic:Creatable = "(221)"
    RationalRose$Visual Basic:GenerateInitialization = "False"
    RationalRose$Visual Basic:GenerateTermination = "False"
    RationalRose$Visual Basic:OptionBase = "(none)"
    RationalRose$Visual Basic:OptionCompare = "(none)"
    RationalRose$Visual Basic:OptionExplicit = "True"
    description : TEXT [0..1]
  }
}
Container <<applicationSchema>> "Coverages (Domain and Range)" {
  * fileName = "Coverages (Domain and Range)"
  Attributes <<dataType>> "GMLCOV_GridFunction" {
    * description = "An explicit mapping rule for grid geometries"
    * identifier = "Coverages (Domain and Range)::GridFunction"
    * tableName = "GMLCOV_GridFunction"
    id INTEGER NOT NULL PRIMARY KEY
    sequenceRule_scanDirection <<missing>>
    sequenceRule_type TEXT CHECK(CIS_CV_SequenceType) DEFAULT 'linear'
    <<array>> startPoints TEXT
  }
}
Package "EA Model" {
  Class "applicationSchema" {}
}

