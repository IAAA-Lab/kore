Container <<applicationSchema>> "HumanHealth" {
  * fileName = "HumanHealth"
  Attributes <<dataType>> "HH_BiomarkerStatisticalParameterType" {
    * description = "A set of statistical features of a biomarker measured for one specific biomarker."
    * identifier = "HumanHealth::BiomarkerStatisticalParameterType"
    * tableName = "HH_BiomarkerStatisticalParameterType"
    CI95ofGM TEXT
    CI95ofGM_uom TEXT CHECK(GML_UomIdentifier)
    CI95ofP95 TEXT
    CI95ofP95_uom TEXT CHECK(GML_UomIdentifier)
    LOQ REAL
    P50 TEXT
    P50_uom TEXT CHECK(GML_UomIdentifier)
    P90 TEXT
    P90_uom TEXT CHECK(GML_UomIdentifier)
    P95 TEXT
    P95_uom TEXT CHECK(GML_UomIdentifier)
    geometricMean TEXT
    geometricMean_uom TEXT CHECK(GML_UomIdentifier)
    id INTEGER NOT NULL PRIMARY KEY
    maximum TEXT
    maximum_uom TEXT CHECK(GML_UomIdentifier)
    numberOfPartecipants INTEGER NOT NULL
    pinLOD REAL
  }
  Constraint Enum <<codeList>> "HH_GroundWaterQualityComponentTypeValue" {
    * identifier = "HumanHealth::GroundWaterQualityComponentTypeValue"
  }
  Constraint Enum <<codeList>> "HH_AirQualityComponentTypeValue" {
    * identifier = "HumanHealth::AirQualityComponentTypeValue"
  }
  Constraint Enum <<codeList>> "HH_ChemicalValue" {
    * identifier = "HumanHealth::ChemicalValue"
  }
  Constraint Enum <<codeList>> "HH_EnvHealthDeterminantTypeValue" {
    * identifier = "HumanHealth::EnvHealthDeterminantTypeValue"
  }
  Abstract Class <<featureType>> "HealthStatisticalData" {
    <<version>> aggregationUnit_StatisticalUnit BASE_Identifier as ref
  }
  Attributes <<dataType>> "HH_AgeRangeType" {
    * description = "Age interval of a specific subpopulation expressed as starting age and an interval, both alternatively expressed in years, months or weeks."
    * identifier = "HumanHealth::AgeRangeType"
    * tableName = "HH_AgeRangeType"
    id INTEGER NOT NULL PRIMARY KEY
    range_month INTEGER
    range_week INTEGER
    range_year INTEGER
    startAge_month INTEGER
    startAge_week INTEGER
    startAge_year INTEGER
  }
  Attributes <<featureType>> "HH_GeneralHealthStatistics" {
    * description = "Numbers about some aspects of health related to a population or an area. For the purpose of this data model, 'general health' data include issues such as self-perceived health, demographic distribution of various health problems, smokers, etc., expressed as raw numbers, rates, percentage, stratified by gender, age, and/or socio-economic, cultural, ethnic or other factors."
    * identifier = "HumanHealth::GeneralHealthStatistics"
    * tableName = "HH_GeneralHealthStatistics"
    ageRange_range_month INTEGER
    ageRange_range_week INTEGER
    ageRange_range_year INTEGER
    ageRange_startAge_month INTEGER
    ageRange_startAge_week INTEGER
    ageRange_startAge_year INTEGER
    generalHealthName TEXT NOT NULL CHECK(HH_GeneralHealthTypeValue)
    generalHealthValue REAL NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    referencePeriod_endDate DATE NOT NULL
    referencePeriod_startDate DATE NOT NULL
    <<voidable>> gender TEXT CHECK(BASE2_GenderValue)
    <<version>> aggregationUnit_StatisticalUnit BASE_Identifier as ref
  }
  Constraint Enum <<codeList>> "HH_LakeWaterQuality" {
    * identifier = "HumanHealth::LakeWaterQuality"
  }
  Attributes <<featureType>> "HH_Disease" {
    * description = "Statistical information related to pathologies linked directly or indirectly to the quality of environment.
  
    Statistical information related to diseases, health-related conditions and external causes of disease and injury, as classified in the International Statistical Classification of Diseases and Related Health Problems, 10th Revision (ICD-10). For practical reasons, a short term &lsquo;disease&rsquo; is used to label all conditions covered by this definition."
    * identifier = "HumanHealth::Disease"
    * tableName = "HH_Disease"
    COD TEXT CHECK(HH_CODValue)
    ageRange_range_month INTEGER
    ageRange_range_week INTEGER
    ageRange_range_year INTEGER
    ageRange_startAge_month INTEGER
    ageRange_startAge_week INTEGER
    ageRange_startAge_year INTEGER
    id INTEGER NOT NULL PRIMARY KEY
    pathology TEXT CHECK(HH_ICDValue)
    referencePeriod_endDate DATE NOT NULL
    referencePeriod_startDate DATE NOT NULL
    <<voidable>> gender TEXT CHECK(BASE2_GenderValue)
    <<version>> aggregationUnit_StatisticalUnit BASE_Identifier as ref
  }
  Constraint Enum <<codeList>> "HH_RiverWaterQualityComponentTypeValue" {
    * identifier = "HumanHealth::RiverWaterQualityComponentTypeValue"
  }
  Attributes <<dataType>> "HH_DiseaseMeasure" {
    * description = "Different ways in which data on diseases and related health problems in a population can be reported.
  
    There is a strong agreement between the two codelists addressed in the Data Specifications Document; the &ldquo;ICD10Value&rdquo; and the &ldquo;CODValue&rdquo; codelist. Taking into account that the main source of harmonized data is Eurostat, the reporting formats of Eurostat should be promoted in the definition of DiseaseMeasureType:
  
    &bull; Absolute numbers: the total prevalence of a disease or mortality cause, without any further weighing or processing;
  
    &bull; Crude death rate: describes mortality in relation to the total population. Expressed in deaths per 100,000 inhabitants, it is calculated as the number of deaths recorded in the population for a given period divided by population in the same period and then multiplied by 100,000;
  
    &bull; Standardised death rate: weighted average of age-specific mortality rates. The weighting factor is the age distribution of a standard reference population. Standardised death rates are calculated for the age group 0-64 ('premature death') and for the total of ages. As most causes of death vary significantly with people's age and sex, the use of standardised death rates improves comparability over time and between countries.
  
    The reporting formats as presented above are regulated through the European Parliament&rsquo;s &ldquo; Regulation on Community statistics on public health and health and safety at work (EC) No 1338/2008&rdquo;."
    * identifier = "HumanHealth::DiseaseMeasure"
    * tableName = "HH_DiseaseMeasure"
    diseaseMeasureType TEXT NOT NULL CHECK(HH_DiseaseMeasureTypeValue)
    id INTEGER NOT NULL PRIMARY KEY
    value REAL NOT NULL
  }
  Class <<type>> "UomNoise" {
    formula : TEXT [0..1]
    measureType : TEXT
    nameStandardUnit : TEXT [0..1]
    offsetToStandardUnit : REAL [0..1]
    scaleToStandardUnit : REAL [0..1]
    source : TEXT
    uomName : TEXT
    uomSymbol : TEXT
    measure Measure [0..*] as ref
    subunit TEXT [0..1] as ref
  }
  Constraint Enum <<codeList>> "HH_CODValue" {
    * identifier = "HumanHealth::CODValue"
  }
  Constraint Enum <<codeList>> "HH_MatrixValue" {
    * identifier = "HumanHealth::MatrixValue"
  }
  Constraint Enum <<codeList>> "HH_NoiseSourceTypeValue" {
    * identifier = "HumanHealth::NoiseSourceTypeValue"
  }
  Constraint Enum <<codeList>> "HH_GeneralHealthTypeValue" {
    * identifier = "HumanHealth::GeneralHealthTypeValue"
  }
  Attributes <<dataType>> "HH_ReferencePeriodType" {
    * description = "The time period which the refer."
    * identifier = "HumanHealth::ReferencePeriodType"
    * tableName = "HH_ReferencePeriodType"
    endDate DATE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    startDate DATE NOT NULL
  }
  Constraint Enum <<codeList>> "HH_DiseaseMeasureTypeValue" {
    * identifier = "HumanHealth::DiseaseMeasureTypeValue"
  }
  Constraint Enum <<codeList>> "HH_MediaTypeValue" {
    * identifier = "HumanHealth::MediaTypeValue"
  }
  Attributes <<dataType>> "HH_BiomarkerType" {
    * description = "A biomarker is defined both by a quantified or determined chemical (e.g. cadmium, lead) or its metabolite, and a matrix (e.g. blood, urine) that is used for quantification; for example - cadmium in urine, lead in blood."
    * identifier = "HumanHealth::BiomarkerType"
    * tableName = "HH_BiomarkerType"
    chemical TEXT NOT NULL CHECK(HH_ChemicalValue)
    id INTEGER NOT NULL PRIMARY KEY
    matrix TEXT NOT NULL CHECK(HH_MatrixValue)
  }
  Attributes <<featureType>> "HH_HealthServicesStatistic" {
    * description = "Type of health care indicator."
    * identifier = "HumanHealth::HealthServicesStatistic"
    * tableName = "HH_HealthServicesStatistic"
    healthServiceType TEXT NOT NULL CHECK(HH_HealthServicesTypeValue)
    healthServiceValue REAL NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    referencePeriod_endDate DATE NOT NULL
    referencePeriod_startDate DATE NOT NULL
    <<version>> aggregationUnit_StatisticalUnit BASE_Identifier as ref
  }
  Class <<union>> "Age" {
    month : INTEGER
    week : INTEGER
    year : INTEGER
  }
  Attributes <<featureType>> "HH_EnvHealthDeterminantStatisticalData" {
    * description = "A statistical data of interest for human health determinant analysis, resulting from the aggregation of raw measurements located within a statistical unit."
    * identifier = "HumanHealth::EnvHealthDeterminantStatisticalData"
    * tableName = "HH_EnvHealthDeterminantStatisticalData"
    id INTEGER NOT NULL PRIMARY KEY
    statisticalMethod TEXT NOT NULL CHECK(HH_StatisticalAggregationMethodValue)
    type TEXT NOT NULL CHECK(HH_EnvHealthDeterminantTypeValue)
    <<version>> aggregationUnit_StatisticalUnit BASE_Identifier as ref
  }
  Constraint Enum <<codeList>> "HH_StatisticalAggregationMethodValue" {
    * identifier = "HumanHealth::StatisticalAggregationMethodValue"
  }
  Abstract Constraint Enum <<codeList>> "HH_ComponentTypeValue" {
    * identifier = "HumanHealth::ComponentTypeValue"
  }
  Feature <<featureType>> "HH_EnvHealthDeterminantMeasure" {
    * description = "A raw measurement performed at some place that is of interest for human health determinant analysis."
    * identifier = "HumanHealth::EnvHealthDeterminantMeasure"
    * tableName = "HH_EnvHealthDeterminantMeasure"
    id INTEGER NOT NULL PRIMARY KEY
    location GEOMETRY NOT NULL
    type TEXT NOT NULL CHECK(HH_EnvHealthDeterminantTypeValue)
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
  }
  Constraint Enum <<codeList>> "HH_HealthServicesTypeValue" {
    * identifier = "HumanHealth::HealthServicesTypeValue"
  }
  Attributes <<featureType>> "HH_Biomarker" {
    * description = "A biomarker (of exposure) is the concentration of a chemical, its metabolite or the product of an interaction between a chemical and some target molecule or cell that is measured in a compartment in an organism."
    * identifier = "HumanHealth::Biomarker"
    * tableName = "HH_Biomarker"
    ageRange_range_month INTEGER
    ageRange_range_week INTEGER
    ageRange_range_year INTEGER
    ageRange_startAge_month INTEGER
    ageRange_startAge_week INTEGER
    ageRange_startAge_year INTEGER
    biomarkerName_chemical TEXT NOT NULL CHECK(HH_ChemicalValue)
    biomarkerName_matrix TEXT NOT NULL CHECK(HH_MatrixValue)
    biomarkerStatisticalParameter_CI95ofGM TEXT
    biomarkerStatisticalParameter_CI95ofGM_uom TEXT CHECK(GML_UomIdentifier)
    biomarkerStatisticalParameter_CI95ofP95 TEXT
    biomarkerStatisticalParameter_CI95ofP95_uom TEXT CHECK(GML_UomIdentifier)
    biomarkerStatisticalParameter_LOQ REAL
    biomarkerStatisticalParameter_P50 TEXT
    biomarkerStatisticalParameter_P50_uom TEXT CHECK(GML_UomIdentifier)
    biomarkerStatisticalParameter_P90 TEXT
    biomarkerStatisticalParameter_P90_uom TEXT CHECK(GML_UomIdentifier)
    biomarkerStatisticalParameter_P95 TEXT
    biomarkerStatisticalParameter_P95_uom TEXT CHECK(GML_UomIdentifier)
    biomarkerStatisticalParameter_geometricMean TEXT
    biomarkerStatisticalParameter_geometricMean_uom TEXT CHECK(GML_UomIdentifier)
    biomarkerStatisticalParameter_maximum TEXT
    biomarkerStatisticalParameter_maximum_uom TEXT CHECK(GML_UomIdentifier)
    biomarkerStatisticalParameter_numberOfPartecipants INTEGER NOT NULL
    biomarkerStatisticalParameter_pinLOD REAL
    gender TEXT NOT NULL CHECK(BASE2_GenderValue)
    id INTEGER NOT NULL PRIMARY KEY
    referencePeriod_endDate DATE NOT NULL
    referencePeriod_startDate DATE NOT NULL
    <<reference>> refersTo INTEGER
    <<version>> aggregationUnit_StatisticalUnit BASE_Identifier as ref
  }
  Class <<type>> "Concentration" {
    uom_component : TEXT
    uom_formula : TEXT [0..1]
    uom_measureType : TEXT
    uom_media : TEXT
    uom_nameStandardUnit : TEXT [0..1]
    uom_offsetToStandardUnit : REAL [0..1]
    uom_scaleToStandardUnit : REAL [0..1]
    uom_uomName : TEXT
    uom_uomSymbol : TEXT
    value : REAL
    uom TEXT as ref
  }
  Constraint Enum <<codeList>> "HH_ICDValue" {
    * identifier = "HumanHealth::ICDValue"
  }
  Class <<type>> "NoiseMeasure" {
    uom_formula : TEXT [0..1]
    uom_measureType : TEXT
    uom_nameStandardUnit : TEXT [0..1]
    uom_offsetToStandardUnit : REAL [0..1]
    uom_scaleToStandardUnit : REAL [0..1]
    uom_source : TEXT
    uom_uomName : TEXT
    uom_uomSymbol : TEXT
    value : REAL
    uom TEXT as ref
  }
  Class <<type>> "UomConcentration" {
    component : TEXT
    formula : TEXT [0..1]
    measureType : TEXT
    media : TEXT
    nameStandardUnit : TEXT [0..1]
    offsetToStandardUnit : REAL [0..1]
    scaleToStandardUnit : REAL [0..1]
    uomName : TEXT
    uomSymbol : TEXT
    measure Measure [0..*] as ref
    subunit TEXT [0..1] as ref
  }
  Constraint Enum <<codeList>> "HH_BathingWaterQualityComponentTypeValue" {
    * identifier = "HumanHealth::BathingWaterQualityComponentTypeValue"
  }
  Attributes <<dataType>> "HH_BiomarkerThematicMetadata" {
    * description = "Thematic Metadata describing the purpose of the study, target population and the characteristic of the studied areas."
    * identifier = "HumanHealth::BiomarkerThematicMetadata"
    * tableName = "HH_BiomarkerThematicMetadata"
    id INTEGER NOT NULL PRIMARY KEY
    meanAge_month INTEGER
    meanAge_week INTEGER
    meanAge_year INTEGER
  }
  Relation "HH_Disease_diseaseMeasure" {
    * profile = "attributes"
    * tableName = "HH_Disease_diseaseMeasure"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HH_Disease(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HH_DiseaseMeasure(id)
  }
  Relation "HH_BiomarkerThematicMetadata_describedBy" {
    * profile = "attributes"
    * relatedReference = "attribute HH_Biomarker#refersTo"
    * tableName = "HH_BiomarkerThematicMetadata_describedBy"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HH_BiomarkerThematicMetadata(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HH_Biomarker(id)
  }
}
Container <<applicationSchema>> "Base Types 2" {
  * fileName = "Base Types 2"
  Constraint Enum <<codeList>> "BASE2_GenderValue" {
    * identifier = "Base Types 2::GenderValue"
    female
    male
    unknown
  }
}
Container "Units of Measure" {
  * fileName = "Units of Measure"
  Constraint Enum <<codeList>> "GML_MeasureType" {
    * identifier = "Units of Measure::MeasureType"
    angle
    area
    length
    scale
    time
    velocity
    volume
    weight
  }
  Constraint Enum "GML_UomIdentifier" {}
}
Container <<applicationSchema>> "Base Types" {
  * fileName = "Base Types"
  Attributes <<dataType>> "BASE_Identifier" {
    * description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    * identifier = "Base Types::Identifier"
    * tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    <<lifeCycleInfo>>, <<voidable>> versionId TEXT
  }
  Metadata "Unknown" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
}
Package "EA Model" {
  Class "applicationSchema" {}
}

