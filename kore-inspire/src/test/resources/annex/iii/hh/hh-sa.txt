Container <<applicationSchema>>  "Safety" {
  Attributes "HH_SA_FireOrExplosionRelatedEvent" {
    description = "Incident in which fire or explosion harms humans, property or the environment."
    identifier = "Safety::FireOrExplosionRelatedEvent"
    tableName = "HH_SA_FireOrExplosionRelatedEvent"
    additionalInformation INTEGER
    aggregation INTEGER
    beginLifespanVersion DATETIME
    endLifespanVersion DATETIME
    endTime DATETIME
    fireOrExplosionLocality_buildingUse TEXT NOT NULL CHECK(HH_SA_BuildingUseValue)
    fireOrExplosionLocality_inBuilding BOOLEAN NOT NULL
    fireOrExplosionType TEXT NOT NULL CHECK(HH_SA_FireOrExplosionTypeValue)
    id INTEGER NOT NULL PRIMARY KEY
    inspireId INTEGER
    isIntentional BOOLEAN
    isMajor BOOLEAN
    locationUnit_administrativeUnit AU_AdministrativeUnit
    locationUnit_geographicalName INTEGER
    locationUnit_geometry GEOMETRY
    startTime DATETIME NOT NULL
    ref causeOfEvent: PT_FreeText[0..*]
  }
  Constraint Enum "HH_SA_BuildingUseValue" {
    identifier = "Safety::BuildingUseValue"
  }
  Constraint Enum "HH_SA_ConsequenceTypeValue" {
    identifier = "Safety::ConsequenceTypeValue"
  }
  Constraint Enum "HH_SA_TrafficTypeValue" {
    identifier = "Safety::TrafficTypeValue"
  }
  Class <<union>>  "LocationUnitType" {
    administrativeUnit: AU_AdministrativeUnit
    geometry: GEOMETRY
    ref geographicalName: GN_GeographicalName
  }
  Constraint Enum "HH_SA_HazardousMaterialTypeValue" {
    identifier = "Safety::HazardousMaterialTypeValue"
  }
  Feature "HH_SA_Event" {
    description = "Unintentional or intentional accident or incident harming  or damaging humans, properties or the environment."
    identifier = "Safety::Event"
    tableName = "HH_SA_Event"
    additionalInformation INTEGER
    aggregation INTEGER
    beginLifespanVersion DATETIME
    endLifespanVersion DATETIME
    endTime DATETIME
    id INTEGER NOT NULL PRIMARY KEY
    inspireId INTEGER
    isIntentional BOOLEAN
    isMajor BOOLEAN
    locationUnit_administrativeUnit AU_AdministrativeUnit
    locationUnit_geographicalName INTEGER
    locationUnit_geometry GEOMETRY
    startTime DATETIME NOT NULL
    ref causeOfEvent: PT_FreeText[0..*]
  }
  Attributes "HH_SA_NaturalHazardRelatedEvent" {
    description = "A natural incident resulting in a negative effect on humans, property or the environment."
    identifier = "Safety::NaturalHazardRelatedEvent"
    tableName = "HH_SA_NaturalHazardRelatedEvent"
    additionalInformation INTEGER
    aggregation INTEGER
    beginLifespanVersion DATETIME
    endLifespanVersion DATETIME
    endTime DATETIME
    id INTEGER NOT NULL PRIMARY KEY
    inspireId INTEGER
    isIntentional BOOLEAN
    isMajor BOOLEAN
    locationUnit_administrativeUnit AU_AdministrativeUnit
    locationUnit_geographicalName INTEGER
    locationUnit_geometry GEOMETRY
    naturalHazardType TEXT NOT NULL CHECK(NZ_CORE_NaturalHazardCategoryValue)
    startTime DATETIME NOT NULL
    ref causeOfEvent: PT_FreeText[0..*]
  }
  Attributes "HH_SA_EventConsequence" {
    description = "The harm an event caused for humans, propriety."
    identifier = "Safety::EventConsequence"
    tableName = "HH_SA_EventConsequence"
    consequenceType TEXT NOT NULL CHECK(HH_SA_ConsequenceTypeValue)
    event INTEGER
    id INTEGER NOT NULL PRIMARY KEY
    value DOUBLE NOT NULL
  }
  Constraint Enum "HH_SA_FireOrExplosionTypeValue" {
    identifier = "Safety::FireOrExplosionTypeValue"
  }
  Attributes "HH_SA_TrafficRelatedEvent" {
    description = "An unintentional event arising by a traffic facility along a traffic network harming humans, property or the environment."
    identifier = "Safety::TrafficRelatedEvent"
    tableName = "HH_SA_TrafficRelatedEvent"
    additionalInformation INTEGER
    aggregation INTEGER
    beginLifespanVersion DATETIME
    endLifespanVersion DATETIME
    endTime DATETIME
    id INTEGER NOT NULL PRIMARY KEY
    inspireId INTEGER
    isIntentional BOOLEAN
    isMajor BOOLEAN
    locationUnit_administrativeUnit AU_AdministrativeUnit
    locationUnit_geographicalName INTEGER
    locationUnit_geometry GEOMETRY
    startTime DATETIME NOT NULL
    trafficType TEXT NOT NULL CHECK(HH_SA_TrafficTypeValue)
    ref causeOfEvent: PT_FreeText[0..*]
  }
  Attributes "HH_SA_HazardousMaterialRelatedEvent" {
    description = "An event resulted by<b> </b>substances that have the ability to harm humans, property, or the environment."
    identifier = "Safety::HazardousMaterialRelatedEvent"
    tableName = "HH_SA_HazardousMaterialRelatedEvent"
    additionalInformation INTEGER
    aggregation INTEGER
    beginLifespanVersion DATETIME
    endLifespanVersion DATETIME
    endTime DATETIME
    hazardousMaterialType TEXT NOT NULL CHECK(HH_SA_HazardousMaterialTypeValue)
    id INTEGER NOT NULL PRIMARY KEY
    inspireId INTEGER
    isIntentional BOOLEAN
    isMajor BOOLEAN
    locationUnit_administrativeUnit AU_AdministrativeUnit
    locationUnit_geographicalName INTEGER
    locationUnit_geometry GEOMETRY
    startTime DATETIME NOT NULL
    ref causeOfEvent: PT_FreeText[0..*]
  }
  Attributes "HH_SA_FireOrExplosionLocalityType" {
    description = "Characteristics of the place where the fire or explosion occurs."
    identifier = "Safety::FireOrExplosionLocalityType"
    tableName = "HH_SA_FireOrExplosionLocalityType"
    buildingUse TEXT NOT NULL CHECK(HH_SA_BuildingUseValue)
    id INTEGER NOT NULL PRIMARY KEY
    inBuilding BOOLEAN NOT NULL
  }
  Attributes "HH_SA_EventInformation" {
    description = "All available information about the  event."
    identifier = "Safety::EventInformation"
    tableName = "HH_SA_EventInformation"
    id INTEGER NOT NULL PRIMARY KEY
  }
  Relation "HH_SA_Event_additionalInformation" {
    profile = "attributes"
    relatedReference = "HH_SA_Event#additionalInformation"
    tableName = "HH_SA_Event_additionalInformation"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HH_SA_Event(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HH_SA_EventInformation(id)
  }
  Relation "HH_SA_Event_part" {
    profile = "features"
    relatedReference = "HH_SA_Event#aggregation"
    tableName = "HH_SA_Event_part"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HH_SA_Event(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HH_SA_Event(id)
  }
  Relation "HH_SA_Event_inspireId" {
    profile = "attributes"
    relatedReference = "HH_SA_Event#inspireId"
    tableName = "HH_SA_Event_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HH_SA_Event(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "HH_SA_Event_sourceReference" {
    profile = "attributes"
    tableName = "HH_SA_Event_sourceReference"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HH_SA_Event(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GMD_CI_Citation(id)
  }
  Relation "HH_SA_Event_locationUnit_geographicalName" {
    profile = "attributes"
    relatedReference = "HH_SA_Event#locationUnit_geographicalName"
    tableName = "HH_SA_Event_locationUnit_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HH_SA_Event(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GN_GeographicalName(id)
  }
  Relation "HH_SA_EventConsequence_event" {
    profile = "features"
    relatedReference = "HH_SA_EventConsequence#event"
    tableName = "HH_SA_EventConsequence_event"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HH_SA_EventConsequence(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES HH_SA_Event(id)
  }
  Relation "HH_SA_TrafficRelatedEvent_involvedIn" {
    profile = "attributes"
    tableName = "HH_SA_TrafficRelatedEvent_involvedIn"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES HH_SA_TrafficRelatedEvent(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES NET_NetworkReference(id)
  }
  Metadata "Unknown" {
    metadata = ""
    mimeType = "text/xml"
    scope = "attribute"
    standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    metadata = ""
    mimeType = "text/xml"
    scope = "attributeType"
    standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    metadata = ""
    mimeType = "text/xml"
    scope = "attribute"
    standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    metadata = ""
    mimeType = "text/xml"
    scope = "attributeType"
    standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Relation "AU_admUnit_boundary" {
    profile = "features"
    tableName = "AU_admUnit_boundary"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_AdministrativeUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES AU_AdministrativeBoundary(id)
  }
  Relation "AU_AdministrativeUnit_administeredBy" {
    profile = "features"
    tableName = "AU_AdministrativeUnit_administeredBy"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_AdministrativeUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES AU_AdministrativeUnit(id)
  }
  Relation "AU_AdministrativeUnit_lowerLevelUnit" {
    profile = "features"
    relatedReference = "AU_AdministrativeUnit#upperLevelUnit"
    tableName = "AU_AdministrativeUnit_lowerLevelUnit"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_AdministrativeUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES AU_AdministrativeUnit(id)
  }
  Relation "AU_AdministrativeUnit_inspireId" {
    profile = "attributes"
    relatedReference = "AU_AdministrativeUnit#inspireId"
    tableName = "AU_AdministrativeUnit_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_AdministrativeUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "AU_AdministrativeUnit_name" {
    profile = "attributes"
    tableName = "AU_AdministrativeUnit_name"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_AdministrativeUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GN_GeographicalName(id)
  }
  Relation "AU_AdministrativeUnit_nationalLevelName" {
    profile = "attributes"
    tableName = "AU_AdministrativeUnit_nationalLevelName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_AdministrativeUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GMD_LocalisedCharacterString(id)
  }
  Relation "AU_AdministrativeUnit_residenceOfAuthority" {
    profile = "features"
    tableName = "AU_AdministrativeUnit_residenceOfAuthority"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_AdministrativeUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES AU_ResidenceOfAuthority(id)
  }
  Relation "GMD_CI_Citation_date" {
    profile = "attributes"
    tableName = "GMD_CI_Citation_date"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES GMD_CI_Citation(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GMD_CI_Date(id)
  }
  Relation "GMD_CI_Citation_citedResponsibleParty" {
    profile = "attributes"
    tableName = "GMD_CI_Citation_citedResponsibleParty"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES GMD_CI_Citation(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GMD_CI_ResponsibleParty(id)
  }
  Relation "GN_GeographicalName_spelling" {
    profile = "attributes"
    tableName = "GN_GeographicalName_spelling"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES GN_GeographicalName(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GN_SpellingOfName(id)
  }
  Relation "AU_AdministrativeBoundary_inspireId" {
    profile = "attributes"
    relatedReference = "AU_AdministrativeBoundary#inspireId"
    tableName = "AU_AdministrativeBoundary_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_AdministrativeBoundary(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "AU_Condominium_admUnit" {
    profile = "features"
    tableName = "AU_Condominium_admUnit"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_Condominium(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES AU_AdministrativeUnit(id)
  }
  Relation "AU_Condominium_inspireId" {
    profile = "attributes"
    relatedReference = "AU_Condominium#inspireId"
    tableName = "AU_Condominium_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_Condominium(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "AU_Condominium_name" {
    profile = "attributes"
    tableName = "AU_Condominium_name"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_Condominium(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GN_GeographicalName(id)
  }
  Relation "AU_ResidenceOfAuthority_name" {
    profile = "attributes"
    relatedReference = "AU_ResidenceOfAuthority#name"
    tableName = "AU_ResidenceOfAuthority_name"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AU_ResidenceOfAuthority(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GN_GeographicalName(id)
  }
  Relation "GMD_CI_ResponsibleParty_contactInfo_phone" {
    profile = "attributes"
    relatedReference = "GMD_CI_ResponsibleParty#contactInfo_phone"
    tableName = "GMD_CI_ResponsibleParty_contactInfo_phone"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES GMD_CI_ResponsibleParty(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GMD_CI_Telephone(id)
  }
  Relation "GMD_CI_ResponsibleParty_contactInfo_address" {
    profile = "attributes"
    relatedReference = "GMD_CI_ResponsibleParty#contactInfo_address"
    tableName = "GMD_CI_ResponsibleParty_contactInfo_address"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES GMD_CI_ResponsibleParty(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GMD_CI_Address(id)
  }
  Relation "NET_Network_geographicalName" {
    profile = "attributes"
    tableName = "NET_Network_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES NET_Network(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GN_GeographicalName(id)
  }
  Constraint Enum "NZ_CORE_NaturalHazardCategoryValue" {
    obligation = "implementingRule"
    identifier = "NaturalRiskZones::NaturalHazardCategoryValue"
  }
  Feature "AU_AdministrativeUnit" {
    description = "Unit of administration where a Member State has and/or exercises jurisdictional rights, for local, regional and national governance."
    identifier = "AdministrativeUnits::AdministrativeUnit"
    tableName = "AU_AdministrativeUnit"
    beginLifespanVersion DATETIME
    country TEXT NOT NULL CHECK(BASE2_CountryCode)
    endLifespanVersion DATETIME
    geometry MULTISURFACE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    inspireId INTEGER
    nationalCode TEXT NOT NULL
    nationalLevel TEXT NOT NULL CHECK(AU_AdministrativeHierarchyLevel)
    upperLevelUnit INTEGER
  }
  Attributes "GN_GeographicalName" {
    description = "Proper noun applied to a real world entity."
    identifier = "Geographical Names::GeographicalName"
    tableName = "GN_GeographicalName"
    grammaticalGender TEXT CHECK(GN_GrammaticalGenderValue)
    grammaticalNumber TEXT CHECK(GN_GrammaticalNumberValue)
    id INTEGER NOT NULL PRIMARY KEY
    language TEXT
    nameStatus TEXT CHECK(GN_NameStatusValue)
    nativeness TEXT CHECK(GN_NativenessValue)
    pronunciation_pronunciationIPA TEXT
    pronunciation_pronunciationSoundLink TEXT
    sourceOfName TEXT
  }
  Attributes "BASE_Identifier" {
    description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    identifier = "Base Types::Identifier"
    tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    versionId TEXT
  }
  Attributes "GMD_CI_Citation" {
    description = "Standardized resource reference"
    identifier = "Citation and responsible party information::CI_Citation"
    tableName = "GMD_CI_Citation"
    ISBN TEXT
    ISSN TEXT
    alternateTitles TEXT
    collectiveTitle TEXT
    edition TEXT
    editionDate DATE
    id INTEGER NOT NULL PRIMARY KEY
    otherCitationDetails TEXT
    presentationForms TEXT
    series_issueIdentification TEXT
    series_name TEXT
    series_page TEXT
    title TEXT NOT NULL
    ref identifier: MD_Identifier[0..*]
  }
  Attributes "NET_NetworkReference" {
    description = "A reference to a network element."
    identifier = "Network::NetworkReference"
    tableName = "NET_NetworkReference"
    id INTEGER NOT NULL PRIMARY KEY
  }
  Feature "AU_AdministrativeBoundary" {
    description = "A line of demarcation between administrative units."
    identifier = "AdministrativeUnits::AdministrativeBoundary"
    tableName = "AU_AdministrativeBoundary"
    beginLifespanVersion DATETIME
    country TEXT NOT NULL CHECK(BASE2_CountryCode)
    endLifespanVersion DATETIME
    geometry CURVE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    inspireId INTEGER
    legalStatus TEXT CHECK(AU_LegalStatusValue) DEFAULT 'agreed'
    nationalLevels TEXT NOT NULL
    technicalStatus TEXT CHECK(AU_TechnicalStatusValue) DEFAULT 'edgeMatched'
  }
  Attributes "GMD_LocalisedCharacterString" {
    identifier = "Cultural and linguistic adapdability::LocalisedCharacterString"
    tableName = "GMD_LocalisedCharacterString"
    characterSetCode TEXT CHECK(GMD_MD_CharacterSetCode)
    country TEXT CHECK(GMD_CountryCode)
    id INTEGER NOT NULL PRIMARY KEY
    languageCode TEXT NOT NULL CHECK(GMD_LanguageCode)
    text TEXT NOT NULL
  }
  Feature "AU_ResidenceOfAuthority" {
    description = "Data type representing the name and position of a residence of authority."
    identifier = "AdministrativeUnits::ResidenceOfAuthority"
    tableName = "AU_ResidenceOfAuthority"
    geometry POINT
    id INTEGER NOT NULL PRIMARY KEY
    name INTEGER
  }
  Attributes "GMD_CI_Date" {
    identifier = "Citation and responsible party information::CI_Date"
    tableName = "GMD_CI_Date"
    date DATE NOT NULL
    dateType TEXT NOT NULL CHECK(GMD_CI_DateTypeCode)
    id INTEGER NOT NULL PRIMARY KEY
  }
  Attributes "GMD_CI_ResponsibleParty" {
    description = "Identification of, and means of communication with, person(s) and organisations associated with the dataset"
    identifier = "Citation and responsible party information::CI_ResponsibleParty"
    tableName = "GMD_CI_ResponsibleParty"
    contactInfo_address INTEGER
    contactInfo_contactInstructions TEXT
    contactInfo_hoursOfService TEXT
    contactInfo_onlineResource_applicationProfile TEXT
    contactInfo_onlineResource_description TEXT
    contactInfo_onlineResource_function TEXT CHECK(GMD_CI_OnLineFunctionCode)
    contactInfo_onlineResource_name TEXT
    contactInfo_onlineResource_protocol TEXT
    contactInfo_phone INTEGER
    id INTEGER NOT NULL PRIMARY KEY
    individualName TEXT
    organisationName TEXT
    positionName TEXT
    role TEXT NOT NULL CHECK(GMD_CI_RoleCode)
  }
  Attributes "GN_SpellingOfName" {
    description = "Proper way of writing a name.
  
    SOURCE Adapted from [UNGEGN Manual 2006].
  
    NOTE Proper spelling means the writing of a name with the correct capitalisation and the correct letters and diacritics present in an accepted standard order."
    identifier = "Geographical Names::SpellingOfName"
    tableName = "GN_SpellingOfName"
    id INTEGER NOT NULL PRIMARY KEY
    script TEXT
    text TEXT NOT NULL
    transliterationScheme TEXT
  }
  Feature "AU_Condominium" {
    description = "An administrative area established independently to any national administrative division of territory  and administered by two or more countries.
  
    NOTE Condominium is not a part of any national administrative hierarchy of territory division in Member State."
    identifier = "AdministrativeUnits::Condominium"
    tableName = "AU_Condominium"
    beginLifespanVersion DATETIME
    endLifespanVersion DATETIME
    geometry MULTISURFACE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    inspireId INTEGER
  }
  Attributes "GMD_CI_Telephone" {
    description = "Telephone numbers for contacting the responsible individual or organisation"
    identifier = "Citation and responsible party information::CI_Telephone"
    tableName = "GMD_CI_Telephone"
    facsimiles TEXT
    id INTEGER NOT NULL PRIMARY KEY
    voices TEXT
  }
  Attributes "GMD_CI_Address" {
    description = "Location of the responsible individual or organisation"
    identifier = "Citation and responsible party information::CI_Address"
    tableName = "GMD_CI_Address"
    administrativeArea TEXT
    city TEXT
    country TEXT
    deliveryPoints TEXT
    electronicMailAddresses TEXT
    id INTEGER NOT NULL PRIMARY KEY
    postalCode TEXT
  }
  Attributes "NET_Network" {
    description = "A network is a collection of network elements.
  
    The reason for collecting certain elements in a certain network may vary (e.g. connected elements for the same mode of transport)"
    identifier = "Network::Network"
    tableName = "NET_Network"
    id INTEGER NOT NULL PRIMARY KEY
    ref elements: NetworkElement[0..*] inv inNetwork[0..*]
  }
  Constraint Enum "BASE2_CountryCode" {
    identifier = "Base Types 2::CountryCode"
    AT
    BE
    BG
    CY
    CZ
    DE
    DK
    EE
    EL
    ES
    FI
    FR
    HR
    HU
    IE
    IT
    LT
    LU
    LV
    MT
    NL
    PL
    PT
    RO
    SE
    SI
    SK
    TR
    UK
  }
  Constraint Enum "AU_AdministrativeHierarchyLevel" {
    identifier = "AdministrativeUnits::AdministrativeHierarchyLevel"
    1stOrder
    2ndOrder
    3rdOrder
    4thOrder
    5thOrder
    6thOrder
  }
  Constraint Enum "GN_NativenessValue" {
    identifier = "Geographical Names::NativenessValue"
    endonym
    exonym
  }
  Constraint Enum "GN_NameStatusValue" {
    identifier = "Geographical Names::NameStatusValue"
    historical
    official
    other
    standardised
  }
  Constraint Enum "GN_GrammaticalGenderValue" {
    identifier = "Geographical Names::GrammaticalGenderValue"
    common
    feminine
    masculine
    neuter
  }
  Constraint Enum "GN_GrammaticalNumberValue" {
    identifier = "Geographical Names::GrammaticalNumberValue"
    dual
    plural
    singular
  }
  Constraint Enum "AU_LegalStatusValue" {
    identifier = "AdministrativeUnits::LegalStatusValue"
    agreed
    notAgreed
  }
  Constraint Enum "AU_TechnicalStatusValue" {
    identifier = "AdministrativeUnits::TechnicalStatusValue"
    edgeMatched
    notEdgeMatched
  }
  Constraint Enum "GMD_LanguageCode" {
    identifier = "ISO 00639 Language Codes::LanguageCode"
    Afrikaans
    Albanian
    Arabic
    Basque
    Belarusian
    Bulgarian
    Catalan
    Chinese
    Croatian
    Czech
    Danish
    Dutch
    English
    Estonian
    Faeroese
    Finnish
    French
    French(Canadian)
    German
    Greek
    Hawaian
    Hebrew
    Hungarian
    Icelandic
    Indonesian
    Italian
    Japanese
    Korean
    Latvian
    Lithuanian
    Malaysian
    Norwegian
    Polish
    Portuguese
    Romanian
    Russian
    Serbian
    Slovak
    Slovenian
    Spanish
    Swahili
    Swedish
    Turkish
    Ukranian
  }
  Constraint Enum "GMD_CountryCode" {
    identifier = "ISO 03166 Country Codes::CountryCode"
  }
  Constraint Enum "GMD_MD_CharacterSetCode" {
    identifier = "Identification information::MD_CharacterSetCode"
    (reservedforfutureuse)
    8859part1
    8859part10
    8859part11
    8859part13
    8859part14
    8859part15
    8859part16
    8859part2
    8859part3
    8859part4
    8859part5
    8859part6
    8859part7
    8859part8
    8859part9
    GB2312
    big5
    ebcdic
    eucJP
    eucKR
    jis
    shiftJIS
    ucs2
    ucs4
    usAscii
    utf16
    utf7
    utf8
  }
  Constraint Enum "GMD_CI_DateTypeCode" {
    identifier = "Citation and responsible party information::CI_DateTypeCode"
    creation
    publication
    revision
  }
  Constraint Enum "GMD_CI_OnLineFunctionCode" {
    identifier = "Citation and responsible party information::CI_OnLineFunctionCode"
    download
    information
    offlineAccess
    order
    search
  }
  Constraint Enum "GMD_CI_RoleCode" {
    identifier = "Citation and responsible party information::CI_RoleCode"
    author
    custodian
    distributor
    originator
    owner
    pointOfContact
    principalInvestigator
    processor
    publisher
    resourceProvider
    user
  }
}
