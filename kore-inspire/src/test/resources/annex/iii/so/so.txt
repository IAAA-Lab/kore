Container <<applicationSchema>> "Soil" {
  * fileName = "Soil"
  Feature <<featureType>> "SO_SoilBody" {
    * description = "Part of the soil cover that is delineated and that is homogeneous with regard to certain soil properties and/or spatial patterns.
  
    The soils present in the soil body are characterized by one or more derived soil profiles that are found together in the area specified by the &ldquo;geometry&rdquo; attribute of the SoilBody.
  
    NOTE 1 If several derived soil profiles are used to describe the soil body, the spatial distribution of the soil they describe within the soil body is not defined, but their presence is indicated by a range percentage of area. The underlying reason behind the fact of not delineating the different soils within a soil body is the target scale of the map or spatial dataset. This means that geographical accuracy and preciseness of soil characterization depend on and vary with the target scale, i.e. the soil body can be delineated differently among scales.
  
    NOTE 2 The concept of soil body is a correlate of the concept soil mapping unit, and the soils of a soilbody might form e.g. a soil association, a soil complex, etc."
    * identifier = "Soil::SoilBody"
    * tableName = "SO_SoilBody"
    geometry MULTISURFACE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<reference>> inspireId INTEGER
    <<voidable>> soilBodyLabel TEXT
  }
  Constraint Enum <<codeList>> "SO_LayerTypeValue" {
    * identifier = "Soil::LayerTypeValue"
  }
  Attributes <<dataType>> "SO_SoilThemeParameterType" {
    * description = "A soil-related property (soil theme) that is represented by this coverage. It is composed of a parameter name coming from a codelist SoilDerivedObjectParameterNameValue and a Unit of Measure used for expressing that parameter.
  
    EXAMPLE Land irrigation suitability, pH in the topsoil, etc"
    * identifier = "Soil::SoilThemeParameterType"
    * tableName = "SO_SoilThemeParameterType"
    id INTEGER NOT NULL PRIMARY KEY
    soilThemeParameterName TEXT NOT NULL CHECK(SO_SoilDerivedObjectParameterNameValue)
    uom TEXT CHECK(GML_UomIdentifier)
  }
  Attributes <<featureType>> "SO_SoilLayer" {
    * description = "domain of a soil with a certain vertical extension developed through non-pedogenic processes, displaying a change in structure and/or composition to possibly over- or underlying adjacent domains, or a grouping of soil horizons or other sub-domains with a special purpose.
  
    NOTE1 Different kinds of layer concepts are covered by this definition.
  
    EXAMPLE 1 Geogenic layers: These are domains, resulting from e.g. sedimentation (as non-pedogenic) processes, that display an unconformity to possibly over- or underlying adjacent domains.
  
    EXAMPLE 2 Topsoil and Subsoil: These can be domains that group different soil horizon types (e.g. A vs. B horizons), or a special case of fixed depths with only two depth ranges (e.g. 0-15 cm: topsoil and, 15-75 cm: subsoil).
  
    EXAMPLE 3 Depth intervals: They are often used in soil monitoring, sampling of contaminated sites and in modelling and include: (i) depth increments (also called fixed depths) that are often used for sampling, e.g. 0-30cm, 30-60cm, and so on, (ii) a single depth range in which a soil sample (&rdquo;specimen&rdquo;) is taken and for which the analytical result is valid, and (iii) soil slicing, that is, profile segmentation according to a specified vector, for instance, either regularly spaced intervals (1cm), or a user-defined vector of segment boundaries (i.e. 0-10, 10-25, 25-50, 50-100). Slicing is used in modelling to generate continuous depth functions for soil properties.
  
    EXAMPLE 4: In the framework of soils deeply modified by human activity, artificial layers may be due to different kinds of deposits (concrete, bricks, &hellip;).
  
    SOURCE WD ISO28258, modified"
    * identifier = "Soil::SoilLayer"
    * tableName = "SO_SoilLayer"
    id INTEGER NOT NULL PRIMARY KEY
    layerType TEXT NOT NULL CHECK(SO_LayerTypeValue)
    profileElementDepthRange_lowerValue REAL
    profileElementDepthRange_uom TEXT CHECK(GML_UomIdentifier)
    profileElementDepthRange_upperValue REAL
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>>, <<array>> layerRockTypes TEXT
    <<voidable>> layerGenesisEnvironment TEXT CHECK(GE_EventEnvironmentValue)
    <<voidable>> layerGenesisProcess TEXT CHECK(GE_EventProcessValue)
    <<voidable>> layerGenesisProcessState TEXT CHECK(SO_LayerGenesisProcessStateValue)
    inspireId BASE_Identifier [0..1] as ref
    isPartOf SoilProfile as ref
    <<voidable>> particleSizeFraction SO_ParticleSizeFractionType [0..*] as ref
    <<voidable>> profileElementObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
  Constraint Enum <<codeList>> "SO_FAOHorizonMasterValue" {
    * identifier = "Soil::FAOHorizonMasterValue"
  }
  Attributes <<featureType>> "SO_ObservedSoilProfile" {
    * description = "a representation of a soil profile found on a specific location which is described on the basis of observations in a trial pit or with a borehole.
  
    The observed soil profile corresponds to a set of data taken directly from a georeferenced<b> </b>soil profile, described in the field, and often sampled and analyzed in the laboratory."
    * identifier = "Soil::ObservedSoilProfile"
    * tableName = "SO_ObservedSoilProfile"
    id INTEGER NOT NULL PRIMARY KEY
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>> localIdentifier TEXT
    <<reference>> location INTEGER
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> WRBSoilName SO_WRBSoilNameType [0..1] as ref
    <<voidable>> isDescribedBy ProfileElement [0..*] as ref
    <<voidable>> otherSoilName SO_OtherSoilNameType [0..*] as ref
    <<voidable>> soilProfileObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
  Attributes <<dataType>> "SO_WRBSoilNameType" {
    * description = "an identification of the soil profile according to the profile to according to “World Reference Base for Soil Resources 2006, first update 2007”, World Soil Resources Reports No. 103. FAO, Rome.
  
    NOTE The structure of the WRBSoilNameType was based on the <i>World reference base for soil resources 2006</i>, <i>first update 2007</i>, World Soil Resources Reports No. 103, Food and Agriculture Organization of the United
  
    Nations, Rome, 2007.
  
    EXAMPLE Lixic Vertic Ferralsol (Ferric, Rhodic), WRB 2006, update 2007."
    * identifier = "Soil::WRBSoilNameType"
    * tableName = "SO_WRBSoilNameType"
    WRBReferenceSoilGroup TEXT NOT NULL CHECK(SO_WRBReferenceSoilGroupValue)
    id INTEGER NOT NULL PRIMARY KEY
    isOriginalClassification BOOLEAN NOT NULL
    <<reference>> over INTEGER
  }
  Attributes <<dataType>> "SO_RangeType" {
    * description = "A range value defined by an upper limit and a lower limit."
    * identifier = "Soil::RangeType"
    * tableName = "SO_RangeType"
    id INTEGER NOT NULL PRIMARY KEY
    lowerValue REAL
    uom TEXT CHECK(GML_UomIdentifier)
    upperValue REAL
  }
  Constraint Enum <<codeList>> "SO_FAOPrimeValue" {
    * identifier = "Soil::FAOPrimeValue"
  }
  Feature <<featureType>> "SO_SoilDerivedObject" {
    * description = "A spatial object type for representing spatial objects with soil-related property derived from one or more soil and possibly other non soil properties.
  
    NOTE Soil thematic maps can be derived directly from the involved soil database (organic matter content, pH, texture, etc.) or they can be derived by using pedotransfer functions or pedotransfer rules (e.g. plant available water in the rooting depth). Derivation can be simple extraction from a single data field, or a complex combination of different kind of data and application of e.g. mathematical or expert knowledge-based procedures."
    * identifier = "Soil::SoilDerivedObject"
    * tableName = "SO_SoilDerivedObject"
    geometry GEOMETRY NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<reference>> soilDerivedObjectObservation_OM_Observation INTEGER
    <<reference>> inspireId INTEGER
  }
  Constraint Enum <<codeList>> "SO_OtherSoilNameTypeValue" {
    * identifier = "Soil::OtherSoilNameTypeValue"
  }
  Constraint Enum <<codeList>> "SO_WRBQualifierPlaceValue" {
    * identifier = "Soil::WRBQualifierPlaceValue"
  }
  Constraint Enum <<codeList>> "SO_SoilProfileParameterNameValue" {
    * identifier = "Soil::SoilProfileParameterNameValue"
  }
  Constraint Enum <<codeList>> "SO_WRBReferenceSoilGroupValue" {
    * identifier = "Soil::WRBReferenceSoilGroupValue"
    genoptions = "nKill=0;nLang=1;sLang=Java;bConstructor=1;bConInline=0;sConScope=Public;bCpyConstructor=0;bCpyConInline=0;sCpyConScope=Public;bDestructor=1;bDesVirtual=1;bDesInline=0;sDesScope=Public;CHeader=.h;CBody=.cpp;JBody=.java;VBody=.cls;VBNetBody=.vb;sAssocName=m_$LinkClass;bGetSet=1;bGenInterfaces=1;JCol=Vector;CCol=[];VCol=Collection;bVMultiuse=1;bVPersist=0;bVDatabind=0;bVDatasource=0;bVGlobal=0;bVCreatable=1;bVExposed=0;sMTS=0;sCRefType=*;sCGetPrefix=Get;sCSetPrefix=Set;sJGetPrefix=get;sJSetPrefix=set;sCSGetPrefix=Get;sCSSetPrefix=Set;sVVersion=6.0;CSBody=.cs;DBody=.pas;bJInnerClasses=1;sJCollection=;sCodePage=;sPHPBody=.php;sPHPVersion=;sPHPGetPrefix=get;sPHPSetPrefix=set;ASBody=.as;PyBody=.py;CPPVersion=;ASVersion=2.0;ANSICHeader=.h;ANSICBody=.c;ANSIC_OOSupport=0;ANSIC_NSDLMT=_;ANSIC_RefParam=1;ANSIC_RefStyle=*;ANSIC_RefName=this;ANSIC_ConstructorName=new;ANSIC_DestructorName=delete;"
  }
  Attributes <<dataType>> "SO_OtherSoilNameType" {
    * description = "an identification of the soil profile according to a specific classification scheme.
  
    EXAMPLE Fluventic Haploxerept, according to Soil Taxonomy (USDA 2006)."
    * identifier = "Soil::OtherSoilNameType"
    * tableName = "SO_OtherSoilNameType"
    id INTEGER NOT NULL PRIMARY KEY
    isOriginalClassification BOOLEAN NOT NULL
    soilName TEXT NOT NULL CHECK(SO_OtherSoilNameTypeValue)
  }
  Constraint Enum <<codeList>> "SO_OtherHorizonNotationTypeValue" {
    * identifier = "Soil::OtherHorizonNotationTypeValue"
  }
  Attributes <<dataType>> "SO_SoilThemeDescriptiveParameterType" {
    * description = "data type providing a descriptive property for the soil-related property (soil theme) that is represented by its associated SoilThemeCoverage.
  
    this datatype exists of a name and if needed a unit of measurement.
  
    EXAMPLE confidence level for each value in the SoilThemeCoverage (pH in the topsoil)"
    * identifier = "Soil::SoilThemeDescriptiveParameterType"
    * tableName = "SO_SoilThemeDescriptiveParameterType"
    id INTEGER NOT NULL PRIMARY KEY
    soilThemeDescriptiveParameterName TEXT NOT NULL
    uom TEXT CHECK(GML_UomIdentifier)
  }
  Constraint Enum <<codeList>> "SO_WRBSpecifierValue" {
    * identifier = "Soil::WRBSpecifierValue"
    genfile = "C:\temp\SpecifierValue.java"
    genoptions = "nKill=0;nLang=1;sLang=Java;bConstructor=1;bConInline=0;sConScope=Public;bCpyConstructor=0;bCpyConInline=0;sCpyConScope=Public;bDestructor=1;bDesVirtual=1;bDesInline=0;sDesScope=Public;CHeader=.h;CBody=.cpp;JBody=.java;VBody=.cls;VBNetBody=.vb;sAssocName=m_$LinkClass;bGetSet=1;bGenInterfaces=1;JCol=Vector;CCol=[];VCol=Collection;bVMultiuse=1;bVPersist=0;bVDatabind=0;bVDatasource=0;bVGlobal=0;bVCreatable=1;bVExposed=0;sMTS=0;sCRefType=*;sCGetPrefix=Get;sCSetPrefix=Set;sJGetPrefix=get;sJSetPrefix=set;sCSGetPrefix=Get;sCSSetPrefix=Set;sVVersion=6.0;CSBody=.cs;DBody=.pas;bJInnerClasses=1;sJCollection=;sCodePage=;sPHPBody=.php;sPHPVersion=;sPHPGetPrefix=get;sPHPSetPrefix=set;ASBody=.as;PyBody=.py;CPPVersion=;ASVersion=2.0;ANSICHeader=.h;ANSICBody=.c;ANSIC_OOSupport=0;ANSIC_NSDLMT=_;ANSIC_RefParam=1;ANSIC_RefStyle=*;ANSIC_RefName=this;ANSIC_ConstructorName=new;ANSIC_DestructorName=delete;"
  }
  Class "DerivedProfilePresenceInSoilBody" {
    conID = "EAID_8DB35F17_EA63_4c56_9C45_5CD8C3508143"
    derivedProfilePercentageRange_lowerValue : REAL [0..1]
    derivedProfilePercentageRange_uom : TEXT [0..1]
    derivedProfilePercentageRange_upperValue : REAL [0..1]
  }
  Constraint Enum <<codeList>> "SO_SoilDerivedObjectParameterNameValue" {
    * identifier = "Soil::SoilDerivedObjectParameterNameValue"
  }
  Attributes <<dataType>> "SO_FAOHorizonNotationType" {
    * description = "A classification of a horizon according to the Horizon classification system specified in <i>Guidelines for soil description, 4th edition</i>, Food and Agriculture Organization of the United Nations, Rome, 2006.
  
    A code system that denotes horizons in which the same dominant soil forming processes has been active similarly. This code summarizes many observations of the soil description and gives an impression about the genetic processes that have formed the soil under observation.
  
    NOTE The horizon notation according to FAO (2006) is a combination of several symbols:
  
    · A number that gives information about discontinuities, i.e. the number of the material in which the soil has formed, counted up from the soil surface, but not for the first material.
  
    · One or two capital letters that designate the type of master horizon (or transitional horizon), possibly separated by a slash
  
    · Lower case letters that designate subordinate characteristics of the horizon.
  
    · A number that designates horizontal subdivisions of otherwise similarly denoted horizon parts
  
    · A prime that enables to distinguish two horizons that have the same naming, but formed in different cycles of pedogenesis.
  
    EXAMPLE 2B' tg1
  
    SOURCE 1 Page 67 - 77 of the <i>Guidelines for soil description, 4th edition</i>, Food and Agriculture Organization of the United Nations, Rome, 2006. (ISBN 92-5-105521-1)"
    * identifier = "Soil::FAOHorizonNotationType"
    * tableName = "SO_FAOHorizonNotationType"
    FAOHorizonDiscontinuity INTEGER
    FAOHorizonMaster TEXT NOT NULL CHECK(SO_FAOHorizonMasterValue)
    FAOHorizonVertical INTEGER
    FAOPrime TEXT NOT NULL CHECK(SO_FAOPrimeValue)
    id INTEGER NOT NULL PRIMARY KEY
    isOriginalClassification BOOLEAN NOT NULL
    <<array>> FAOHorizonSubordinates TEXT
  }
  Constraint Enum <<codeList>> "SO_FAOHorizonSubordinateValue" {
    * identifier = "Soil::FAOHorizonSubordinateValue"
  }
  Feature <<featureType>> "SO_SoilPlot" {
    * description = "spot where a specific soil investigation is carried out.
  
    NOTE 1: For observed soil profiles, a spot location has to be defined. It is the place on which the observation is made. The profile is an observation made on the plot.
  
    NOTE 2: All types of plots only provide locality, but no soil information itself.
  
    EXAMPLE A borehole is the location where you gather the information to abstract a profile information from.
  
    SOURCE GS Soil"
    * identifier = "Soil::SoilPlot"
    * tableName = "SO_SoilPlot"
    id INTEGER NOT NULL PRIMARY KEY
    soilPlotLocation_geometryLocation GEOMETRY
    soilPlotLocation_nameLocation_extentTypeCode BOOLEAN DEFAULT '1'
    soilPlotLocation_nameLocation_geographicIdentifier_authority_date DATE
    soilPlotLocation_nameLocation_geographicIdentifier_authority_level LegislationLevelValue
    soilPlotLocation_nameLocation_geographicIdentifier_authority_link TEXT
    soilPlotLocation_nameLocation_geographicIdentifier_authority_name TEXT
    soilPlotLocation_nameLocation_geographicIdentifier_authority_type TEXT CHECK(BASE2_SimpleCitationType)
    soilPlotLocation_nameLocation_geographicIdentifier_code TEXT
    soilPlotType TEXT NOT NULL CHECK(SO_SoilPlotTypeValue)
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>>, <<reference>> locatedOn INTEGER
    <<reference>> inspireId INTEGER
  }
  Constraint Enum <<codeList>> "SO_SoilPlotTypeValue" {
    * identifier = "Soil::SoilPlotTypeValue"
  }
  Constraint Enum <<codeList>> "SO_ProfileElementParameterNameValue" {
    * identifier = "Soil::ProfileElementParameterNameValue"
  }
  Constraint Enum <<codeList>> "SO_SoilInvestigationPurposeValue" {
    * identifier = "Soil::SoilInvestigationPurposeValue"
  }
  Abstract Class <<featureType>> "SoilProfile" {
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>> localIdentifier TEXT
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> WRBSoilName SO_WRBSoilNameType [0..1] as ref
    <<voidable>> isDescribedBy ProfileElement [0..*] as ref
    <<voidable>> otherSoilName SO_OtherSoilNameType [0..*] as ref
    <<voidable>> soilProfileObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "SO_SoilThemeDescriptiveCoverage" {
    * description = "a spatial object type that is associated to the soil theme coverage and holds additional information on values of a property of the soil theme coverage.
  
    This coverage can only exist in relation to a base coverage SoilThemeCoverage, it has the same domain and spatial extent as the base coverage. And it gives extra information on the values of the base coverages
  
    SOURCE Adapted from "Coverage" [ISO 19123:2005].
  
    EXAMPLE coverage indicating the confidence level of the pH values reported in the associated SoilThemeCoverage."
    * identifier = "Soil::SoilThemeDescriptiveCoverage"
    * tableName = "SO_SoilThemeDescriptiveCoverage"
    coverageFunction_ruleDefinition TEXT
    coverageFunction_ruleReference TEXT
    domainSet Any NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    metadata Any
    rangeSet Any
    rangeType RecordType NOT NULL
    soilThemeDescriptiveParameter_soilThemeDescriptiveParameterName TEXT NOT NULL
    soilThemeDescriptiveParameter_uom TEXT CHECK(GML_UomIdentifier)
    <<lifeCycleInfo>> beginLifespanVersion DATETIME NOT NULL
    <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<reference>> isDescribing INTEGER
    coverageFunction_gridFunction GMLCOV_GridFunction [0..1] as ref
    domainExtent EX_Extent [1..*] as ref
  }
  Abstract Class <<featureType>> "ProfileElement" {
    profileElementDepthRange_lowerValue REAL
    profileElementDepthRange_uom TEXT CHECK(GML_UomIdentifier)
    profileElementDepthRange_upperValue REAL
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    inspireId BASE_Identifier [0..1] as ref
    isPartOf SoilProfile as ref
    <<voidable>> particleSizeFraction SO_ParticleSizeFractionType [0..*] as ref
    <<voidable>> profileElementObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
  Attributes <<dataType>> "SO_OtherHorizonNotationType" {
    * description = "classification of a horizon according to a specific classification system.
  
    A code system denoting horizons in which the same dominant soil forming processes have been active in the same way. This code summarizes many observations of the soil description and gives an impression about the genetic processes that have formed the soil under observation."
    * identifier = "Soil::OtherHorizonNotationType"
    * tableName = "SO_OtherHorizonNotationType"
    horizonNotation TEXT NOT NULL CHECK(SO_OtherHorizonNotationTypeValue)
    id INTEGER NOT NULL PRIMARY KEY
    isOriginalClassification BOOLEAN NOT NULL
  }
  Constraint Enum <<codeList>> "SO_SoilSiteParameterNameValue" {
    * identifier = "Soil::SoilSiteParameterNameValue"
  }
  Constraint Enum <<codeList>> "SO_WRBQualifierValue" {
    * identifier = "Soil::WRBQualifierValue"
    genfile = "C:\temp\QualifierValue.java"
    genoptions = "nKill=0;nLang=1;sLang=Java;bConstructor=1;bConInline=0;sConScope=Public;bCpyConstructor=0;bCpyConInline=0;sCpyConScope=Public;bDestructor=1;bDesVirtual=1;bDesInline=0;sDesScope=Public;CHeader=.h;CBody=.cpp;JBody=.java;VBody=.cls;VBNetBody=.vb;sAssocName=m_$LinkClass;bGetSet=1;bGenInterfaces=1;JCol=Vector;CCol=[];VCol=Collection;bVMultiuse=1;bVPersist=0;bVDatabind=0;bVDatasource=0;bVGlobal=0;bVCreatable=1;bVExposed=0;sMTS=0;sCRefType=*;sCGetPrefix=Get;sCSetPrefix=Set;sJGetPrefix=get;sJSetPrefix=set;sCSGetPrefix=Get;sCSSetPrefix=Set;sVVersion=6.0;CSBody=.cs;DBody=.pas;bJInnerClasses=1;sJCollection=;sCodePage=;sPHPBody=.php;sPHPVersion=;sPHPGetPrefix=get;sPHPSetPrefix=set;ASBody=.as;PyBody=.py;CPPVersion=;ASVersion=2.0;ANSICHeader=.h;ANSICBody=.c;ANSIC_OOSupport=0;ANSIC_NSDLMT=_;ANSIC_RefParam=1;ANSIC_RefStyle=*;ANSIC_RefName=this;ANSIC_ConstructorName=new;ANSIC_DestructorName=delete;"
  }
  Constraint Enum <<codeList>> "SO_LayerGenesisProcessStateValue" {
    * identifier = "Soil::LayerGenesisProcessStateValue"
  }
  Attributes <<featureType>> "SO_SoilThemeCoverage" {
    * description = "a spatial object type that holds values for a property based on one or more soil and possibly non soil parameters within its spatial, temporal or spatiotemporal domain.
  
    SOURCE Adapted from "Coverage" [ISO 19123:2005]."
    * identifier = "Soil::SoilThemeCoverage"
    * tableName = "SO_SoilThemeCoverage"
    coverageFunction_ruleDefinition TEXT
    coverageFunction_ruleReference TEXT
    domainSet Any NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    metadata Any
    rangeSet Any
    rangeType RecordType NOT NULL
    soilThemeParameter_soilThemeParameterName TEXT NOT NULL CHECK(SO_SoilDerivedObjectParameterNameValue)
    soilThemeParameter_uom TEXT CHECK(GML_UomIdentifier)
    <<lifeCycleInfo>> beginLifespanVersion DATETIME NOT NULL
    <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>> validTimeFrom DATE
    <<voidable>> validTimeTo DATE
    coverageFunction_gridFunction GMLCOV_GridFunction [0..1] as ref
    domainExtent EX_Extent [1..*] as ref
  }
  Attributes <<dataType>> "SO_ParticleSizeFractionType" {
    * description = "share of the soil that is composed of mineral soil particles of the size within the size range specified.
  
    Mineral part of the soil, fractioned on the basis of size (diameter), limits of the particles. It is the fine earth fraction. That is, the portion of the soil that passes through a 2 mm diameter sieve opening.
  
    The grain (or particle) size distribution characterizes the soil mineral material, based on the share of each equivalent diameter class of the individual particles.
  
    SOURCE1 NRCS Natural Resources Conservation Service, Soil survey laboratory information manual, Soil survey investigation report n.45 version 1.0 May 1995 pag. 11
  
    SOURCE2 GLOSSARY OF SOIL SCIENCE TERMS"
    * identifier = "Soil::ParticleSizeFractionType"
    * tableName = "SO_ParticleSizeFractionType"
    fractionContent REAL NOT NULL
    fractionParticleSizeRange_lowerValue REAL
    fractionParticleSizeRange_uom TEXT CHECK(GML_UomIdentifier)
    fractionParticleSizeRange_upperValue REAL
    id INTEGER NOT NULL PRIMARY KEY
  }
  Feature <<featureType>> "SO_SoilSite" {
    * description = "area within a larger survey, study or monitored area, where a specific soil investigation is carried out.
  
    Site provides the object to describe:
  
    a.) the surroundings of the plot
  
    and/or
  
    b.) the larger piece of land that is directly linked to and described by all soil investigations on its one or more spots (SoilPlots). It thus provides the object to which soil data of different kind (or the same kind, but at different points in time, e.g. in soil monitoring) obtained on different plots is related as if it would have been collected at the very same place. This allows for:
  
    1. combination of data that cannot be obtained on the very same place
  
    EXAMPLE: a soil pit and investigations on earthworm abundance cannot be done in the same place, but possibly some metres apart from each other. Nonetheless shall the results of both investigations be combined to inform about the soil state.
  
    or
  
    2. comparison of soil condition after some time has elapsed.
  
    EXAMPLE: Organic carbon stock has been investigated using data from two monitoring periods that had to be conducted on spatially slightly separated places because the sampling is destructive. Nonetheless are the results of both periods regarded as giving an idea how organic carbon stock has changed over the years at the same place.
  
    The site is also the object to state the date and time information on validity, etc.
  
    The soil site might have delineation, but can be located with a centre or reference point location only. Delineated soil sites - possibly in the form of cadastral parcels - are especially used in the inventory of contaminated areas.
  
    NOTE Any plot can be linked to one specific site only, but several plots to one site.
  
    SOURCE GS Soil, modified"
    * identifier = "Soil::SoilSite"
    * tableName = "SO_SoilSite"
    geometry GEOMETRY NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    soilInvestigationPurpose TEXT NOT NULL CHECK(SO_SoilInvestigationPurposeValue)
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<reference>> inspireId INTEGER
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
  }
  Attributes <<dataType>> "SO_WRBQualifierGroupType" {
    * description = "A data type to define the group of a qualifier and its possible specifier(s), its place and position with regard to the World Reference Base (WRB) Reference Soil Group (RSG) it belongs to according to <i>World reference base for soil resources 2006</i>, <i>first update 2007</i>, World Soil Resources Reports No. 103, Food and Agriculture Organization of the United Nations, Rome, 2007."
    * identifier = "Soil::WRBQualifierGroupType"
    * tableName = "SO_WRBQualifierGroupType"
    WRBqualifier TEXT NOT NULL CHECK(SO_WRBQualifierValue)
    id INTEGER NOT NULL PRIMARY KEY
    qualifierPlace TEXT NOT NULL CHECK(SO_WRBQualifierPlaceValue)
    qualifierPosition INTEGER NOT NULL
    <<array>> WRBspecifiers TEXT
  }
  Attributes <<featureType>> "SO_SoilHorizon" {
    * description = "Domain of a soil with a certain vertical extension, more or less parallel to the surface and homogeneous for most morphological and analytical characteristics, developed in a parent material layer through pedogenic processes or made up of in-situ sedimented organic residues of up-growing plants (peat).
  
    SOURCE ISO/WD 28258, modified
  
    NOTE Horizons may be part of a layer."
    * identifier = "Soil::SoilHorizon"
    * tableName = "SO_SoilHorizon"
    id INTEGER NOT NULL PRIMARY KEY
    profileElementDepthRange_lowerValue REAL
    profileElementDepthRange_uom TEXT CHECK(GML_UomIdentifier)
    profileElementDepthRange_upperValue REAL
    <<voidable>>, <<reference>> FAOHorizonNotation INTEGER
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    inspireId BASE_Identifier [0..1] as ref
    isPartOf SoilProfile as ref
    <<voidable>> particleSizeFraction SO_ParticleSizeFractionType [0..*] as ref
    <<voidable>> profileElementObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "SO_DerivedSoilProfile" {
    * description = "non-point-located soil profile that serves as a reference profile for a specific soil type in a certain geographical area.
  
    The characteristics of a derived soil profile are mostly derived (e.g. averaged) from one or several observed profiles of the same soil type in the area of interest, or are designed with expert knowledge about the same kind of landscape.
  
    NOTE 1 The derived soil profile represents the average or typical profile that characterizes the so called soil typological unit, soil series."
    * identifier = "Soil::DerivedSoilProfile"
    * tableName = "SO_DerivedSoilProfile"
    id INTEGER NOT NULL PRIMARY KEY
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>> localIdentifier TEXT
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> WRBSoilName SO_WRBSoilNameType [0..1] as ref
    <<voidable>> isDescribedBy ProfileElement [0..*] as ref
    <<voidable>> otherSoilName SO_OtherSoilNameType [0..*] as ref
    <<voidable>> soilProfileObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
  Relation "SO_SoilBody_isDescribedBy" {
    * profile = "attributes"
    * tableName = "SO_SoilBody_isDescribedBy"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_SoilBody(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SO_DerivedSoilProfile(id)
  }
  Relation "SO_SoilBody_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute SO_SoilBody#inspireId"
    * tableName = "SO_SoilBody_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_SoilBody(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "SO_observedProfile_location" {
    * profile = "features"
    * relatedReference = "attribute SO_ObservedSoilProfile#location"
    * tableName = "SO_observedProfile_location"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_ObservedSoilProfile(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SO_SoilPlot(id)
  }
  Relation "SO_WRBSoilNameType_over" {
    * profile = "attributes"
    * relatedReference = "attribute SO_WRBSoilNameType#over"
    * tableName = "SO_WRBSoilNameType_over"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_WRBSoilNameType(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SO_WRBSoilNameType(id)
  }
  Relation "SO_WRBSoilNameType_WRBQualifierGroup" {
    * profile = "attributes"
    * tableName = "SO_WRBSoilNameType_WRBQualifierGroup"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_WRBSoilNameType(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SO_WRBQualifierGroupType(id)
  }
  Relation "SO_SoilDerivedObject_isBasedOnSoilBody" {
    * profile = "features"
    * tableName = "SO_SoilDerivedObject_isBasedOnSoilBody"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_SoilDerivedObject(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SO_SoilBody(id)
  }
  Relation "SO_SoilDerivedObject_isBasedOnObservedSoilProfile" {
    * profile = "attributes"
    * tableName = "SO_SoilDerivedObject_isBasedOnObservedSoilProfile"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_SoilDerivedObject(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SO_ObservedSoilProfile(id)
  }
  Relation "SO_SoilDerivedObject_isBasedOnSoilDerivedObject" {
    * profile = "features"
    * tableName = "SO_SoilDerivedObject_isBasedOnSoilDerivedObject"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_SoilDerivedObject(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SO_SoilDerivedObject(id)
  }
  Relation "SO_SoilDerivedObject_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute SO_SoilDerivedObject#inspireId"
    * tableName = "SO_SoilDerivedObject_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_SoilDerivedObject(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "SO_SoilDerivedObject_soilDerivedObjectObservation_OM_Observation" {
    * profile = "attributes"
    * relatedReference = "attribute SO_SoilDerivedObject#soilDerivedObjectObservation_OM_Observation"
    * tableName = "SO_SoilDerivedObject_soilDerivedObjectObservation_OM_Observation"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_SoilDerivedObject(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "SO_SoilPlot_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute SO_SoilPlot#inspireId"
    * tableName = "SO_SoilPlot_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_SoilPlot(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "SO_SoilThemeDescriptiveCoverage_isDescribing" {
    * profile = "attributes"
    * relatedReference = "attribute SO_SoilThemeDescriptiveCoverage#isDescribing"
    * tableName = "SO_SoilThemeDescriptiveCoverage_isDescribing"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_SoilThemeDescriptiveCoverage(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SO_SoilThemeCoverage(id)
  }
  Relation "SO_SoilSite_isObservedOnLocation" {
    * profile = "features"
    * relatedReference = "attribute SO_SoilPlot#locatedOn"
    * tableName = "SO_SoilSite_isObservedOnLocation"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_SoilSite(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SO_SoilPlot(id)
  }
  Relation "SO_SoilSite_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute SO_SoilSite#inspireId"
    * tableName = "SO_SoilSite_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_SoilSite(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "SO_SoilSite_soilSiteObservation_OM_Observation" {
    * profile = "attributes"
    * tableName = "SO_SoilSite_soilSiteObservation_OM_Observation"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_SoilSite(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "SO_SoilHorizon_FAOHorizonNotation" {
    * profile = "attributes"
    * relatedReference = "attribute SO_SoilHorizon#FAOHorizonNotation"
    * tableName = "SO_SoilHorizon_FAOHorizonNotation"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_SoilHorizon(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SO_FAOHorizonNotationType(id)
  }
  Relation "SO_SoilHorizon_otherHorizonNotation" {
    * profile = "attributes"
    * tableName = "SO_SoilHorizon_otherHorizonNotation"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_SoilHorizon(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SO_OtherHorizonNotationType(id)
  }
  Relation "SO_DerivedSoilProfile_isDerivedFrom" {
    * profile = "attributes"
    * tableName = "SO_DerivedSoilProfile_isDerivedFrom"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SO_DerivedSoilProfile(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SO_ObservedSoilProfile(id)
  }
}
Container <<applicationSchema>> "Base Types 2" {
  * fileName = "Base Types 2"
  Constraint Enum <<enumeration>> "BASE2_SimpleCitationType" {
    CI_Citation
    DocumentCitation
    LegislationCitation
  }
}
Container <<applicationSchema>> "Geology" {
  * fileName = "Geology"
  Constraint Enum <<codeList>> "GE_LithologyValue" {
    * identifier = "Geology::LithologyValue"
  }
  Constraint Enum <<codeList>> "GE_EventEnvironmentValue" {
    * identifier = "Geology::EventEnvironmentValue"
  }
  Constraint Enum <<codeList>> "GE_EventProcessValue" {
    * identifier = "Geology::EventProcessValue"
  }
}
Container "Quadrilateral Grid" {
  * fileName = "Quadrilateral Grid"
  Constraint Enum <<codeList>> "CIS_CV_SequenceType" {
    * identifier = "Quadrilateral Grid::CV_SequenceType"
    CantorDiagonal
    Hilbert
    Morton
    boustrophedonic
    linear
    spiral
  }
}
Container "Data quality information" {
  * fileName = "Data quality information"
  Constraint Enum <<codeList>> "GMD_DQ_EvaluationMethodTypeCode" {
    * identifier = "Data quality information::DQ_EvaluationMethodTypeCode"
    directExternal
    directInternal
    indirect
  }
}
Container <<applicationSchema>> "Base Types" {
  * fileName = "Base Types"
  Attributes <<dataType>> "BASE_Identifier" {
    * description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    * identifier = "Base Types::Identifier"
    * tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    <<lifeCycleInfo>>, <<voidable>> versionId TEXT
  }
  Metadata "Unknown" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
}
Package "EA Model" {
  Class "applicationSchema" {}
  Datatype LegislationLevelValue
  
}

Package "Records and Class Metadata" {
  Class <<type>>, <<type>> "Any" {}
  Class <<type>>, <<type>> "RecordType" {
    typeName_aName : TEXT
    record Record [0..*] as ref
    schema Schema [0..*] as ref
  }
}
Package "Extent information" {
  Class "EX_Extent" {
    RationalRose$Java:ConstructorIs = "public"
    RationalRose$Java:Final = "False"
    RationalRose$Java:GenerateDefaultConstructor = "True"
    RationalRose$Java:GenerateFinalizer = "False"
    RationalRose$Java:GenerateInstanceInitializer = "False"
    RationalRose$Java:GenerateStaticInitializer = "False"
    RationalRose$Oracle8:CollectionOfREFS = "False"
    RationalRose$Visual Basic:CollectionClass = "Collection"
    RationalRose$Visual Basic:Creatable = "(221)"
    RationalRose$Visual Basic:GenerateInitialization = "False"
    RationalRose$Visual Basic:GenerateTermination = "False"
    RationalRose$Visual Basic:OptionBase = "(none)"
    RationalRose$Visual Basic:OptionCompare = "(none)"
    RationalRose$Visual Basic:OptionExplicit = "True"
    description : TEXT [0..1]
  }
}
Container <<applicationSchema>> "Coverages (Domain and Range)" {
  * fileName = "Coverages (Domain and Range)"
  Attributes <<dataType>> "GMLCOV_GridFunction" {
    * description = "An explicit mapping rule for grid geometries"
    * identifier = "Coverages (Domain and Range)::GridFunction"
    * tableName = "GMLCOV_GridFunction"
    id INTEGER NOT NULL PRIMARY KEY
    sequenceRule_scanDirection <<missing>>
    sequenceRule_type TEXT CHECK(CIS_CV_SequenceType) DEFAULT 'linear'
    <<array>> startPoints TEXT
  }
}
Container "Units of Measure" {
  * fileName = "Units of Measure"
  Constraint Enum "GML_UomIdentifier" {}
}
