Container <<applicationSchema>> "AdministrativeAndSocialGovernmentalServices" {
  * fileName = "AdministrativeAndSocialGovernmentalServices"
  Class <<union>> "ServiceLocationType" {
    serviceLocationByGeometry : GEOMETRY
    serviceLocationByActivityComplex_ActivityComplex BASE_Identifier as ref
    serviceLocationByAddress_Address BASE_Identifier as ref
    serviceLocationByBuilding_Building BASE_Identifier [1..*] as ref
    serviceLocationByUtilityNode_UtilityNode BASE_Identifier as ref
  }
  Constraint Enum <<codeList>> "US_GOVSERV_ServiceTypeValue" {
    * identifier = "AdministrativeAndSocialGovernmentalServices::ServiceTypeValue"
  }
  Class <<featureType>> "GovernmentalService" {
    serviceLocation_serviceLocationByGeometry : GEOMETRY [0..1]
    serviceType : TEXT
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion : DATETIME [0..1]
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> areaOfResponsibility_areaOfResponsibilityByPolygon : MULTISURFACE [0..1]
    inspireId BASE_Identifier as ref
    serviceLocation_serviceLocationByActivityComplex_ActivityComplex BASE_Identifier [0..1] as ref
    serviceLocation_serviceLocationByAddress_Address BASE_Identifier [0..1] as ref
    serviceLocation_serviceLocationByBuilding_Building BASE_Identifier [0..1] as ref
    serviceLocation_serviceLocationByUtilityNode_UtilityNode BASE_Identifier [0..1] as ref
    <<voidable>> areaOfResponsibility_areaOfResponsibilityByAdministrativeUnit_AdministrativeUnit BASE_Identifier [0..1] as ref
    <<voidable>> areaOfResponsibility_areaOfResponsibilityByNamedPlace_NamedPlace BASE_Identifier [0..1] as ref
    <<version>> areaOfResponsibility_areaOfResponsibilityByNetwork_element_NetworkElement BASE_Identifier [0..1] as ref
    <<voidable>> pointOfContact BASE2_Contact [0..*] as ref
  }
  Class <<union>> "AreaOfResponsibilityType" {
    areaOfResponsibilityByPolygon : MULTISURFACE
    areaOfResponsibilityByAdministrativeUnit_AdministrativeUnit BASE_Identifier [1..*] as ref
    areaOfResponsibilityByNamedPlace_NamedPlace BASE_Identifier [1..*] as ref
    areaOfResponsibilityByNetwork NET_NetworkReference [1..*] as ref
  }
}
Container <<applicationSchema>> "Base Types 2" {
  * fileName = "Base Types 2"
  Attributes <<dataType>> "BASE2_Contact" {
    * description = "Communication channels by which it is possible to gain access to someone or something."
    * identifier = "Base Types 2::Contact"
    * tableName = "BASE2_Contact"
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<reference>> address INTEGER
    <<voidable>>, <<array>> telephoneFacsimiles TEXT
    <<voidable>>, <<array>> telephoneVoices TEXT
    <<voidable>> electronicMailAddress TEXT
    <<voidable>> website TEXT
  }
  Attributes <<dataType>> "BASE2_SimpleGeographicalName" {
    * tableName = "BASE2_SimpleGeographicalName"
    id INTEGER NOT NULL PRIMARY KEY
    language TEXT
    spelling_text TEXT NOT NULL
  }
  Relation "BASE2_Contact_address" {
    * profile = "attributes"
    * relatedReference = "attribute BASE2_Contact#address"
    * tableName = "BASE2_Contact_address"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES BASE2_Contact(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES AD_AddressRepresentation(id)
  }
}
Container <<applicationSchema>> "Network" {
  * fileName = "Network"
  Attributes <<dataType>> "NET_NetworkReference" {
    * description = "A reference to a network element."
    * identifier = "Network::NetworkReference"
    * tableName = "NET_NetworkReference"
    id INTEGER NOT NULL PRIMARY KEY
    <<version>>, <<reference>> element_NetworkElement INTEGER
    involves TrafficRelatedEvent [0..*] as ref
  }
  Relation "NET_NetworkReference_element_NetworkElement" {
    * profile = "attributes"
    * relatedReference = "attribute NET_NetworkReference#element_NetworkElement"
    * tableName = "NET_NetworkReference_element_NetworkElement"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES NET_NetworkReference(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
}
Container <<applicationSchema>> "Addresses" {
  * fileName = "Addresses"
  Attributes <<dataType>> "AD_AddressRepresentation" {
    * description = "Representation of an address spatial object for use in external application schemas that need to include the basic, address information in a readable way.
  
    NOTE 1 The data type includes the all necessary readable address components as well as the address locator(s), which allows the identification of the address spatial objects, e.g., country, region, municipality, address area, post code, street name and address number. It also includes an optional reference to the full address spatial object.
  
    NOTE 2 The datatype could be used in application schemas that wish to include address information e.g. in a dataset that registers buildings or properties."
    * identifier = "Addresses::AddressRepresentation"
    * tableName = "AD_AddressRepresentation"
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<reference>> addressFeature_Address INTEGER
    <<array>> locatorDesignators TEXT
    <<voidable>> postCode TEXT
  }
  Relation "AD_AddressRepresentation_adminUnit" {
    * profile = "attributes"
    * tableName = "AD_AddressRepresentation_adminUnit"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AD_AddressRepresentation(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation "AD_AddressRepresentation_locatorName" {
    * profile = "attributes"
    * tableName = "AD_AddressRepresentation_locatorName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AD_AddressRepresentation(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation "AD_AddressRepresentation_addressArea" {
    * profile = "attributes"
    * tableName = "AD_AddressRepresentation_addressArea"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AD_AddressRepresentation(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation "AD_AddressRepresentation_postName" {
    * profile = "attributes"
    * tableName = "AD_AddressRepresentation_postName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AD_AddressRepresentation(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation "AD_AddressRepresentation_thoroughfare" {
    * profile = "attributes"
    * tableName = "AD_AddressRepresentation_thoroughfare"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AD_AddressRepresentation(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation "AD_AddressRepresentation_addressFeature_Address" {
    * profile = "attributes"
    * relatedReference = "attribute AD_AddressRepresentation#addressFeature_Address"
    * tableName = "AD_AddressRepresentation_addressFeature_Address"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AD_AddressRepresentation(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
}
Container <<applicationSchema>> "Base Types" {
  * fileName = "Base Types"
  Attributes <<dataType>> "BASE_Identifier" {
    * description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    * identifier = "Base Types::Identifier"
    * tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    <<lifeCycleInfo>>, <<voidable>> versionId TEXT
  }
  Metadata "Unknown" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
}
Package "EA Model" {
  Class "applicationSchema" {}
}

