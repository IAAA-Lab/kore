Container <<applicationSchema>> "Common Utility Network Elements" {
  * fileName = "Common Utility Network Elements"
  Attributes <<featureType>> "US_NET_COMMON_UtilityNetwork" {
    * description = "Collection of network elements that belong to a single type of utility network.
  
    In the real world, objects are connected to each other: an optical cable is connected to a multiplexer that in turn is connected to copper cables connecting into our homes to provide cable TV, telephony and internet access. Using GIS to support network utility management typically involves many types of features that may have connectivity to each other. Topology in GIS is generally defined as the spatial relationship between connecting or adjacent features, and is an essential prerequisite for many spatial operations such as network analysis. Utility networks can be described as NaN (Node-Arc-Node) network using two basic geometric types: points (aka <i>nodes</i>) and polylines (aka <i>arcs</i>). NaN topologies can be directed or un-directed, depending on specific type of network (i.e. water networks are directed, while telecommunications networks are not). Such topology structure provides an automated way to handle digitising and editing errors, and enable advanced spatial analyses such as adjacency, connectivity and containment. Infrastructure networks rely on Generic network model developed during Annex I.
  
    Note:
  
    Via the attribute "utilityNetworkType", that uses the "UtilityNetworkTypeValue" codelist, the type of utility network can be defined. E.g. by selecting the "sewer" value, the utility network becomes a "sewer utility network".
  
    Using the "crossTheme" value, a utility network can be created that contains e.g. ducts, which can contain pipes and cables from various utility network types."
    * identifier = "Common Utility Network Elements::UtilityNetwork"
    * tableName = "US_NET_COMMON_UtilityNetwork"
    elements_NetworkElement BASE_Identifier
    id INTEGER NOT NULL PRIMARY KEY
    utilityNetworkType TEXT NOT NULL CHECK(US_NET_COMMON_UtilityNetworkTypeValue)
    <<voidable>> geographicalName BASE2_SimpleGeographicalName
  }
  Attributes <<featureType>> "US_NET_COMMON_Cabinet" {
    * description = "Simple cabinet object which may carry utility objects belonging to either single or multiple utility networks.
  
    Cabinets represent mountable node objects that can contain smaller utility devices and cables."
    * identifier = "Common Utility Network Elements::Cabinet"
    * tableName = "US_NET_COMMON_Cabinet"
    geometry POINT NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<reference>> governmentalServiceReference_GovernmentalService INTEGER
    <<voidable>>, <<reference>> utilityFacilityReference_ActivityComplex INTEGER
    <<voidable>> currentStatus TEXT CHECK(BASE_ConditionOfFacilityValue)
    <<reference>> inspireId INTEGER
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    <<voidable>> verticalPosition TEXT CHECK(BASE_VerticalPositionValue)
  }
  Constraint Enum <<codeList>> "US_NET_COMMON_UtilityNetworkTypeValue" {
    * identifier = "Common Utility Network Elements::UtilityNetworkTypeValue"
    electricity
    oilGasChemicals
    sewer
    telecommunications [0..1]
    thermal
    water
  }
  Abstract Class <<featureType>> "UtilityLinkSet" {
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion : DATETIME [0..1]
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> currentStatus : TEXT [0..1]
    <<voidable>> utilityDeliveryType : TEXT [0..1]
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    <<voidable>> verticalPosition : TEXT [0..1]
    <<voidable>> warningType : TEXT [0..1]
    inspireId BASE_Identifier [0..1] as ref
    link_GeneralisedLink BASE_Identifier [1..*] as ref
    <<voidable>> governmentalServiceReference_GovernmentalService BASE_Identifier [0..1] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
    <<voidable>> utilityFacilityReference_ActivityComplex BASE_Identifier [0..1] as ref
  }
  Attributes <<featureType>> "US_NET_COMMON_Pipe" {
    * description = "A utility link or link sequence for the conveyance of solids, liquids, chemicals or gases from one location to another.
  
    A pipe can also be used as an object to encase several cables (a bundle of cables) or other (smaller) pipes."
    * identifier = "Common Utility Network Elements::Pipe"
    * tableName = "US_NET_COMMON_Pipe"
    id INTEGER NOT NULL PRIMARY KEY
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>>, <<reference>> governmentalServiceReference_GovernmentalService INTEGER
    <<voidable>>, <<reference>> utilityFacilityReference_ActivityComplex INTEGER
    <<voidable>> currentStatus TEXT CHECK(BASE_ConditionOfFacilityValue)
    <<reference>> inspireId INTEGER
    <<voidable>> pipeDiameter TEXT
    <<voidable>> pipeDiameter_uom TEXT CHECK(GML_UomIdentifier)
    <<voidable>> pressure TEXT
    <<voidable>> pressure_uom TEXT CHECK(GML_UomIdentifier)
    <<voidable>> utilityDeliveryType TEXT CHECK(US_NET_COMMON_UtilityDeliveryTypeValue)
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    <<voidable>> verticalPosition TEXT CHECK(BASE_VerticalPositionValue)
    <<voidable>> warningType TEXT CHECK(US_NET_COMMON_WarningTypeValue)
    link_GeneralisedLink BASE_Identifier [1..*] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
  }
  Abstract Class <<featureType>> "UtilityNodeContainer" {
    geometry : POINT
    <<voidable>> currentStatus : TEXT [0..1]
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    <<voidable>> verticalPosition : TEXT [0..1]
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> governmentalServiceReference_GovernmentalService BASE_Identifier [0..1] as ref
    <<voidable>> utilityFacilityReference_ActivityComplex BASE_Identifier [0..1] as ref
  }
  Attributes <<featureType>> "US_NET_COMMON_Pole" {
    * description = "Simple pole (mast) object which may carry utility objects belonging to either single or multiple utility networks.
  
    Poles represent node objects that can support utility devices and cables."
    * identifier = "Common Utility Network Elements::Pole"
    * tableName = "US_NET_COMMON_Pole"
    geometry POINT NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<reference>> governmentalServiceReference_GovernmentalService INTEGER
    <<voidable>>, <<reference>> utilityFacilityReference_ActivityComplex INTEGER
    <<voidable>> currentStatus TEXT CHECK(BASE_ConditionOfFacilityValue)
    <<reference>> inspireId INTEGER
    <<voidable>> poleHeight TEXT
    <<voidable>> poleHeight_uom TEXT CHECK(GML_UomIdentifier)
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    <<voidable>> verticalPosition TEXT CHECK(BASE_VerticalPositionValue)
  }
  Attributes <<featureType>> "US_NET_COMMON_Duct" {
    * description = "A utility link or link sequence used to protect and guide cable and pipes via an encasing construction.
  
    A Duct (or Conduit, or Duct-bank, or Wireway) is a linear object which belongs to the structural network. It is the outermost casing. A Duct may contain Pipe(s), Cable(s) or other Duct(s).
  
    Duct is a concrete feature class that contains information about the position and characteristics of ducts as seen from a manhole, vault, or a cross section of a trench and duct."
    * identifier = "Common Utility Network Elements::Duct"
    * tableName = "US_NET_COMMON_Duct"
    id INTEGER NOT NULL PRIMARY KEY
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>>, <<reference>> governmentalServiceReference_GovernmentalService INTEGER
    <<voidable>>, <<reference>> utilityFacilityReference_ActivityComplex INTEGER
    <<voidable>> currentStatus TEXT CHECK(BASE_ConditionOfFacilityValue)
    <<voidable>> ductWidth TEXT
    <<voidable>> ductWidth_uom TEXT CHECK(GML_UomIdentifier)
    <<reference>> inspireId INTEGER
    <<voidable>> utilityDeliveryType TEXT CHECK(US_NET_COMMON_UtilityDeliveryTypeValue)
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    <<voidable>> verticalPosition TEXT CHECK(BASE_VerticalPositionValue)
    <<voidable>> warningType TEXT CHECK(US_NET_COMMON_WarningTypeValue)
    link_GeneralisedLink BASE_Identifier [1..*] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "US_NET_COMMON_UtilityLinkSequence" {
    * description = "utility Link Sequence
  
    A linear spatial object, composed of an ordered collection of utility links, which represents a continuous path in the utility network without any branches. The element has a defined beginning and end and every position on the utility link sequence is identifiable with one single parameter."
    * identifier = "Common Utility Network Elements::UtilityLinkSequence"
    * tableName = "US_NET_COMMON_UtilityLinkSequence"
    id INTEGER NOT NULL PRIMARY KEY
    link NET_DirectedLink <<check [1..-1]>>
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>>, <<reference>> governmentalServiceReference_GovernmentalService INTEGER
    <<voidable>>, <<reference>> utilityFacilityReference_ActivityComplex INTEGER
    <<voidable>> currentStatus TEXT CHECK(BASE_ConditionOfFacilityValue)
    <<reference>> inspireId INTEGER
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    <<voidable>> verticalPosition TEXT CHECK(BASE_VerticalPositionValue)
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "US_NET_COMMON_Tower" {
    * description = "Simple tower object which may carry utility objects belonging to either single or multiple utility networks.
  
    Towers represent node objects that support reservoirs, cables or antennas."
    * identifier = "Common Utility Network Elements::Tower"
    * tableName = "US_NET_COMMON_Tower"
    geometry POINT NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<reference>> governmentalServiceReference_GovernmentalService INTEGER
    <<voidable>>, <<reference>> utilityFacilityReference_ActivityComplex INTEGER
    <<voidable>> currentStatus TEXT CHECK(BASE_ConditionOfFacilityValue)
    <<reference>> inspireId INTEGER
    <<voidable>> towerHeight TEXT
    <<voidable>> towerHeight_uom TEXT CHECK(GML_UomIdentifier)
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    <<voidable>> verticalPosition TEXT CHECK(BASE_VerticalPositionValue)
  }
  Abstract Class <<featureType>> "Cable" {
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion : DATETIME [0..1]
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> currentStatus : TEXT [0..1]
    <<voidable>> utilityDeliveryType : TEXT [0..1]
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    <<voidable>> verticalPosition : TEXT [0..1]
    <<voidable>> warningType : TEXT [0..1]
    inspireId BASE_Identifier [0..1] as ref
    link_GeneralisedLink BASE_Identifier [1..*] as ref
    <<voidable>> governmentalServiceReference_GovernmentalService BASE_Identifier [0..1] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
    <<voidable>> utilityFacilityReference_ActivityComplex BASE_Identifier [0..1] as ref
  }
  Abstract Class <<featureType>> "UtilityNetworkElement" {
    <<voidable>> currentStatus : TEXT [0..1]
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    <<voidable>> verticalPosition : TEXT [0..1]
    <<voidable>> governmentalServiceReference_GovernmentalService BASE_Identifier [0..1] as ref
    <<voidable>> utilityFacilityReference_ActivityComplex BASE_Identifier [0..1] as ref
  }
  Constraint Enum <<codeList>> "US_NET_COMMON_UtilityDeliveryTypeValue" {
    * identifier = "Common Utility Network Elements::UtilityDeliveryTypeValue"
    collection
    distribution
    private
    transport
  }
  Abstract Class <<featureType>> "UtilityNode" {
    geometry : POINT
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion : DATETIME [0..1]
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> currentStatus : TEXT [0..1]
    <<voidable>> validFrom : DATETIME [0..1]
    <<voidable>> validTo : DATETIME [0..1]
    <<voidable>> verticalPosition : TEXT [0..1]
    inspireId BASE_Identifier [0..1] as ref
    <<voidable>> governmentalServiceReference_GovernmentalService BASE_Identifier [0..1] as ref
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
    <<voidable>> spokeEnd_Link BASE_Identifier [0..*] as ref
    <<voidable>> spokeStart_Link BASE_Identifier [0..*] as ref
    <<voidable>> utilityFacilityReference_ActivityComplex BASE_Identifier [0..1] as ref
  }
  Attributes <<featureType>> "US_NET_COMMON_Manhole" {
    * description = "Simple container object which may contain either single or multiple utility networks objects.
  
    Manholes perform following functions:
  
    <ul>
  
    <li>Provide drainage for the conduit system so that freezing water does not damage the conduit or wires. </li>
  
    <li>Provide a location for bending the conduit run without damaging the wires. </li>
  
    <li>Provide a junction for conduits coming from different directions. </li>
  
    <li>Provide access to the system for maintenance. </li>
  
    </ul>"
    * identifier = "Common Utility Network Elements::Manhole"
    * tableName = "US_NET_COMMON_Manhole"
    geometry POINT NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<reference>> governmentalServiceReference_GovernmentalService INTEGER
    <<voidable>>, <<reference>> utilityFacilityReference_ActivityComplex INTEGER
    <<voidable>> currentStatus TEXT CHECK(BASE_ConditionOfFacilityValue)
    <<reference>> inspireId INTEGER
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    <<voidable>> verticalPosition TEXT CHECK(BASE_VerticalPositionValue)
  }
  Constraint Enum <<codeList>> "US_NET_COMMON_AppurtenanceTypeValue" {
    * identifier = "Common Utility Network Elements::AppurtenanceTypeValue"
  }
  Attributes <<featureType>> "US_NET_COMMON_Appurtenance" {
    * description = "An appurtenance is a node object that is described by its type (via the attribute "appurtenanceType").
  
    The "appurtenanceType" attribute uses the "AppurtenanceTypeValue" codelist for its values. But this is an empty codelist that needs to be extended by a concrete codelist of appurtenance types for each utility network type.
  
    So e.g. for the electricity network, the "ElectricityAppurtenanceTypeValue" codelist should be used."
    * identifier = "Common Utility Network Elements::Appurtenance"
    * tableName = "US_NET_COMMON_Appurtenance"
    geometry POINT NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>>, <<reference>> governmentalServiceReference_GovernmentalService INTEGER
    <<voidable>>, <<reference>> utilityFacilityReference_ActivityComplex INTEGER
    <<voidable>> appurtenanceType TEXT CHECK(US_NET_COMMON_AppurtenanceTypeValue)
    <<voidable>> currentStatus TEXT CHECK(BASE_ConditionOfFacilityValue)
    <<reference>> inspireId INTEGER
    <<voidable>> specificAppurtenanceType TEXT CHECK(US_NET_COMMON_SpecificAppurtenanceTypeValue)
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    <<voidable>> verticalPosition TEXT CHECK(BASE_VerticalPositionValue)
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
    <<voidable>> spokeEnd_Link BASE_Identifier [0..*] as ref
    <<voidable>> spokeStart_Link BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "US_NET_COMMON_UtilityLink" {
    * description = "utility Link
  
    A linear spatial object that describes the geometry and connectivity of a utility network between two points in the network."
    * identifier = "Common Utility Network Elements::UtilityLink"
    * tableName = "US_NET_COMMON_UtilityLink"
    centrelineGeometry CURVE NOT NULL
    fictitious BOOLEAN NOT NULL DEFAULT 'false'
    id INTEGER NOT NULL PRIMARY KEY
    <<lifeCycleInfo>>, <<voidable>> beginLifespanVersion DATETIME
    <<lifeCycleInfo>>, <<voidable>> endLifespanVersion DATETIME
    <<voidable>>, <<reference>> governmentalServiceReference_GovernmentalService INTEGER
    <<voidable>>, <<reference>> utilityFacilityReference_ActivityComplex INTEGER
    <<voidable>> currentStatus TEXT CHECK(BASE_ConditionOfFacilityValue)
    <<reference>> endNode_Node INTEGER
    <<reference>> inspireId INTEGER
    <<reference>> startNode_Node INTEGER
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    <<voidable>> verticalPosition TEXT CHECK(BASE_VerticalPositionValue)
    <<voidable>> inNetwork_Network BASE_Identifier [0..*] as ref
  }
  Constraint Enum <<codeList>> "US_NET_COMMON_SpecificAppurtenanceTypeValue" {
    * identifier = "Common Utility Network Elements::SpecificAppurtenanceTypeValue"
  }
  Constraint Enum <<codeList>> "US_NET_COMMON_WarningTypeValue" {
    * identifier = "Common Utility Network Elements::WarningTypeValue"
    concretePaving
    net
    tape
  }
  Relation <<voidable>> "US_NET_COMMON_UtilityNetwork_networks" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_UtilityNetwork_networks"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_UtilityNetwork(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES US_NET_COMMON_UtilityNetwork(id)
  }
  Relation "US_NET_COMMON_UtilityNetwork_authorityRole" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_UtilityNetwork_authorityRole"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_UtilityNetwork(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_RelatedParty(id)
  }
  Relation <<voidable>> "US_NET_COMMON_UtilityNetwork_utilityFacilityReference_ActivityComplex" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_UtilityNetwork_utilityFacilityReference_ActivityComplex"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_UtilityNetwork(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_UtilityNetwork_disclaimer" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_UtilityNetwork_disclaimer"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_UtilityNetwork(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleLocalisedCharacterString(id)
  }
  Relation <<voidable>> "US_NET_COMMON_UtilityNetwork_geographicalName" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_UtilityNetwork_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_UtilityNetwork(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation "US_NET_COMMON_UtilityNetwork_elements_NetworkElement" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_UtilityNetwork_elements_NetworkElement"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_UtilityNetwork(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Cabinet_nodes_UtilityNode" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_Cabinet_nodes_UtilityNode"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Cabinet(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "US_NET_COMMON_Cabinet_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Cabinet#inspireId"
    * tableName = "US_NET_COMMON_Cabinet_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Cabinet(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Cabinet_utilityFacilityReference_ActivityComplex" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Cabinet#utilityFacilityReference_ActivityComplex"
    * tableName = "US_NET_COMMON_Cabinet_utilityFacilityReference_ActivityComplex"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Cabinet(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Cabinet_governmentalServiceReference_GovernmentalService" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Cabinet#governmentalServiceReference_GovernmentalService"
    * tableName = "US_NET_COMMON_Cabinet_governmentalServiceReference_GovernmentalService"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Cabinet(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Pipe_pipes" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_Pipe_pipes"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Pipe(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES US_NET_COMMON_Pipe(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Pipe_cables_Cable" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_Pipe_cables_Cable"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Pipe(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Pipe_utilityFacilityReference_ActivityComplex" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Pipe#utilityFacilityReference_ActivityComplex"
    * tableName = "US_NET_COMMON_Pipe_utilityFacilityReference_ActivityComplex"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Pipe(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Pipe_governmentalServiceReference_GovernmentalService" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Pipe#governmentalServiceReference_GovernmentalService"
    * tableName = "US_NET_COMMON_Pipe_governmentalServiceReference_GovernmentalService"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Pipe(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "US_NET_COMMON_Pipe_link_GeneralisedLink" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_Pipe_link_GeneralisedLink"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Pipe(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "US_NET_COMMON_Pipe_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Pipe#inspireId"
    * tableName = "US_NET_COMMON_Pipe_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Pipe(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Pipe_inNetwork_Network" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_Pipe_inNetwork_Network"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Pipe(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Pole_nodes_UtilityNode" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_Pole_nodes_UtilityNode"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Pole(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "US_NET_COMMON_Pole_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Pole#inspireId"
    * tableName = "US_NET_COMMON_Pole_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Pole(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Pole_utilityFacilityReference_ActivityComplex" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Pole#utilityFacilityReference_ActivityComplex"
    * tableName = "US_NET_COMMON_Pole_utilityFacilityReference_ActivityComplex"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Pole(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Pole_governmentalServiceReference_GovernmentalService" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Pole#governmentalServiceReference_GovernmentalService"
    * tableName = "US_NET_COMMON_Pole_governmentalServiceReference_GovernmentalService"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Pole(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "US_NET_COMMON_Duct_pipes" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_Duct_pipes"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Duct(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES US_NET_COMMON_Pipe(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Duct_cables_Cable" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_Duct_cables_Cable"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Duct(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Duct_ducts" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_Duct_ducts"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Duct(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES US_NET_COMMON_Duct(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Duct_utilityFacilityReference_ActivityComplex" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Duct#utilityFacilityReference_ActivityComplex"
    * tableName = "US_NET_COMMON_Duct_utilityFacilityReference_ActivityComplex"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Duct(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Duct_governmentalServiceReference_GovernmentalService" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Duct#governmentalServiceReference_GovernmentalService"
    * tableName = "US_NET_COMMON_Duct_governmentalServiceReference_GovernmentalService"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Duct(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "US_NET_COMMON_Duct_link_GeneralisedLink" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_Duct_link_GeneralisedLink"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Duct(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "US_NET_COMMON_Duct_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Duct#inspireId"
    * tableName = "US_NET_COMMON_Duct_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Duct(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Duct_inNetwork_Network" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_Duct_inNetwork_Network"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Duct(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "US_NET_COMMON_UtilityLinkSequence_link" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_UtilityLinkSequence_link"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_UtilityLinkSequence(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES NET_DirectedLink(id)
  }
  Relation <<voidable>> "US_NET_COMMON_UtilityLinkSequence_utilityFacilityReference_ActivityComplex" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_UtilityLinkSequence#utilityFacilityReference_ActivityComplex"
    * tableName = "US_NET_COMMON_UtilityLinkSequence_utilityFacilityReference_ActivityComplex"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_UtilityLinkSequence(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_UtilityLinkSequence_governmentalServiceReference_GovernmentalService" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_UtilityLinkSequence#governmentalServiceReference_GovernmentalService"
    * tableName = "US_NET_COMMON_UtilityLinkSequence_governmentalServiceReference_GovernmentalService"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_UtilityLinkSequence(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "US_NET_COMMON_UtilityLinkSequence_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_UtilityLinkSequence#inspireId"
    * tableName = "US_NET_COMMON_UtilityLinkSequence_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_UtilityLinkSequence(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_UtilityLinkSequence_inNetwork_Network" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_UtilityLinkSequence_inNetwork_Network"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_UtilityLinkSequence(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Tower_nodes_UtilityNode" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_Tower_nodes_UtilityNode"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Tower(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "US_NET_COMMON_Tower_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Tower#inspireId"
    * tableName = "US_NET_COMMON_Tower_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Tower(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Tower_utilityFacilityReference_ActivityComplex" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Tower#utilityFacilityReference_ActivityComplex"
    * tableName = "US_NET_COMMON_Tower_utilityFacilityReference_ActivityComplex"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Tower(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Tower_governmentalServiceReference_GovernmentalService" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Tower#governmentalServiceReference_GovernmentalService"
    * tableName = "US_NET_COMMON_Tower_governmentalServiceReference_GovernmentalService"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Tower(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Manhole_nodes_UtilityNode" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_Manhole_nodes_UtilityNode"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Manhole(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "US_NET_COMMON_Manhole_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Manhole#inspireId"
    * tableName = "US_NET_COMMON_Manhole_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Manhole(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Manhole_utilityFacilityReference_ActivityComplex" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Manhole#utilityFacilityReference_ActivityComplex"
    * tableName = "US_NET_COMMON_Manhole_utilityFacilityReference_ActivityComplex"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Manhole(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Manhole_governmentalServiceReference_GovernmentalService" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Manhole#governmentalServiceReference_GovernmentalService"
    * tableName = "US_NET_COMMON_Manhole_governmentalServiceReference_GovernmentalService"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Manhole(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Appurtenance_utilityFacilityReference_ActivityComplex" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Appurtenance#utilityFacilityReference_ActivityComplex"
    * tableName = "US_NET_COMMON_Appurtenance_utilityFacilityReference_ActivityComplex"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Appurtenance(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Appurtenance_governmentalServiceReference_GovernmentalService" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Appurtenance#governmentalServiceReference_GovernmentalService"
    * tableName = "US_NET_COMMON_Appurtenance_governmentalServiceReference_GovernmentalService"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Appurtenance(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Appurtenance_spokeStart_Link" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_Appurtenance_spokeStart_Link"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Appurtenance(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Appurtenance_spokeEnd_Link" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_Appurtenance_spokeEnd_Link"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Appurtenance(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "US_NET_COMMON_Appurtenance_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_Appurtenance#inspireId"
    * tableName = "US_NET_COMMON_Appurtenance_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Appurtenance(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_Appurtenance_inNetwork_Network" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_Appurtenance_inNetwork_Network"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_Appurtenance(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_UtilityLink_utilityFacilityReference_ActivityComplex" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_UtilityLink#utilityFacilityReference_ActivityComplex"
    * tableName = "US_NET_COMMON_UtilityLink_utilityFacilityReference_ActivityComplex"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_UtilityLink(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_UtilityLink_governmentalServiceReference_GovernmentalService" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_UtilityLink#governmentalServiceReference_GovernmentalService"
    * tableName = "US_NET_COMMON_UtilityLink_governmentalServiceReference_GovernmentalService"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_UtilityLink(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "US_NET_COMMON_UtilityLink_startNode_Node" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_UtilityLink#startNode_Node"
    * tableName = "US_NET_COMMON_UtilityLink_startNode_Node"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_UtilityLink(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "US_NET_COMMON_UtilityLink_endNode_Node" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_UtilityLink#endNode_Node"
    * tableName = "US_NET_COMMON_UtilityLink_endNode_Node"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_UtilityLink(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "US_NET_COMMON_UtilityLink_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute US_NET_COMMON_UtilityLink#inspireId"
    * tableName = "US_NET_COMMON_UtilityLink_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_UtilityLink(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation <<voidable>> "US_NET_COMMON_UtilityLink_inNetwork_Network" {
    * profile = "attributes"
    * tableName = "US_NET_COMMON_UtilityLink_inNetwork_Network"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES US_NET_COMMON_UtilityLink(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
}
Container <<applicationSchema>> "Base Types" {
  * fileName = "Base Types"
  Constraint Enum <<enumeration>> "BASE_VerticalPositionValue" {
    * identifier = "Base Types::VerticalPositionValue"
    onGroundSurface
    suspendedOrElevated
    underground
  }
  Constraint Enum <<codeList>> "BASE_ConditionOfFacilityValue" {
    * identifier = "Base Types::ConditionOfFacilityValue"
    decommissioned
    disused
    functional
    projected
    underConstruction
  }
  Attributes <<dataType>> "BASE_Identifier" {
    * description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    * identifier = "Base Types::Identifier"
    * tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    <<lifeCycleInfo>>, <<voidable>> versionId TEXT
  }
  Metadata "Unknown" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
}
Container "basicTypes" {
  * fileName = "basicTypes"
  Constraint Enum <<enumeration>>, <<enumeration>> "GML_Sign" {
    * identifier = "basicTypes::Sign"
    "+"
    "-"
  }
}
Container <<applicationSchema>> "Base Types 2" {
  * fileName = "Base Types 2"
  Attributes <<dataType>> "BASE2_Contact" {
    * description = "Communication channels by which it is possible to gain access to someone or something."
    * identifier = "Base Types 2::Contact"
    * tableName = "BASE2_Contact"
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<reference>> address INTEGER
    <<voidable>>, <<array>> telephoneFacsimiles TEXT
    <<voidable>>, <<array>> telephoneVoices TEXT
    <<voidable>> electronicMailAddress TEXT
    <<voidable>> website TEXT
  }
  Constraint Enum <<codeList>> "BASE2_PartyRoleValue" {
    * identifier = "Base Types 2::PartyRoleValue"
  }
  Attributes <<dataType>> "BASE2_RelatedParty" {
    * description = "An organisation or a person with a role related to a resource.
  
    NOTE 1 A party, typically an individual person, acting as a general point of contact for a resource can be specified without providing any particular role."
    * identifier = "Base Types 2::RelatedParty"
    * tableName = "BASE2_RelatedParty"
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<reference>> contact INTEGER
    <<voidable>>, <<array>> roles TEXT
  }
  Constraint Enum <<enumeration>> "BASE2_SimpleCitationType" {
    CI_Citation
    DocumentCitation
    LegislationCitation
  }
  Attributes <<dataType>> "SimpleCitation" {
    date DATE
    level LegislationLevelValue
    link TEXT
    name TEXT NOT NULL
    type TEXT NOT NULL CHECK(BASE2_SimpleCitationType)
  }
  Attributes <<dataType>> "BASE2_SimpleGeographicalName" {
    * tableName = "BASE2_SimpleGeographicalName"
    id INTEGER NOT NULL PRIMARY KEY
    language TEXT
    spelling_text TEXT NOT NULL
  }
  Constraint Enum <<codeList>> "BASE2_Locale" {}
  Attributes <<type>> "BASE2_SimpleLocalisedCharacterString" {
    * tableName = "BASE2_SimpleLocalisedCharacterString"
    id INTEGER NOT NULL PRIMARY KEY
    locale TEXT NOT NULL CHECK(BASE2_Locale)
    value TEXT NOT NULL
  }
  Relation <<voidable>> "BASE2_RelatedParty_individualName" {
    * profile = "attributes"
    * tableName = "BASE2_RelatedParty_individualName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES BASE2_RelatedParty(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleLocalisedCharacterString(id)
  }
  Relation <<voidable>> "BASE2_RelatedParty_organisationName" {
    * profile = "attributes"
    * tableName = "BASE2_RelatedParty_organisationName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES BASE2_RelatedParty(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleLocalisedCharacterString(id)
  }
  Relation <<voidable>> "BASE2_RelatedParty_positionName" {
    * profile = "attributes"
    * tableName = "BASE2_RelatedParty_positionName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES BASE2_RelatedParty(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleLocalisedCharacterString(id)
  }
  Relation <<voidable>> "BASE2_RelatedParty_contact" {
    * profile = "attributes"
    * relatedReference = "attribute BASE2_RelatedParty#contact"
    * tableName = "BASE2_RelatedParty_contact"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES BASE2_RelatedParty(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_Contact(id)
  }
  Relation <<voidable>> "BASE2_Contact_address" {
    * profile = "attributes"
    * relatedReference = "attribute BASE2_Contact#address"
    * tableName = "BASE2_Contact_address"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES BASE2_Contact(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES AD_AddressRepresentation(id)
  }
  Relation <<voidable>> "BASE2_Contact_contactInstructions" {
    * profile = "attributes"
    * tableName = "BASE2_Contact_contactInstructions"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES BASE2_Contact(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleLocalisedCharacterString(id)
  }
  Relation <<voidable>> "BASE2_Contact_hoursOfService" {
    * profile = "attributes"
    * tableName = "BASE2_Contact_hoursOfService"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES BASE2_Contact(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleLocalisedCharacterString(id)
  }
}
Container <<applicationSchema>> "Network" {
  * fileName = "Network"
  Attributes <<dataType>> "NET_DirectedLink" {
    * description = "A link either in its positive or negative direction."
    * identifier = "Network::DirectedLink"
    * tableName = "NET_DirectedLink"
    direction TEXT NOT NULL CHECK(GML_Sign)
    id INTEGER NOT NULL PRIMARY KEY
    <<reference>> link_Link INTEGER
  }
  Relation "NET_DirectedLink_link_Link" {
    * profile = "attributes"
    * relatedReference = "attribute NET_DirectedLink#link_Link"
    * tableName = "NET_DirectedLink_link_Link"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES NET_DirectedLink(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
}
Container <<applicationSchema>> "Addresses" {
  * fileName = "Addresses"
  Attributes <<dataType>> "AD_AddressRepresentation" {
    * description = "Representation of an address spatial object for use in external application schemas that need to include the basic, address information in a readable way.
  
    NOTE 1 The data type includes the all necessary readable address components as well as the address locator(s), which allows the identification of the address spatial objects, e.g., country, region, municipality, address area, post code, street name and address number. It also includes an optional reference to the full address spatial object.
  
    NOTE 2 The datatype could be used in application schemas that wish to include address information e.g. in a dataset that registers buildings or properties."
    * identifier = "Addresses::AddressRepresentation"
    * tableName = "AD_AddressRepresentation"
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<reference>> addressFeature_Address INTEGER
    <<array>> locatorDesignators TEXT
    <<voidable>> postCode TEXT
  }
  Relation "AD_AddressRepresentation_adminUnit" {
    * profile = "attributes"
    * tableName = "AD_AddressRepresentation_adminUnit"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AD_AddressRepresentation(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation "AD_AddressRepresentation_locatorName" {
    * profile = "attributes"
    * tableName = "AD_AddressRepresentation_locatorName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AD_AddressRepresentation(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "AD_AddressRepresentation_addressArea" {
    * profile = "attributes"
    * tableName = "AD_AddressRepresentation_addressArea"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AD_AddressRepresentation(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "AD_AddressRepresentation_postName" {
    * profile = "attributes"
    * tableName = "AD_AddressRepresentation_postName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AD_AddressRepresentation(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "AD_AddressRepresentation_thoroughfare" {
    * profile = "attributes"
    * tableName = "AD_AddressRepresentation_thoroughfare"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AD_AddressRepresentation(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation <<voidable>> "AD_AddressRepresentation_addressFeature_Address" {
    * profile = "attributes"
    * relatedReference = "attribute AD_AddressRepresentation#addressFeature_Address"
    * tableName = "AD_AddressRepresentation_addressFeature_Address"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES AD_AddressRepresentation(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
}
Package "Location referencing mechanisms" {
  Class "NodeLocationReference" {
    node_Node : BASE_Identifier
    <<voidable>> networkReference : SimpleCitation [0..1]
  }
}
Package "EA Model" {
  Class "applicationSchema" {}
  Datatype LegislationLevelValue
  
}

Container "Units of Measure" {
  * fileName = "Units of Measure"
  Constraint Enum "GML_UomIdentifier" {}
}
