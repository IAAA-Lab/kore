Container <<applicationSchema>> "BuildingsBase" {
  * fileName = "BuildingsBase"
  Constraint Enum <<codeList>> "BU_BASE_ConditionOfConstructionValue" {
    * identifier = "BuildingsBase::ConditionOfConstructionValue"
  }
  Abstract Class <<featureType>> "AbstractBuilding" {
    Governance = "<<missing>>"
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion : DATETIME [0..1]
    <<voidable>>, <<array>> buildingNatures : TEXT [0..1]
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> conditionOfConstruction : TEXT [0..1]
    <<voidable>> dateOfConstruction_anyPoint : DATETIME [0..1]
    <<voidable>> dateOfConstruction_beginning : DATETIME [0..1]
    <<voidable>> dateOfConstruction_end : DATETIME [0..1]
    <<voidable>> dateOfDemolition_anyPoint : DATETIME [0..1]
    <<voidable>> dateOfDemolition_beginning : DATETIME [0..1]
    <<voidable>> dateOfDemolition_end : DATETIME [0..1]
    <<voidable>> dateOfRenovation_anyPoint : DATETIME [0..1]
    <<voidable>> dateOfRenovation_beginning : DATETIME [0..1]
    <<voidable>> dateOfRenovation_end : DATETIME [0..1]
    <<voidable>> numberOfBuildingUnits : INTEGER [0..1]
    <<voidable>> numberOfDwellings : INTEGER [0..1]
    <<voidable>> numberOfFloorsAboveGround : INTEGER [0..1]
    inspireId BASE_Identifier as ref
    <<voidable>> currentUse BU_BASE_CurrentUse [0..*] as ref
    <<voidable>> elevation BU_BASE_Elevation [0..*] as ref
    <<voidable>> externalReference BU_BASE_ExternalReference [0..*] as ref
    <<voidable>> heightAboveGround BU_BASE_HeightAboveGround [0..*] as ref
    <<voidable>> name BASE2_SimpleGeographicalName [0..*] as ref
  }
  Constraint Enum <<codeList>> "BU_BASE_HorizontalGeometryReferenceValue" {
    * identifier = "BuildingsBase::HorizontalGeometryReferenceValue"
  }
  Abstract Class <<featureType>> "Building" {
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion : DATETIME [0..1]
    <<voidable>>, <<array>> buildingNatures : TEXT [0..1]
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> conditionOfConstruction : TEXT [0..1]
    <<voidable>> dateOfConstruction_anyPoint : DATETIME [0..1]
    <<voidable>> dateOfConstruction_beginning : DATETIME [0..1]
    <<voidable>> dateOfConstruction_end : DATETIME [0..1]
    <<voidable>> dateOfDemolition_anyPoint : DATETIME [0..1]
    <<voidable>> dateOfDemolition_beginning : DATETIME [0..1]
    <<voidable>> dateOfDemolition_end : DATETIME [0..1]
    <<voidable>> dateOfRenovation_anyPoint : DATETIME [0..1]
    <<voidable>> dateOfRenovation_beginning : DATETIME [0..1]
    <<voidable>> dateOfRenovation_end : DATETIME [0..1]
    <<voidable>> numberOfBuildingUnits : INTEGER [0..1]
    <<voidable>> numberOfDwellings : INTEGER [0..1]
    <<voidable>> numberOfFloorsAboveGround : INTEGER [0..1]
    inspireId BASE_Identifier as ref
    <<voidable>> currentUse BU_BASE_CurrentUse [0..*] as ref
    <<voidable>> elevation BU_BASE_Elevation [0..*] as ref
    <<voidable>> externalReference BU_BASE_ExternalReference [0..*] as ref
    <<voidable>> heightAboveGround BU_BASE_HeightAboveGround [0..*] as ref
    <<voidable>> name BASE2_SimpleGeographicalName [0..*] as ref
  }
  Constraint Enum <<codeList>> "BU_BASE_ElevationReferenceValue" {
    * identifier = "BuildingsBase::ElevationReferenceValue"
  }
  Abstract Class <<featureType>> "BuildingPart" {
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion : DATETIME [0..1]
    <<voidable>>, <<array>> buildingNatures : TEXT [0..1]
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> conditionOfConstruction : TEXT [0..1]
    <<voidable>> dateOfConstruction_anyPoint : DATETIME [0..1]
    <<voidable>> dateOfConstruction_beginning : DATETIME [0..1]
    <<voidable>> dateOfConstruction_end : DATETIME [0..1]
    <<voidable>> dateOfDemolition_anyPoint : DATETIME [0..1]
    <<voidable>> dateOfDemolition_beginning : DATETIME [0..1]
    <<voidable>> dateOfDemolition_end : DATETIME [0..1]
    <<voidable>> dateOfRenovation_anyPoint : DATETIME [0..1]
    <<voidable>> dateOfRenovation_beginning : DATETIME [0..1]
    <<voidable>> dateOfRenovation_end : DATETIME [0..1]
    <<voidable>> numberOfBuildingUnits : INTEGER [0..1]
    <<voidable>> numberOfDwellings : INTEGER [0..1]
    <<voidable>> numberOfFloorsAboveGround : INTEGER [0..1]
    inspireId BASE_Identifier as ref
    <<voidable>> currentUse BU_BASE_CurrentUse [0..*] as ref
    <<voidable>> elevation BU_BASE_Elevation [0..*] as ref
    <<voidable>> externalReference BU_BASE_ExternalReference [0..*] as ref
    <<voidable>> heightAboveGround BU_BASE_HeightAboveGround [0..*] as ref
    <<voidable>> name BASE2_SimpleGeographicalName [0..*] as ref
  }
  Constraint Enum <<codeList>> "BU_BASE_BuildingNatureValue" {
    * identifier = "BuildingsBase::BuildingNatureValue"
  }
  Constraint Enum <<codeList>> "BU_BASE_HeightStatusValue" {
    * identifier = "BuildingsBase::HeightStatusValue"
  }
  Attributes <<dataType>> "BU_BASE_Elevation" {
    * description = "This data types includes the elevation value itself  and information on how this elevation was measured."
    * identifier = "BuildingsBase::Elevation"
    * tableName = "BU_BASE_Elevation"
    elevationReference TEXT NOT NULL CHECK(BU_BASE_ElevationReferenceValue)
    elevationValue_coordinate <<missing>> NOT NULL
    elevationValue_dimension INTEGER NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
  }
  Constraint Enum <<codeList>> "BU_BASE_CurrentUseValue" {
    * identifier = "BuildingsBase::CurrentUseValue"
    extensiblity = "narrower"
  }
  Attributes <<dataType>> "BU_BASE_DateOfEvent" {
    * description = "This data type includes the different possible ways to define the date of an event."
    * identifier = "BuildingsBase::DateOfEvent"
    * tableName = "BU_BASE_DateOfEvent"
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>> anyPoint DATETIME
    <<voidable>> beginning DATETIME
    <<voidable>> end DATETIME
  }
  Attributes <<dataType>> "BU_BASE_ExternalReference" {
    * description = "Reference to an external information system containing any piece of information related to the spatial object."
    * identifier = "BuildingsBase::ExternalReference"
    * tableName = "BU_BASE_ExternalReference"
    id INTEGER NOT NULL PRIMARY KEY
    informationSystem TEXT NOT NULL
    reference TEXT NOT NULL
  }
  Attributes <<dataType>> "BU_BASE_CurrentUse" {
    * description = "This data type enables to detail the current use(s)."
    * identifier = "BuildingsBase::CurrentUse"
    * tableName = "BU_BASE_CurrentUse"
    currentUse TEXT NOT NULL CHECK(BU_BASE_CurrentUseValue)
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>> percentage INTEGER
  }
  Feature <<dataType>> "BU_BASE_BuildingGeometry2D" {
    * description = "This data types includes the geometry of the building and metadata information about which element of the building was captured and how."
    * identifier = "BuildingsBase::BuildingGeometry2D"
    * tableName = "BU_BASE_BuildingGeometry2D"
    geometry GEOMETRY NOT NULL
    horizontalGeometryReference TEXT NOT NULL CHECK(BU_BASE_HorizontalGeometryReferenceValue)
    id INTEGER NOT NULL PRIMARY KEY
    referenceGeometry BOOLEAN NOT NULL
    verticalGeometryReference TEXT CHECK(BU_BASE_ElevationReferenceValue)
    <<voidable>> horizontalGeometryEstimatedAccuracy TEXT
    <<voidable>> horizontalGeometryEstimatedAccuracy_uom TEXT CHECK(GML_UomIdentifier)
    <<voidable>> verticalGeometryEstimatedAccuracy TEXT
    <<voidable>> verticalGeometryEstimatedAccuracy_uom TEXT CHECK(GML_UomIdentifier)
  }
  Abstract Class <<featureType>> "AbstractConstruction" {
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion : DATETIME [0..1]
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion : DATETIME [0..1]
    <<voidable>> conditionOfConstruction : TEXT [0..1]
    <<voidable>> dateOfConstruction_anyPoint : DATETIME [0..1]
    <<voidable>> dateOfConstruction_beginning : DATETIME [0..1]
    <<voidable>> dateOfConstruction_end : DATETIME [0..1]
    <<voidable>> dateOfDemolition_anyPoint : DATETIME [0..1]
    <<voidable>> dateOfDemolition_beginning : DATETIME [0..1]
    <<voidable>> dateOfDemolition_end : DATETIME [0..1]
    <<voidable>> dateOfRenovation_anyPoint : DATETIME [0..1]
    <<voidable>> dateOfRenovation_beginning : DATETIME [0..1]
    <<voidable>> dateOfRenovation_end : DATETIME [0..1]
    inspireId BASE_Identifier as ref
    <<voidable>> elevation BU_BASE_Elevation [0..*] as ref
    <<voidable>> externalReference BU_BASE_ExternalReference [0..*] as ref
    <<voidable>> heightAboveGround BU_BASE_HeightAboveGround [0..*] as ref
    <<voidable>> name BASE2_SimpleGeographicalName [0..*] as ref
  }
  Attributes <<dataType>> "BU_BASE_HeightAboveGround" {
    * description = "Vertical distance (measured or estimated) between a low reference and a high reference."
    * identifier = "BuildingsBase::HeightAboveGround"
    * tableName = "BU_BASE_HeightAboveGround"
    id INTEGER NOT NULL PRIMARY KEY
    value TEXT NOT NULL
    value_uom TEXT NOT NULL CHECK(GML_UomIdentifier)
    <<voidable>> heightReference TEXT CHECK(BU_BASE_ElevationReferenceValue)
    <<voidable>> lowReference TEXT CHECK(BU_BASE_ElevationReferenceValue)
    <<voidable>> status TEXT CHECK(BU_BASE_HeightStatusValue)
  }
  Relation "BU_BASE_ExternalReference_informationSystemName" {
    * profile = "attributes"
    * tableName = "BU_BASE_ExternalReference_informationSystemName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES BU_BASE_ExternalReference(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleLocalisedCharacterString(id)
  }
}
Container <<applicationSchema>> "Base Types 2" {
  * fileName = "Base Types 2"
  Attributes <<dataType>> "BASE2_SimpleGeographicalName" {
    * tableName = "BASE2_SimpleGeographicalName"
    id INTEGER NOT NULL PRIMARY KEY
    language TEXT
    spelling_text TEXT NOT NULL
  }
  Constraint Enum <<codeList>> "BASE2_Locale" {}
  Attributes <<type>> "BASE2_SimpleLocalisedCharacterString" {
    * tableName = "BASE2_SimpleLocalisedCharacterString"
    id INTEGER NOT NULL PRIMARY KEY
    locale TEXT NOT NULL CHECK(BASE2_Locale)
    value TEXT NOT NULL
  }
}
Container <<applicationSchema>> "Base Types" {
  * fileName = "Base Types"
  Attributes <<dataType>> "BASE_Identifier" {
    * description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    * identifier = "Base Types::Identifier"
    * tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    <<lifeCycleInfo>>, <<voidable>> versionId TEXT
  }
  Metadata "Unknown" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
}
Package "EA Model" {
  Class "applicationSchema" {}
}

Container "Units of Measure" {
  * fileName = "Units of Measure"
  Constraint Enum "GML_UomIdentifier" {}
}
