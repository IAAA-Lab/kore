Container <<applicationSchema>> "EnvironmentalMonitoringFacilities" {
  * fileName = "EnvironmentalMonitoringFacilities"
  Attributes <<featureType>> "EF_OperationalActivityPeriod" {
    * description = "Corresponds to a period during which the EnvironmentalMonitoringFacility has been up and running."
    * identifier = "EnvironmentalMonitoringFacilities::OperationalActivityPeriod"
    * tableName = "EF_OperationalActivityPeriod"
    activityTime TM_Object NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
  }
  Class "Hierarchy" {
    conID = "EAID_5AAEC28B_7F66_4f88_8EB5_20A9C2F133DD"
    <<voidable>> linkingTime : TM_Object [0..1]
  }
  Class <<featureType>> "AbstractMonitoringObject" {
    geometry : GEOMETRY [0..1]
    mediaMonitoreds : TEXT
    <<voidable>> additionalDescription : TEXT [0..1]
    <<voidable>> names : TEXT [0..1]
    <<voidable>> onlineResources : TEXT [0..1]
    <<voidable>> purposes : TEXT [0..1]
    inspireId BASE_Identifier as ref
    <<voidable>> broader AbstractMonitoringObject [0..1] as ref
    <<voidable>> legalBackground BASE2_SimpleCitation [0..*] as ref
    <<voidable>> narrower AbstractMonitoringObject [0..*] as ref
    <<voidable>> responsibleParty BASE2_RelatedParty [0..*] as ref
    <<voidable>> supersededBy AbstractMonitoringObject [0..*] as ref
    <<voidable>> supersedes AbstractMonitoringObject [0..*] as ref
  }
  Feature <<featureType>> "EF_EnvironmentalMonitoringFacility" {
    * description = "A georeferenced object directly collecting or processing data about objects whose properties (e.g. physical, chemical, biological or other aspects of environmental conditions) are repeatedly observed or measured. An environmental monitoring facility can also host other environmental monitoring facilities.
  
    NOTE 1: An EnvironmentalMonitoringFacility is not a facility in the common INSPIRE sense realised by the Generic Conceptual Model class ActivtiyComplex.
  
    NOTE 2: Laboratories are not EnvironmentalMonitoringFacilities from an INSPIRE perspective as the exact location of the laboratory does not add further information to the measurement.
  
    The methodology used in the laboratory should be provided with observational data."
    * identifier = "EnvironmentalMonitoringFacilities::EnvironmentalMonitoringFacility"
    * tableName = "EF_EnvironmentalMonitoringFacility"
    geometry : GEOMETRY [0..1]
    id INTEGER NOT NULL PRIMARY KEY
    mediaMonitoreds : TEXT
    <<voidable>> additionalDescription : TEXT [0..1]
    measurementRegime TEXT CHECK(EF_MeasurementRegimeValue)
    mobile BOOLEAN
    <<voidable>> names : TEXT [0..1]
    <<voidable>> onlineResources : TEXT [0..1]
    <<voidable>> purposes : TEXT [0..1]
    representativePoint POINT
    resultAcquisitionSources TEXT
    specialisedEMFType TEXT CHECK(EF_SpecialisedEMFTypeValue)
    inspireId BASE_Identifier as ref
    <<voidable>> broader AbstractMonitoringObject [0..1] as ref
    <<voidable>> hasObservation_OM_Observation BASE_Identifier [0..*] as ref
    <<voidable>> involvedIn EF_EnvironmentalMonitoringActivity [0..*] as ref
    <<voidable>> legalBackground BASE2_SimpleCitation [0..*] as ref
    <<voidable>> narrower AbstractMonitoringObject [0..*] as ref
    <<voidable>> reportedTo EF_ReportToLegalAct [0..*] as ref
    <<voidable>> responsibleParty BASE2_RelatedParty [0..*] as ref
    <<voidable>> supersededBy AbstractMonitoringObject [0..*] as ref
    <<voidable>> supersedes AbstractMonitoringObject [0..*] as ref
  }
  Constraint Enum <<codeList>> "EF_MeasurementRegimeValue" {
    * identifier = "EnvironmentalMonitoringFacilities::MeasurementRegimeValue"
  }
  Class "AnyDomainLink" {
    conID = "EAID_A6E023B9_0B0F_4f97_B058_4F3A3E79B87C"
    <<voidable>> comment : TEXT [0..1]
  }
  Constraint Enum <<codeList>> "EF_SpecialisedEMFTypeValue" {
    * identifier = "EnvironmentalMonitoringFacilities::SpecialisedEMFTypeValue"
  }
  Constraint Enum <<codeList>> "EF_MediaValue" {
    * identifier = "EnvironmentalMonitoringFacilities::MediaValue"
  }
  Class "Port1" {
    isActive = "false"
    propertyType = "{F655FA4D-B711-4fd1-A13E-56CA2E60A726}"
  }
  Class <<featureType>> "AbstractMonitoringFeature" {
    geometry : GEOMETRY [0..1]
    mediaMonitoreds : TEXT
    <<voidable>> additionalDescription : TEXT [0..1]
    <<voidable>> names : TEXT [0..1]
    <<voidable>> onlineResources : TEXT [0..1]
    <<voidable>> purposes : TEXT [0..1]
    inspireId BASE_Identifier as ref
    <<voidable>> broader AbstractMonitoringObject [0..1] as ref
    <<voidable>> hasObservation_OM_Observation BASE_Identifier [0..*] as ref
    <<voidable>> involvedIn EF_EnvironmentalMonitoringActivity [0..*] as ref
    <<voidable>> legalBackground BASE2_SimpleCitation [0..*] as ref
    <<voidable>> narrower AbstractMonitoringObject [0..*] as ref
    <<voidable>> reportedTo EF_ReportToLegalAct [0..*] as ref
    <<voidable>> responsibleParty BASE2_RelatedParty [0..*] as ref
    <<voidable>> supersededBy AbstractMonitoringObject [0..*] as ref
    <<voidable>> supersedes AbstractMonitoringObject [0..*] as ref
  }
  Attributes <<dataType>> "EF_ReportToLegalAct" {
    * description = "Information on the involvement of an AbstractMonitoringFeature in reporting. The information is specific per submitted reporting envelope and not per obligation/agreement.
  
    From INSPIRE perspective, an AbstractMonitoringFeature requires the provision of  ISO 19156 compliant observations &amp; measurements only in the case that these have been required by a legal reporting obligation or a commonly agreed voluntarily data flow using INSPIRE EF dataspecification for the definition of datastructure."
    * identifier = "EnvironmentalMonitoringFacilities::ReportToLegalAct"
    * tableName = "EF_ReportToLegalAct"
    id INTEGER NOT NULL PRIMARY KEY
    legalAct_date DATE
    legalAct_level LegislationLevelValue
    legalAct_link TEXT
    legalAct_name TEXT NOT NULL
    legalAct_type TEXT NOT NULL CHECK(BASE2_SimpleCitationType)
    description TEXT
    observationRequired BOOLEAN
    observingCapabilityRequired BOOLEAN
    reportDate DATETIME
    reportedEnvelope TEXT
  }
  Attributes <<featureType>> "EF_EnvironmentalMonitoringProgramme" {
    * description = "Framework based on policy relevant documents defining the target of a collection of observations and/or the deployment of AbstractMonitoringFeatures on the field.
  
    Usually an Environmental Monitoring Programme has a long term perspective over at least a few years."
    * identifier = "EnvironmentalMonitoringFacilities::EnvironmentalMonitoringProgramme"
    * tableName = "EF_EnvironmentalMonitoringProgramme"
    geometry : GEOMETRY [0..1]
    id INTEGER NOT NULL PRIMARY KEY
    mediaMonitoreds : TEXT
    <<voidable>> additionalDescription : TEXT [0..1]
    <<voidable>> names : TEXT [0..1]
    <<voidable>> onlineResources : TEXT [0..1]
    <<voidable>> purposes : TEXT [0..1]
    inspireId BASE_Identifier as ref
    <<voidable>> broader AbstractMonitoringObject [0..1] as ref
    <<voidable>> legalBackground BASE2_SimpleCitation [0..*] as ref
    <<voidable>> narrower AbstractMonitoringObject [0..*] as ref
    <<voidable>> responsibleParty BASE2_RelatedParty [0..*] as ref
    <<voidable>> supersededBy AbstractMonitoringObject [0..*] as ref
    <<voidable>> supersedes AbstractMonitoringObject [0..*] as ref
  }
  Feature <<featureType>> "EF_EnvironmentalMonitoringActivity" {
    * description = "Specific set of AbstractMonitoringFeatures used for a given domain in a coherent and concise timeframe, area and purpose. Usually the information collected is treated as one time step in a long term monitoring programme. It is a concrete realisation of a given EnvironmentalMonitoringProgramme.
  
    For example a vessel could be equipped with a collection of EnvironmentalMonitoringFacilities for a given campaign (= EnvironmentalMonitoringActivity) fulfilling an EnvironmentalMonitoringProgramme requirements. Then, after a given period this exact same vessel could be equipped with another set of EnvironmentalMonitoringFacilities for another campaign fulfilling another EnvironmentalMonitoringProgramme requirements."
    * identifier = "EnvironmentalMonitoringFacilities::EnvironmentalMonitoringActivity"
    * tableName = "EF_EnvironmentalMonitoringActivity"
    id INTEGER NOT NULL PRIMARY KEY
    inspireId INTEGER
    activityConditions TEXT
    activityTime TM_Object
    boundingBox POLYGON
    onlineResources TEXT
    responsibleParty INTEGER
    <<voidable>> uses AbstractMonitoringFeature [0..*] as ref
  }
  Constraint Enum <<codeList>> "EF_ResultNatureValue" {
    * identifier = "EnvironmentalMonitoringFacilities::ResultNatureValue"
  }
  Constraint Enum <<codeList>> "EF_PurposeOfCollectionValue" {
    * identifier = "EnvironmentalMonitoringFacilities::PurposeOfCollectionValue"
  }
  Constraint Enum <<codeList>> "EF_ProcessTypeValue" {
    * identifier = "EnvironmentalMonitoringFacilities::ProcessTypeValue"
  }
  Attributes <<featureType>> "EF_ObservingCapability" {
    * description = "Explicit capability of an AbstractMonitoringObject."
    * identifier = "EnvironmentalMonitoringFacilities::ObservingCapability"
    * tableName = "EF_ObservingCapability"
    id INTEGER NOT NULL PRIMARY KEY
    procedure_OM_Process INTEGER
    featureOfInterest_GFI_Feature INTEGER
    observingTime TM_Object
    onlineResource TEXT
    processType TEXT CHECK(EF_ProcessTypeValue)
    resultNature TEXT CHECK(EF_ResultNatureValue)
  }
  Constraint Enum <<codeList>> "EF_ResultAcquisitionSourceValue" {
    * identifier = "EnvironmentalMonitoringFacilities::ResultAcquisitionSourceValue"
  }
  Class "NetworkFacility" {
    conID = "EAID_2470952E_658F_4465_8B30_5854E0A98920"
    <<voidable>> linkingTime : TM_Object [0..1]
  }
  Attributes <<featureType>> "EF_EnvironmentalMonitoringNetwork" {
    * description = "Administrative or organisational grouping of EnvironmentalMonitoringFacilities managed the same way for a specific purpose, targeting a specific area. Each network respects common rules aiming at ensuring coherence of the observations, especially for purposes of EnvironmentalMonitoringFacilities, mandatory parameters selection, measurement methods and measurement regime."
    * identifier = "EnvironmentalMonitoringFacilities::EnvironmentalMonitoringNetwork"
    * tableName = "EF_EnvironmentalMonitoringNetwork"
    geometry : GEOMETRY [0..1]
    id INTEGER NOT NULL PRIMARY KEY
    mediaMonitoreds : TEXT
    <<voidable>> additionalDescription : TEXT [0..1]
    <<voidable>> names : TEXT [0..1]
    <<voidable>> onlineResources : TEXT [0..1]
    organisationLevel TEXT CHECK(BASE2_LegislationLevelValue)
    <<voidable>> purposes : TEXT [0..1]
    inspireId BASE_Identifier as ref
    <<voidable>> broader AbstractMonitoringObject [0..1] as ref
    <<voidable>> hasObservation_OM_Observation BASE_Identifier [0..*] as ref
    <<voidable>> involvedIn EF_EnvironmentalMonitoringActivity [0..*] as ref
    <<voidable>> legalBackground BASE2_SimpleCitation [0..*] as ref
    <<voidable>> narrower AbstractMonitoringObject [0..*] as ref
    <<voidable>> reportedTo EF_ReportToLegalAct [0..*] as ref
    <<voidable>> responsibleParty BASE2_RelatedParty [0..*] as ref
    <<voidable>> supersededBy AbstractMonitoringObject [0..*] as ref
    <<voidable>> supersedes AbstractMonitoringObject [0..*] as ref
  }
  Relation "EF_EnvironmentalMonitoringFacility_operationalActivityPeriod" {
    * profile = "attributes"
    * tableName = "EF_EnvironmentalMonitoringFacility_operationalActivityPeriod"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES EF_EnvironmentalMonitoringFacility(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES EF_OperationalActivityPeriod(id)
  }
  Relation "EF_EnvironmentalMonitoringFacility_belongsTo" {
    * profile = "attributes"
    * tableName = "EF_EnvironmentalMonitoringFacility_belongsTo"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES EF_EnvironmentalMonitoringFacility(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES EF_EnvironmentalMonitoringNetwork(id)
  }
  Relation "EF_EnvironmentalMonitoringFacility_relatedTo" {
    * profile = "features"
    * tableName = "EF_EnvironmentalMonitoringFacility_relatedTo"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES EF_EnvironmentalMonitoringFacility(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES EF_EnvironmentalMonitoringFacility(id)
  }
  Relation "EF_EnvironmentalMonitoringFacility_<<missing>>_GroundWaterBody" {
    * profile = "attributes"
    * tableName = "EF_EnvironmentalMonitoringFacility_<<missing>>_GroundWaterBody"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES EF_EnvironmentalMonitoringFacility(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "EF_EnvironmentalMonitoringFacility_<<missing>>_ActiveWell" {
    * profile = "attributes"
    * tableName = "EF_EnvironmentalMonitoringFacility_<<missing>>_ActiveWell"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES EF_EnvironmentalMonitoringFacility(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "EF_EnvironmentalMonitoringProgramme_triggers" {
    * profile = "features"
    * tableName = "EF_EnvironmentalMonitoringProgramme_triggers"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES EF_EnvironmentalMonitoringProgramme(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES EF_EnvironmentalMonitoringActivity(id)
  }
  Relation "EF_EnvironmentalMonitoringProgramme_<<missing>>_AbstractObservedEvent" {
    * profile = "attributes"
    * tableName = "EF_EnvironmentalMonitoringProgramme_<<missing>>_AbstractObservedEvent"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES EF_EnvironmentalMonitoringProgramme(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "EF_EnvironmentalMonitoringActivity_responsibleParty" {
    * profile = "attributes"
    * relatedReference = "attribute EF_EnvironmentalMonitoringActivity#responsibleParty"
    * tableName = "EF_EnvironmentalMonitoringActivity_responsibleParty"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES EF_EnvironmentalMonitoringActivity(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_RelatedParty(id)
  }
  Relation "EF_EnvironmentalMonitoringActivity_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute EF_EnvironmentalMonitoringActivity#inspireId"
    * tableName = "EF_EnvironmentalMonitoringActivity_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES EF_EnvironmentalMonitoringActivity(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "EF_ObservingCapability_procedure_OM_Process" {
    * profile = "attributes"
    * relatedReference = "attribute EF_ObservingCapability#procedure_OM_Process"
    * tableName = "EF_ObservingCapability_procedure_OM_Process"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES EF_ObservingCapability(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "EF_ObservingCapability_featureOfInterest_GFI_Feature" {
    * profile = "attributes"
    * relatedReference = "attribute EF_ObservingCapability#featureOfInterest_GFI_Feature"
    * tableName = "EF_ObservingCapability_featureOfInterest_GFI_Feature"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES EF_ObservingCapability(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
}
Container <<applicationSchema>> "Base Types 2" {
  * fileName = "Base Types 2"
  Constraint Enum <<codeList>> "BASE2_PartyRoleValue" {
    * identifier = "Base Types 2::PartyRoleValue"
  }
  Attributes "BASE2_RelatedParty" {
    * description = "An organisation or a person with a role related to a resource.
  
    NOTE 1 A party, typically an individual person, acting as a general point of contact for a resource can be specified without providing any particular role."
    * identifier = "Base Types 2::RelatedParty"
    * tableName = "BASE2_RelatedParty"
    id INTEGER NOT NULL PRIMARY KEY
    roles TEXT
    contact Contact [0..1] as ref
  }
  Constraint Enum <<codeList>> "BASE2_LegislationLevelValue" {
    * identifier = "Base Types 2::LegislationLevelValue"
    european
    international
    national
    sub-national
  }
  Constraint Enum <<enumeration>> "BASE2_SimpleCitationType" {
    CI_Citation
    DocumentCitation
    LegislationCitation
  }
  Attributes "BASE2_SimpleCitation" {
    * tableName = "BASE2_SimpleCitation"
    date DATE
    id INTEGER NOT NULL PRIMARY KEY
    level LegislationLevelValue
    link TEXT
    name TEXT NOT NULL
    type TEXT NOT NULL CHECK(BASE2_SimpleCitationType)
  }
}
Container <<applicationSchema>> "Base Types" {
  * fileName = "Base Types"
  Attributes "BASE_Identifier" {
    * description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    * identifier = "Base Types::Identifier"
    * tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    versionId TEXT
  }
  Metadata "Unknown" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
}
Package "Temporal Objects" {
  Class "TM_Object" {
    <<missing>>_OM_TemporalObservation BASE_Identifier [0..*] as ref
  }
}
Package "EA Model" {
  Class "applicationSchema" {}
  Datatype LegislationLevelValue
  
}

