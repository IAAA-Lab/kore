Container <<applicationSchema>> "Statistical Units Vector" {
  * fileName = "Statistical Units Vector"
  Attributes <<featureType>> "SU_VECTOR_VectorStatisticalUnit" {
    * description = "Statistical unit represented as a vector geometry (point, line or surface)."
    * identifier = "Statistical Units Vector::VectorStatisticalUnit"
    * tableName = "SU_VECTOR_VectorStatisticalUnit"
    country TEXT NOT NULL CHECK(BASE2_CountryCode)
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<reference>> inspireId INTEGER
  }
  Constraint Enum <<codeList>> "SU_VECTOR_EvolutionTypeValue" {
    * identifier = "Statistical Units Vector::EvolutionTypeValue"
    obligation = "technicalGuidance"
  }
  Attributes <<featureType>> "SU_VECTOR_StatisticalTessellation" {
    * description = "A tesselation composed of area statistical units.
  
    EXAMPLE A NUTS regions coverage."
    * identifier = "Statistical Units Vector::StatisticalTessellation"
    * tableName = "SU_VECTOR_StatisticalTessellation"
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<reference>> lower INTEGER
    <<reference>> inspireId INTEGER
  }
  Attributes <<featureType>> "SU_VECTOR_AreaStatisticalUnit" {
    * description = "Vector statistical unit with a surfacic reference geometry.
  
    Such object can be composed of other area statistical unit.
  
    EXAMPLE A country area, an administrative unit, a NUTS region."
    * identifier = "Statistical Units Vector::AreaStatisticalUnit"
    * tableName = "SU_VECTOR_AreaStatisticalUnit"
    areaValue TEXT NOT NULL
    areaValue_uom TEXT NOT NULL CHECK(GML_UomIdentifier)
    country TEXT NOT NULL CHECK(BASE2_CountryCode)
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<lifeCycleInfo>> beginLifespanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifespanVersion DATETIME
    <<voidable>>, <<reference>> tesselation INTEGER
    <<reference>> inspireId INTEGER
    <<voidable>> landAreaValue TEXT
    <<voidable>> landAreaValue_uom TEXT CHECK(GML_UomIdentifier)
    <<voidable>> livableAreaValue TEXT
    <<voidable>> livableAreaValue_uom TEXT CHECK(GML_UomIdentifier)
  }
  Constraint Enum <<codeList>> "SU_VECTOR_GeometryTypeValue" {
    * identifier = "Statistical Units Vector::GeometryTypeValue"
    obligation = "implementingRule"
  }
  Attributes <<voidable>>, <<featureType>> "SU_VECTOR_Evolution" {
    * description = "Representation of vector statistical unit evolution."
    * identifier = "Statistical Units Vector::Evolution"
    * tableName = "SU_VECTOR_Evolution"
    date DATETIME NOT NULL
    evolutionType TEXT NOT NULL CHECK(SU_VECTOR_EvolutionTypeValue)
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>> areaVariation TEXT
    <<voidable>> areaVariation_uom TEXT CHECK(GML_UomIdentifier)
    <<voidable>> populationVariation INTEGER
  }
  Attributes <<dataType>> "SU_VECTOR_GeometryDescriptor" {
    * description = "A descriptor for vector statistical unit geometry."
    * identifier = "Statistical Units Vector::GeometryDescriptor"
    * tableName = "SU_VECTOR_GeometryDescriptor"
    geometryType TEXT NOT NULL CHECK(SU_VECTOR_GeometryTypeValue)
    id INTEGER NOT NULL PRIMARY KEY
    leastDetailedScale INTEGER
    mostDetailedScale INTEGER
  }
  Feature <<dataType>> "SU_VECTOR_VectorStatisticalUnitGeometry" {
    * description = "A geometrical representation for vector statistical units.
  
    Vector statistical units can have several representations depending on the context they are used for. It is adviced to produce at least one reference geometry.
  
    EXAMPLE1: A vector statistical units may be represented both by an area and a point geometry. Such point can be the center of gravity or a label location.
  
    EXAMPLE2: For mapping, different generalised representations of vector statistical units are required. These geometries depend on the visualisation scale."
    * identifier = "Statistical Units Vector::VectorStatisticalUnitGeometry"
    * tableName = "SU_VECTOR_VectorStatisticalUnitGeometry"
    geometry GEOMETRY NOT NULL
    geometryDescriptor_geometryType TEXT NOT NULL CHECK(SU_VECTOR_GeometryTypeValue)
    geometryDescriptor_leastDetailedScale INTEGER
    geometryDescriptor_mostDetailedScale INTEGER
    id INTEGER NOT NULL PRIMARY KEY
  }
  Relation "SU_VECTOR_VectorStatisticalUnit_geometry" {
    * profile = "features"
    * tableName = "SU_VECTOR_VectorStatisticalUnit_geometry"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SU_VECTOR_VectorStatisticalUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SU_VECTOR_VectorStatisticalUnitGeometry(id)
  }
  Relation "SU_VECTOR_VectorStatisticalUnit_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute SU_VECTOR_VectorStatisticalUnit#inspireId"
    * tableName = "SU_VECTOR_VectorStatisticalUnit_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SU_VECTOR_VectorStatisticalUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "SU_VECTOR_VectorStatisticalUnit_thematicId" {
    * profile = "attributes"
    * tableName = "SU_VECTOR_VectorStatisticalUnit_thematicId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SU_VECTOR_VectorStatisticalUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_ThematicIdentifier(id)
  }
  Relation "SU_VECTOR_VectorStatisticalUnit_geographicalName" {
    * profile = "attributes"
    * tableName = "SU_VECTOR_VectorStatisticalUnit_geographicalName"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SU_VECTOR_VectorStatisticalUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE2_SimpleGeographicalName(id)
  }
  Relation "SU_VECTOR_StatisticalTessellation_lower" {
    * profile = "attributes"
    * relatedReference = "attribute SU_VECTOR_StatisticalTessellation#lower"
    * tableName = "SU_VECTOR_StatisticalTessellation_lower"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SU_VECTOR_StatisticalTessellation(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SU_VECTOR_StatisticalTessellation(id)
  }
  Relation "SU_VECTOR_StatisticalTessellation_units" {
    * profile = "attributes"
    * relatedReference = "attribute SU_VECTOR_AreaStatisticalUnit#tesselation"
    * tableName = "SU_VECTOR_StatisticalTessellation_units"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SU_VECTOR_StatisticalTessellation(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SU_VECTOR_AreaStatisticalUnit(id)
  }
  Relation "SU_VECTOR_StatisticalTessellation_inspireId" {
    * profile = "attributes"
    * relatedReference = "attribute SU_VECTOR_StatisticalTessellation#inspireId"
    * tableName = "SU_VECTOR_StatisticalTessellation_inspireId"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SU_VECTOR_StatisticalTessellation(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "SU_VECTOR_AreaStatisticalUnit_successors" {
    * profile = "attributes"
    * tableName = "SU_VECTOR_AreaStatisticalUnit_successors"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SU_VECTOR_AreaStatisticalUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SU_VECTOR_AreaStatisticalUnit(id)
  }
  Relation "SU_VECTOR_AreaStatisticalUnit_lowers" {
    * profile = "attributes"
    * tableName = "SU_VECTOR_AreaStatisticalUnit_lowers"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SU_VECTOR_AreaStatisticalUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SU_VECTOR_AreaStatisticalUnit(id)
  }
  Relation "SU_VECTOR_AreaStatisticalUnit_administrativeUnit_AdministrativeUnit" {
    * profile = "attributes"
    * tableName = "SU_VECTOR_AreaStatisticalUnit_administrativeUnit_AdministrativeUnit"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SU_VECTOR_AreaStatisticalUnit(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
  Relation "SU_VECTOR_Evolution_initialUnitVersions" {
    * profile = "attributes"
    * tableName = "SU_VECTOR_Evolution_initialUnitVersions"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SU_VECTOR_Evolution(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SU_VECTOR_VectorStatisticalUnit(id)
  }
  Relation "SU_VECTOR_Evolution_units" {
    * profile = "attributes"
    * tableName = "SU_VECTOR_Evolution_units"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SU_VECTOR_Evolution(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SU_VECTOR_VectorStatisticalUnit(id)
  }
  Relation "SU_VECTOR_Evolution_finalUnitVersions" {
    * profile = "attributes"
    * tableName = "SU_VECTOR_Evolution_finalUnitVersions"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES SU_VECTOR_Evolution(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES SU_VECTOR_VectorStatisticalUnit(id)
  }
}
Container <<applicationSchema>> "Base Types 2" {
  * fileName = "Base Types 2"
  Attributes <<dataType>> "BASE2_ThematicIdentifier" {
    * description = "Thematic identifier to uniquely identify the spatial object.
  
    Some spatial objects may be assigned multiple unique identifiers.
  
    These may have been established to meet data exchange requirements of different reporting obligations at International, European or national levels and/or internal data maintenance requirements."
    * identifier = "Base Types 2::ThematicIdentifier"
    * tableName = "BASE2_ThematicIdentifier"
    id INTEGER NOT NULL PRIMARY KEY
    identifier TEXT NOT NULL
    identifierScheme TEXT NOT NULL
  }
  Constraint Enum <<codeList>> "BASE2_CountryCode" {
    * identifier = "Base Types 2::CountryCode"
    AT
    BE
    BG
    CY
    CZ
    DE
    DK
    EE
    EL
    ES
    FI
    FR
    HR
    HU
    IE
    IT
    LT
    LU
    LV
    MT
    NL
    PL
    PT
    RO
    SE
    SI
    SK
    TR
    UK
  }
  Attributes <<dataType>> "BASE2_SimpleGeographicalName" {
    * tableName = "BASE2_SimpleGeographicalName"
    id INTEGER NOT NULL PRIMARY KEY
    language TEXT
    spelling_text TEXT NOT NULL
  }
}
Container <<applicationSchema>> "Base Types" {
  * fileName = "Base Types"
  Attributes <<dataType>> "BASE_Identifier" {
    * description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    * identifier = "Base Types::Identifier"
    * tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    <<lifeCycleInfo>>, <<voidable>> versionId TEXT
  }
  Metadata "Unknown" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
}
Package <<applicationSchema>> "Energy Statistics" {
  Class <<dataType>> "AggregatedEnergy" {
    measureValue : TEXT
    measureValue_uom : TEXT
    <<voidable>> label : TEXT [0..1]
    statisticalUnit StatisticalUnit as ref
  }
}
Package "EA Model" {
  Class "applicationSchema" {}
}

Container "Units of Measure" {
  * fileName = "Units of Measure"
  Constraint Enum "GML_UomIdentifier" {}
}
