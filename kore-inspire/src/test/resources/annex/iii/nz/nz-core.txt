Container <<applicationSchema>> "NaturalRiskZones" {
  * fileName = "NaturalRiskZones"
  Abstract Class <<featureType>> "AbstractObservedEvent" {
    typeOfHazard_hazardCategory TEXT NOT NULL CHECK(NZ_CORE_NaturalHazardCategoryValue)
    <<voidable>>, <<lifeCycleInfo>> beginLifeSpanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifeSpanVersion DATETIME
    <<voidable>> nameOfEvent TEXT
    <<voidable>> typeOfHazard_specificHazardType TEXT CHECK(NZ_CORE_SpecificHazardTypeValue)
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    inspireId BASE_Identifier as ref
    <<voidable>> isMonitoredBy_EnvironmentalMonitoringProgramme BASE_Identifier [0..*] as ref
  }
  Attributes <<dataType>> "NZ_CORE_ExposedElementClassification" {
    * description = "This class provides piece of information about the nature of the exposed element which is relevant to risk analysis."
    * identifier = "NaturalRiskZones::ExposedElementClassification"
    * tableName = "NZ_CORE_ExposedElementClassification"
    exposedElementCategory TEXT NOT NULL CHECK(NZ_CORE_ExposedElementCategoryValue)
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>> specificExposedElementType TEXT CHECK(NZ_CORE_SpecificExposedElementTypeValue)
  }
  Attributes <<featureType>> "NZ_CORE_ExposedElementCoverage" {
    * description = "A coverage representating continuous information about exposed elements."
    * identifier = "NaturalRiskZones::ExposedElementCoverage"
    * tableName = "NZ_CORE_ExposedElementCoverage"
    coverageFunction_ruleDefinition TEXT
    coverageFunction_ruleReference TEXT
    domainSet Any NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    metadata Any
    rangeSet Any
    rangeType RecordType NOT NULL
    typeOfElement_exposedElementCategory TEXT NOT NULL CHECK(NZ_CORE_ExposedElementCategoryValue)
    <<voidable>>, <<lifeCycleInfo>> beginLifeSpanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifeSpanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> validFrom DATETIME
    <<voidable>>, <<lifeCycleInfo>> validTo DATETIME
    <<voidable>> typeOfElement_specificExposedElementType TEXT CHECK(NZ_CORE_SpecificExposedElementTypeValue)
    coverageFunction_gridFunction GMLCOV_GridFunction [0..1] as ref
    inspireId BASE_Identifier as ref
    <<voidable>> sourceOfSpatialRepresentation_AbstractFeature BASE_Identifier [0..1] as ref
  }
  Attributes <<dataType>> "NZ_CORE_NaturalHazardClassification" {
    * description = "This class provides piece of information about the nature of the natural hazard as well as the type of hazard which is the source of risk."
    * identifier = "NaturalRiskZones::NaturalHazardClassification"
    * tableName = "NZ_CORE_NaturalHazardClassification"
    hazardCategory TEXT NOT NULL CHECK(NZ_CORE_NaturalHazardCategoryValue)
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>> specificHazardType TEXT CHECK(NZ_CORE_SpecificHazardTypeValue)
  }
  Constraint Enum <<codeList>> "NZ_CORE_SpecificExposedElementTypeValue" {
    * identifier = "NaturalRiskZones::SpecificExposedElementTypeValue"
  }
  Constraint Enum <<codeList>> "NZ_CORE_SpecificHazardTypeValue" {
    * identifier = "NaturalRiskZones::SpecificHazardTypeValue"
  }
  Abstract Class <<featureType>> "AbstractHazardArea" {
    determinationMethod TEXT NOT NULL CHECK(NZ_CORE_DeterminationMethodValue)
    typeOfHazard_hazardCategory TEXT NOT NULL CHECK(NZ_CORE_NaturalHazardCategoryValue)
    <<voidable>>, <<lifeCycleInfo>> beginLifeSpanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifeSpanVersion DATETIME
    <<voidable>> typeOfHazard_specificHazardType TEXT CHECK(NZ_CORE_SpecificHazardTypeValue)
    inspireId BASE_Identifier as ref
  }
  Feature <<featureType>> "NZ_CORE_ExposedElement" {
    * description = "Discrete spatial objects representing exposed element."
    * identifier = "NaturalRiskZones::ExposedElement"
    * tableName = "NZ_CORE_ExposedElement"
    geometry GEOMETRY
    id INTEGER NOT NULL PRIMARY KEY
    <<voidable>>, <<lifeCycleInfo>> beginLifeSpanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifeSpanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> validFrom DATETIME
    <<voidable>>, <<lifeCycleInfo>> validTo DATETIME
    inspireId BASE_Identifier as ref
    <<voidable>> sourceOfSpatialRepresentation_AbstractFeature BASE_Identifier [0..1] as ref
  }
  Attributes <<dataType>> "NZ_CORE_VulnerabilityAssessment" {
    * description = "Assessment of the vulnerability.
  
    It contains piece of information about the source the vulnerability, about the level of vulnerability and about the magnitude or intensity of the hazard for which vulnerability is assessed."
    * identifier = "NaturalRiskZones::VulnerabilityAssessment"
    * tableName = "NZ_CORE_VulnerabilityAssessment"
    id INTEGER NOT NULL PRIMARY KEY
    levelOfVulnerability_quantitativeValue_unitOfMeasure_formula TEXT
    levelOfVulnerability_quantitativeValue_unitOfMeasure_measureType TEXT NOT NULL CHECK(GML_MeasureType)
    levelOfVulnerability_quantitativeValue_unitOfMeasure_nameStandardUnit TEXT
    levelOfVulnerability_quantitativeValue_unitOfMeasure_offsetToStandardUnit REAL
    levelOfVulnerability_quantitativeValue_unitOfMeasure_scaleToStandardUnit REAL
    levelOfVulnerability_quantitativeValue_unitOfMeasure_uomName TEXT NOT NULL
    levelOfVulnerability_quantitativeValue_unitOfMeasure_uomSymbol TEXT NOT NULL
    levelOfVulnerability_quantitativeValue_value REAL NOT NULL
    magnitudeOrIntensityOfHazard_quantitativeValue_unitOfMeasure_formula TEXT
    magnitudeOrIntensityOfHazard_quantitativeValue_unitOfMeasure_measureType TEXT NOT NULL CHECK(GML_MeasureType)
    magnitudeOrIntensityOfHazard_quantitativeValue_unitOfMeasure_nameStandardUnit TEXT
    magnitudeOrIntensityOfHazard_quantitativeValue_unitOfMeasure_offsetToStandardUnit REAL
    magnitudeOrIntensityOfHazard_quantitativeValue_unitOfMeasure_scaleToStandardUnit REAL
    magnitudeOrIntensityOfHazard_quantitativeValue_unitOfMeasure_uomName TEXT NOT NULL
    magnitudeOrIntensityOfHazard_quantitativeValue_unitOfMeasure_uomSymbol TEXT NOT NULL
    magnitudeOrIntensityOfHazard_quantitativeValue_value REAL NOT NULL
    sourceOfVulnerability_hazardCategory TEXT NOT NULL CHECK(NZ_CORE_NaturalHazardCategoryValue)
    typeOfElement_exposedElementCategory TEXT NOT NULL CHECK(NZ_CORE_ExposedElementCategoryValue)
    <<voidable>> levelOfVulnerability_assessmentMethod_date DATE
    <<voidable>> levelOfVulnerability_assessmentMethod_level LegislationLevelValue
    <<voidable>> levelOfVulnerability_assessmentMethod_link TEXT
    <<voidable>> levelOfVulnerability_assessmentMethod_name TEXT
    <<voidable>> levelOfVulnerability_assessmentMethod_type TEXT CHECK(BASE2_SimpleCitationType)
    <<voidable>> levelOfVulnerability_qualitativeValue TEXT
    <<voidable>> magnitudeOrIntensityOfHazard_assessmentMethod_date DATE
    <<voidable>> magnitudeOrIntensityOfHazard_assessmentMethod_level LegislationLevelValue
    <<voidable>> magnitudeOrIntensityOfHazard_assessmentMethod_link TEXT
    <<voidable>> magnitudeOrIntensityOfHazard_assessmentMethod_name TEXT
    <<voidable>> magnitudeOrIntensityOfHazard_assessmentMethod_type TEXT CHECK(BASE2_SimpleCitationType)
    <<voidable>> magnitudeOrIntensityOfHazard_qualitativeValue TEXT
    <<voidable>> sourceOfVulnerability_specificHazardType TEXT CHECK(NZ_CORE_SpecificHazardTypeValue)
    <<voidable>> typeOfElement_specificExposedElementType TEXT CHECK(NZ_CORE_SpecificExposedElementTypeValue)
  }
  Constraint Enum <<codeList>> "NZ_CORE_NaturalHazardCategoryValue" {
    * identifier = "NaturalRiskZones::NaturalHazardCategoryValue"
    obligation = "implementingRule"
  }
  Constraint Enum <<enumeration>> "NZ_CORE_DeterminationMethodValue" {
    * identifier = "NaturalRiskZones::DeterminationMethodValue"
    <<enum>> indirectDetermination
    <<enum>> modelling
  }
  Attributes <<dataType>> "NZ_CORE_LevelOrIntensity" {
    * description = "Quantitative or qualitative assessment of either risk, hazard or vulnerability.
  
    Common concept for assessing the level of risk, or the level of hazard, or the level of vulnerability."
    * identifier = "NaturalRiskZones::LevelOrIntensity"
    * tableName = "NZ_CORE_LevelOrIntensity"
    id INTEGER NOT NULL PRIMARY KEY
    quantitativeValue_unitOfMeasure_formula TEXT
    quantitativeValue_unitOfMeasure_measureType TEXT NOT NULL CHECK(GML_MeasureType)
    quantitativeValue_unitOfMeasure_nameStandardUnit TEXT
    quantitativeValue_unitOfMeasure_offsetToStandardUnit REAL
    quantitativeValue_unitOfMeasure_scaleToStandardUnit REAL
    quantitativeValue_unitOfMeasure_uomName TEXT NOT NULL
    quantitativeValue_unitOfMeasure_uomSymbol TEXT NOT NULL
    quantitativeValue_value REAL NOT NULL
    <<voidable>> assessmentMethod_date DATE
    <<voidable>> assessmentMethod_level LegislationLevelValue
    <<voidable>> assessmentMethod_link TEXT
    <<voidable>> assessmentMethod_name TEXT
    <<voidable>> assessmentMethod_type TEXT CHECK(BASE2_SimpleCitationType)
    <<voidable>> qualitativeValue TEXT
  }
  Feature <<featureType>> "NZ_CORE_HazardArea" {
    * description = "Discrete spatial objects representing a natural hazard."
    * identifier = "NaturalRiskZones::HazardArea"
    * tableName = "NZ_CORE_HazardArea"
    determinationMethod TEXT NOT NULL CHECK(NZ_CORE_DeterminationMethodValue)
    geometry SURFACE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    likelihoodOfOccurrence_quantitativeLikelihood_probabilityOfOccurrence_value REAL NOT NULL
    typeOfHazard_hazardCategory TEXT NOT NULL CHECK(NZ_CORE_NaturalHazardCategoryValue)
    <<voidable>>, <<lifeCycleInfo>> beginLifeSpanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifeSpanVersion DATETIME
    <<voidable>> likelihoodOfOccurrence_assessmentMethod_date DATE
    <<voidable>> likelihoodOfOccurrence_assessmentMethod_level LegislationLevelValue
    <<voidable>> likelihoodOfOccurrence_assessmentMethod_link TEXT
    <<voidable>> likelihoodOfOccurrence_assessmentMethod_name TEXT
    <<voidable>> likelihoodOfOccurrence_assessmentMethod_type TEXT CHECK(BASE2_SimpleCitationType)
    <<voidable>> likelihoodOfOccurrence_qualitativeLikelihood TEXT
    <<voidable>> likelihoodOfOccurrence_quantitativeLikelihood_returnPeriod REAL
    <<voidable>> typeOfHazard_specificHazardType TEXT CHECK(NZ_CORE_SpecificHazardTypeValue)
    inspireId BASE_Identifier as ref
  }
  Feature <<featureType>> "NZ_CORE_ObservedEvent" {
    * description = "Discrete spatial objects representing natural phenomenon relevant to the study of natural hazards which occurred, or is currently occuring, and which has been observed."
    * identifier = "NaturalRiskZones::ObservedEvent"
    * tableName = "NZ_CORE_ObservedEvent"
    geometry GEOMETRY NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    typeOfHazard_hazardCategory TEXT NOT NULL CHECK(NZ_CORE_NaturalHazardCategoryValue)
    <<voidable>>, <<lifeCycleInfo>> beginLifeSpanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifeSpanVersion DATETIME
    <<voidable>> nameOfEvent TEXT
    <<voidable>> typeOfHazard_specificHazardType TEXT CHECK(NZ_CORE_SpecificHazardTypeValue)
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    inspireId BASE_Identifier as ref
    <<voidable>> isMonitoredBy_EnvironmentalMonitoringProgramme BASE_Identifier [0..*] as ref
  }
  Feature <<featureType>> "NZ_CORE_RiskZone" {
    * description = "Discrete spatial objects representing the spatial extent of a combination of the consequences of an event (hazard) and the associated probability/likelihood of its occurrence."
    * identifier = "NaturalRiskZones::RiskZone"
    * tableName = "NZ_CORE_RiskZone"
    geometry SURFACE NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    levelOfRisk_quantitativeValue_unitOfMeasure_formula TEXT
    levelOfRisk_quantitativeValue_unitOfMeasure_measureType TEXT NOT NULL CHECK(GML_MeasureType)
    levelOfRisk_quantitativeValue_unitOfMeasure_nameStandardUnit TEXT
    levelOfRisk_quantitativeValue_unitOfMeasure_offsetToStandardUnit REAL
    levelOfRisk_quantitativeValue_unitOfMeasure_scaleToStandardUnit REAL
    levelOfRisk_quantitativeValue_unitOfMeasure_uomName TEXT NOT NULL
    levelOfRisk_quantitativeValue_unitOfMeasure_uomSymbol TEXT NOT NULL
    levelOfRisk_quantitativeValue_value REAL NOT NULL
    sourceOfRisk_hazardCategory TEXT NOT NULL CHECK(NZ_CORE_NaturalHazardCategoryValue)
    <<voidable>>, <<lifeCycleInfo>> beginLifeSpanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifeSpanVersion DATETIME
    <<voidable>> levelOfRisk_assessmentMethod_date DATE
    <<voidable>> levelOfRisk_assessmentMethod_level LegislationLevelValue
    <<voidable>> levelOfRisk_assessmentMethod_link TEXT
    <<voidable>> levelOfRisk_assessmentMethod_name TEXT
    <<voidable>> levelOfRisk_assessmentMethod_type TEXT CHECK(BASE2_SimpleCitationType)
    <<voidable>> levelOfRisk_qualitativeValue TEXT
    <<voidable>> sourceOfRisk_specificHazardType TEXT CHECK(NZ_CORE_SpecificHazardTypeValue)
    inspireId BASE_Identifier as ref
    <<voidable>> validityPeriod TM_Period [0..*] as ref
  }
  Attributes <<featureType>> "NZ_CORE_HazardCoverage" {
    * description = "A coverage representing continuous information about a type of natural hazard."
    * identifier = "NaturalRiskZones::HazardCoverage"
    * tableName = "NZ_CORE_HazardCoverage"
    coverageFunction_ruleDefinition TEXT
    coverageFunction_ruleReference TEXT
    determinationMethod TEXT NOT NULL CHECK(NZ_CORE_DeterminationMethodValue)
    domainSet Any NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    metadata Any
    rangeSet Any
    rangeType RecordType NOT NULL
    typeOfHazard_hazardCategory TEXT NOT NULL CHECK(NZ_CORE_NaturalHazardCategoryValue)
    <<voidable>>, <<lifeCycleInfo>> beginLifeSpanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifeSpanVersion DATETIME
    <<voidable>> typeOfHazard_specificHazardType TEXT CHECK(NZ_CORE_SpecificHazardTypeValue)
    coverageFunction_gridFunction GMLCOV_GridFunction [0..1] as ref
    inspireId BASE_Identifier as ref
  }
  Attributes <<featureType>> "NZ_CORE_RiskCoverage" {
    * description = "A coverage representation of natural risks."
    * identifier = "NaturalRiskZones::RiskCoverage"
    * tableName = "NZ_CORE_RiskCoverage"
    coverageFunction_ruleDefinition TEXT
    coverageFunction_ruleReference TEXT
    domainSet Any NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    metadata Any
    rangeSet Any
    rangeType RecordType NOT NULL
    sourceOfRisk_hazardCategory TEXT NOT NULL CHECK(NZ_CORE_NaturalHazardCategoryValue)
    <<voidable>>, <<lifeCycleInfo>> beginLifeSpanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifeSpanVersion DATETIME
    <<voidable>> sourceOfRisk_specificHazardType TEXT CHECK(NZ_CORE_SpecificHazardTypeValue)
    coverageFunction_gridFunction GMLCOV_GridFunction [0..1] as ref
    inspireId BASE_Identifier as ref
    <<voidable>> validityPeriod TM_Period [0..*] as ref
  }
  Abstract Class <<featureType>> "AbstractExposedElement" {
    <<voidable>>, <<lifeCycleInfo>> beginLifeSpanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifeSpanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> validFrom DATETIME
    <<voidable>>, <<lifeCycleInfo>> validTo DATETIME
    inspireId BASE_Identifier as ref
    <<voidable>> sourceOfSpatialRepresentation_AbstractFeature BASE_Identifier [0..1] as ref
  }
  Attributes <<dataType>> "NZ_CORE_QuantitativeLikelihood" {
    * description = "A frequency of occurrence or return period of a hazard phenomenon."
    * identifier = "NaturalRiskZones::QuantitativeLikelihood"
    * tableName = "NZ_CORE_QuantitativeLikelihood"
    id INTEGER NOT NULL PRIMARY KEY
    probabilityOfOccurrence_value REAL NOT NULL
    <<voidable>> returnPeriod REAL
  }
  Constraint Enum <<codeList>> "NZ_CORE_ExposedElementCategoryValue" {
    * identifier = "NaturalRiskZones::ExposedElementCategoryValue"
    obligation = "ImplementingRule"
  }
  Abstract Class <<featureType>> "AbstractRiskZone" {
    sourceOfRisk_hazardCategory TEXT NOT NULL CHECK(NZ_CORE_NaturalHazardCategoryValue)
    <<voidable>>, <<lifeCycleInfo>> beginLifeSpanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifeSpanVersion DATETIME
    <<voidable>> sourceOfRisk_specificHazardType TEXT CHECK(NZ_CORE_SpecificHazardTypeValue)
    inspireId BASE_Identifier as ref
    <<voidable>> validityPeriod TM_Period [0..*] as ref
  }
  Attributes <<dataType>> "NZ_CORE_LikelihoodOfOccurrence" {
    * description = "Likelihood is a general concept relating to the chance of an event occurring.
  
    Likelihood is generally expressed as a probability or a frequency. [EXCIFF]."
    * identifier = "NaturalRiskZones::LikelihoodOfOccurrence"
    * tableName = "NZ_CORE_LikelihoodOfOccurrence"
    id INTEGER NOT NULL PRIMARY KEY
    quantitativeLikelihood_probabilityOfOccurrence_value REAL NOT NULL
    <<voidable>> assessmentMethod_date DATE
    <<voidable>> assessmentMethod_level LegislationLevelValue
    <<voidable>> assessmentMethod_link TEXT
    <<voidable>> assessmentMethod_name TEXT
    <<voidable>> assessmentMethod_type TEXT CHECK(BASE2_SimpleCitationType)
    <<voidable>> qualitativeLikelihood TEXT
    <<voidable>> quantitativeLikelihood_returnPeriod REAL
  }
  Attributes <<featureType>> "NZ_CORE_ObservedEventCoverage" {
    * description = "A coverage representing continuous information about observed events."
    * identifier = "NaturalRiskZones::ObservedEventCoverage"
    * tableName = "NZ_CORE_ObservedEventCoverage"
    coverageFunction_ruleDefinition TEXT
    coverageFunction_ruleReference TEXT
    domainSet Any NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    metadata Any
    rangeSet Any
    rangeType RecordType NOT NULL
    typeOfHazard_hazardCategory TEXT NOT NULL CHECK(NZ_CORE_NaturalHazardCategoryValue)
    <<voidable>>, <<lifeCycleInfo>> beginLifeSpanVersion DATETIME
    <<voidable>>, <<lifeCycleInfo>> endLifeSpanVersion DATETIME
    <<voidable>> nameOfEvent TEXT
    <<voidable>> typeOfHazard_specificHazardType TEXT CHECK(NZ_CORE_SpecificHazardTypeValue)
    <<voidable>> validFrom DATETIME
    <<voidable>> validTo DATETIME
    coverageFunction_gridFunction GMLCOV_GridFunction [0..1] as ref
    inspireId BASE_Identifier as ref
    <<voidable>> isMonitoredBy_EnvironmentalMonitoringProgramme BASE_Identifier [0..*] as ref
  }
  Relation "NZ_CORE_ExposedElement_assessmentOfVulnerability" {
    * profile = "attributes"
    * tableName = "NZ_CORE_ExposedElement_assessmentOfVulnerability"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES NZ_CORE_ExposedElement(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES NZ_CORE_VulnerabilityAssessment(id)
  }
  Relation "NZ_CORE_HazardArea_magnitudeOrIntensity" {
    * profile = "attributes"
    * tableName = "NZ_CORE_HazardArea_magnitudeOrIntensity"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES NZ_CORE_HazardArea(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES NZ_CORE_LevelOrIntensity(id)
  }
  Relation "NZ_CORE_ObservedEvent_magnitudeOrIntensity" {
    * profile = "attributes"
    * tableName = "NZ_CORE_ObservedEvent_magnitudeOrIntensity"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES NZ_CORE_ObservedEvent(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES NZ_CORE_LevelOrIntensity(id)
  }
}
Container <<applicationSchema>> "Base Types 2" {
  * fileName = "Base Types 2"
  Constraint Enum <<enumeration>> "BASE2_SimpleCitationType" {
    CI_Citation
    DocumentCitation
    LegislationCitation
  }
}
Container "Temporal Reference System" {
  * fileName = "Temporal Reference System"
  Constraint Enum <<enumeration>> "TRS_TM_IndeterminateValue" {
    * identifier = "Temporal Reference System::TM_IndeterminateValue"
    after
    before
    name
    now
    unknow
  }
}
Container "Units of Measure" {
  * fileName = "Units of Measure"
  Constraint Enum <<codeList>> "GML_MeasureType" {
    * identifier = "Units of Measure::MeasureType"
    angle
    area
    length
    scale
    time
    velocity
    volume
    weight
  }
  Constraint Enum "GML_UomIdentifier" {}
}
Container "Quadrilateral Grid" {
  * fileName = "Quadrilateral Grid"
  Constraint Enum <<codeList>> "CIS_CV_SequenceType" {
    * identifier = "Quadrilateral Grid::CV_SequenceType"
    CantorDiagonal
    Hilbert
    Morton
    boustrophedonic
    linear
    spiral
  }
}
Container <<applicationSchema>> "Base Types" {
  * fileName = "Base Types"
  Attributes <<dataType>> "BASE_Identifier" {
    * description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    * identifier = "Base Types::Identifier"
    * tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    <<lifeCycleInfo>>, <<voidable>> versionId TEXT
  }
  Metadata "Unknown" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
}
Package "Records and Class Metadata" {
  Class <<type>>, <<type>> "Any" {}
  Class <<type>>, <<type>> "RecordType" {
    typeName_aName : TEXT
    record Record [0..*] as ref
    schema Schema [0..*] as ref
  }
}
Package "EA Model" {
  Class "applicationSchema" {}
  Datatype LegislationLevelValue
  
}

Container <<applicationSchema>> "Coverages (Domain and Range)" {
  * fileName = "Coverages (Domain and Range)"
  Attributes <<dataType>> "GMLCOV_GridFunction" {
    * description = "An explicit mapping rule for grid geometries"
    * identifier = "Coverages (Domain and Range)::GridFunction"
    * tableName = "GMLCOV_GridFunction"
    id INTEGER NOT NULL PRIMARY KEY
    sequenceRule_scanDirection <<missing>>
    sequenceRule_type TEXT CHECK(CIS_CV_SequenceType) DEFAULT 'linear'
    <<array>> startPoints TEXT
  }
}
Package "Temporal Objects" {
  Class "TM_TopologicalComplex" {
    primitive TM_TopologicalPrimitive [1..*] as ref
  }
  Class "TM_Instant" {
    position_anyOther_indeterminatePosition : TEXT [0..1]
    position_date8601 : DATE [0..1]
    position_dateTime8601 : DATETIME [0..1]
    position_time8601 : TEXT [0..1]
    position_time8601_uom : TEXT [0..1]
    begunBy TM_Period [0..*] as ref
    endedBy TM_Period [0..*] as ref
    topology TM_Node [0..1] as ref
  }
  Class "TM_Period" {
    begin TM_Instant as ref
    end TM_Instant as ref
    topology TM_Edge [0..1] as ref
  }
  Class "TM_Edge" {
    complex TM_TopologicalComplex as ref
    end TM_Node as ref
    geometry TM_Period [0..1] as ref
    start TM_Node as ref
  }
  Class "TM_TopologicalPrimitive" {
    complex TM_TopologicalComplex as ref
  }
  Class "TM_Node" {
    complex TM_TopologicalComplex as ref
    geometry TM_Instant [0..1] as ref
    nextEdge TM_Edge [0..*] as ref
    previousEdge TM_Edge [0..*] as ref
  }
}
