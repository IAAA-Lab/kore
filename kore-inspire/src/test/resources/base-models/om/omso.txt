
Container <<leaf>> "Specialised Observations::Gridded Observations" {
  * fileName = "Gridded Observations"
  Attributes <<featureType>> "OMSO_GridSeriesObservation" {
    * description = "Observation representing an evolving gridded field at a succession of time instants.
  
    A GridSeriesObservation is a time series of gridded fields representing the same phenomenon (or phenomena) over a series of times. E.g. Ocean model output.
  
    The result of a GridSeriesObservation is a discrete coverage within a compound spatiotemporal CRS where the domain consists of a series of two- or three-dimensional grids of points, each at a successive time instant."
    * identifier = "Gridded Observations::GridSeriesObservation"
    * tableName = "OMSO_GridSeriesObservation"
    id INTEGER NOT NULL PRIMARY KEY
    phenomenonTime TM_Object NOT NULL
    resultQuality DQ_Element
    resultTime TM_Instant NOT NULL
    validTime TM_Period
    featureOfInterest_GFI_Feature BASE_Identifier as ref
    featureOfInterest_SF_SpatialSamplingFeature BASE_Identifier [0..*] as ref
    parameter _NamedValue [0..*] as ref
    procedure_OM_Process BASE_Identifier as ref
    relatedObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "OMSO_GridObservation" {
    * description = "Observation representing a gridded field at a single time instant.
  
    A GridObservation is an observation of some phenomenon (or phenomena) over a gridded field. E.g. Output from a model, or rectified, georeferenced satellite data.
  
    The result of a GridObservation is a discrete coverage within a compound spatiotemporal CRS where the domain consists of a two- or three-dimensional grid of points, all having the same time instant temporal component."
    * identifier = "Gridded Observations::GridObservation"
    * tableName = "OMSO_GridObservation"
    id INTEGER NOT NULL PRIMARY KEY
    phenomenonTime TM_Object NOT NULL
    resultQuality DQ_Element
    resultTime TM_Instant NOT NULL
    validTime TM_Period
    featureOfInterest_GFI_Feature BASE_Identifier as ref
    featureOfInterest_SF_SpatialSamplingFeature BASE_Identifier [0..*] as ref
    parameter _NamedValue [0..*] as ref
    procedure_OM_Process BASE_Identifier as ref
    relatedObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
}
Container <<leaf>> "Specialised Observations::Point Observations" {
  * fileName = "Point Observations"
  Attributes <<featureType>> "OMSO_PointObservationCollection" {
    * description = "A collection of Point Observations.
  
    The PointObservationCollection is a collection of separate PointObservations. In the case where it is useful to group together a set of otherwise independent PointObservations the PointObservationCollection should be used to make this grouping. The grouping may be made on any basis e.g. it may be useful to group together PointObservations made by the same instrument or Environmental Facility, or in a particular measurement campaign. Each member of the PointObservationCollection must be a single PointObservation."
    * identifier = "Point Observations::PointObservationCollection"
    * tableName = "OMSO_PointObservationCollection"
    extent EX_Extent NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    inspireId BASE_Identifier as ref
    member_OM_Observation BASE_Identifier [1..*] as ref
  }
  Attributes <<featureType>> "OMSO_MultiPointObservation" {
    * description = "Observation that represents a set of measurements all made at exactly the same time but at different locations
  
    The MultiPointObservation is an Observation that represents a set of measurements all made at exactly the same time but at different locations, for example a distributed sensor network reporting the temperature at 10am. The result of this observation is a MultiPointCoverage."
    * identifier = "Point Observations::MultiPointObservation"
    * tableName = "OMSO_MultiPointObservation"
    id INTEGER NOT NULL PRIMARY KEY
    phenomenonTime TM_Object NOT NULL
    resultQuality DQ_Element
    resultTime TM_Instant NOT NULL
    validTime TM_Period
    featureOfInterest_GFI_Feature BASE_Identifier as ref
    featureOfInterest_SF_SpatialSamplingFeature BASE_Identifier [0..*] as ref
    parameter _NamedValue [0..*] as ref
    procedure_OM_Process BASE_Identifier as ref
    relatedObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "OMSO_PointObservation" {
    * description = "Observation that represents a measurement of a property at a single point in time and space.
  
    The PointObservation represents a single measurement or estimation of a property at a single point in time and space. For example a single temperture measurement at a fixed weather station."
    * identifier = "Point Observations::PointObservation"
    * tableName = "OMSO_PointObservation"
    id INTEGER NOT NULL PRIMARY KEY
    phenomenonTime TM_Object NOT NULL
    resultQuality DQ_Element
    resultTime TM_Instant NOT NULL
    validTime TM_Period
    featureOfInterest_GFI_Feature BASE_Identifier as ref
    featureOfInterest_SF_SpatialSamplingFeature BASE_Identifier [0..*] as ref
    parameter _NamedValue [0..*] as ref
    procedure_OM_Process BASE_Identifier as ref
    relatedObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "OMSO_PointTimeSeriesObservation" {
    * description = "Observation that represents a time-series of point measurements of a property at a fixed location in space
  
    A PointTimeSeriesObservation is a time series of observations made at the same fixed spatial location e.g. Measurements made repeatedly by a fixed monitoring instrument."
    * identifier = "Point Observations::PointTimeSeriesObservation"
    * tableName = "OMSO_PointTimeSeriesObservation"
    id INTEGER NOT NULL PRIMARY KEY
    phenomenonTime TM_Object NOT NULL
    resultQuality DQ_Element
    resultTime TM_Instant NOT NULL
    validTime TM_Period
    featureOfInterest_GFI_Feature BASE_Identifier as ref
    featureOfInterest_SF_SpatialSamplingFeature BASE_Identifier [0..*] as ref
    parameter _NamedValue [0..*] as ref
    procedure_OM_Process BASE_Identifier as ref
    relatedObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
}
Container <<leaf>> "Specialised Observations::Trajectory and Profile Observations" {
  * fileName = "Trajectory and Profile Observations"
  Attributes <<dataType>> "OMSO_TimeLocationValueTriple" {
    * description = "A triple set of Time, location, value (measurement). For example, at a point along a trajectory."
    * identifier = "Trajectory and Profile Observations::TimeLocationValueTriple"
    * tableName = "OMSO_TimeLocationValueTriple"
    geometry TM_Instant NOT NULL
    geometry_anyOther TM_TemporalPosition
    geometry_date8601 DATE
    geometry_dateTime8601 DATETIME
    geometry_time8601 TEXT
    geometry_time8601_uom TEXT CHECK(GML_UomIdentifier)
    id INTEGER NOT NULL PRIMARY KEY
    location_direct_coordinate <<missing>>
    location_direct_dimension INTEGER
    value Record NOT NULL
    collection Timeseries [0..*] as ref
    collection CVT_DiscreteTimeInstantCoverage [0..*] as ref
    collection CV_DiscreteCoverage [0..*] as ref
    extension CV_ValueObject [0..*] as ref
  }
  Attributes <<featureType>> "OMSO_TrajectoryObservation" {
    * description = "Observation representing  the measurement of a property along a meandering curve in time and space.
  
    A TrajectoryObservatation is an Observation representing  the measurement of a property along a meandering curve in time and space. For example a Pollutant concentration from a mobile air quality sensor."
    * identifier = "Trajectory and Profile Observations::TrajectoryObservation"
    * tableName = "OMSO_TrajectoryObservation"
    id INTEGER NOT NULL PRIMARY KEY
    phenomenonTime TM_Object NOT NULL
    resultQuality DQ_Element
    resultTime TM_Instant NOT NULL
    validTime TM_Period
    featureOfInterest_GFI_Feature BASE_Identifier as ref
    featureOfInterest_SF_SpatialSamplingFeature BASE_Identifier [0..*] as ref
    parameter _NamedValue [0..*] as ref
    procedure_OM_Process BASE_Identifier as ref
    relatedObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "OMSO_ProfileObservation" {
    * description = "Observation representing  the measurement of a property along a vertical profile in space at a single time instant.
  
    A ProfileObservatation is an Observation representing  the measurement of a property along a vertical profice in space at a single time instant. For example a CTD profile measuring salinty at different depths in the ocean."
    * identifier = "Trajectory and Profile Observations::ProfileObservation"
    * tableName = "OMSO_ProfileObservation"
    id INTEGER NOT NULL PRIMARY KEY
    phenomenonTime TM_Object NOT NULL
    resultQuality DQ_Element
    resultTime TM_Instant NOT NULL
    validTime TM_Period
    featureOfInterest_GFI_Feature BASE_Identifier as ref
    featureOfInterest_SF_SpatialSamplingFeature BASE_Identifier [0..*] as ref
    parameter _NamedValue [0..*] as ref
    procedure_OM_Process BASE_Identifier as ref
    relatedObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
}
Container <<leaf>> "Gridded Observations" {
  * fileName = "Gridded Observations"
  Attributes <<featureType>> "OMSO_GridSeriesObservation" {
    * description = "Observation representing an evolving gridded field at a succession of time instants.
  
    A GridSeriesObservation is a time series of gridded fields representing the same phenomenon (or phenomena) over a series of times. E.g. Ocean model output.
  
    The result of a GridSeriesObservation is a discrete coverage within a compound spatiotemporal CRS where the domain consists of a series of two- or three-dimensional grids of points, each at a successive time instant."
    * identifier = "Gridded Observations::GridSeriesObservation"
    * tableName = "OMSO_GridSeriesObservation"
    id INTEGER NOT NULL PRIMARY KEY
    phenomenonTime TM_Object NOT NULL
    resultQuality DQ_Element
    resultTime TM_Instant NOT NULL
    validTime TM_Period
    featureOfInterest_GFI_Feature BASE_Identifier as ref
    featureOfInterest_SF_SpatialSamplingFeature BASE_Identifier [0..*] as ref
    parameter _NamedValue [0..*] as ref
    procedure_OM_Process BASE_Identifier as ref
    relatedObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "OMSO_GridObservation" {
    * description = "Observation representing a gridded field at a single time instant.
  
    A GridObservation is an observation of some phenomenon (or phenomena) over a gridded field. E.g. Output from a model, or rectified, georeferenced satellite data.
  
    The result of a GridObservation is a discrete coverage within a compound spatiotemporal CRS where the domain consists of a two- or three-dimensional grid of points, all having the same time instant temporal component."
    * identifier = "Gridded Observations::GridObservation"
    * tableName = "OMSO_GridObservation"
    id INTEGER NOT NULL PRIMARY KEY
    phenomenonTime TM_Object NOT NULL
    resultQuality DQ_Element
    resultTime TM_Instant NOT NULL
    validTime TM_Period
    featureOfInterest_GFI_Feature BASE_Identifier as ref
    featureOfInterest_SF_SpatialSamplingFeature BASE_Identifier [0..*] as ref
    parameter _NamedValue [0..*] as ref
    procedure_OM_Process BASE_Identifier as ref
    relatedObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
}
Container <<leaf>> "Point Observations" {
  * fileName = "Point Observations"
  Attributes <<featureType>> "OMSO_PointObservationCollection" {
    * description = "A collection of Point Observations.
  
    The PointObservationCollection is a collection of separate PointObservations. In the case where it is useful to group together a set of otherwise independent PointObservations the PointObservationCollection should be used to make this grouping. The grouping may be made on any basis e.g. it may be useful to group together PointObservations made by the same instrument or Environmental Facility, or in a particular measurement campaign. Each member of the PointObservationCollection must be a single PointObservation."
    * identifier = "Point Observations::PointObservationCollection"
    * tableName = "OMSO_PointObservationCollection"
    extent EX_Extent NOT NULL
    id INTEGER NOT NULL PRIMARY KEY
    inspireId BASE_Identifier as ref
    member_OM_Observation BASE_Identifier [1..*] as ref
  }
  Attributes <<featureType>> "OMSO_MultiPointObservation" {
    * description = "Observation that represents a set of measurements all made at exactly the same time but at different locations
  
    The MultiPointObservation is an Observation that represents a set of measurements all made at exactly the same time but at different locations, for example a distributed sensor network reporting the temperature at 10am. The result of this observation is a MultiPointCoverage."
    * identifier = "Point Observations::MultiPointObservation"
    * tableName = "OMSO_MultiPointObservation"
    id INTEGER NOT NULL PRIMARY KEY
    phenomenonTime TM_Object NOT NULL
    resultQuality DQ_Element
    resultTime TM_Instant NOT NULL
    validTime TM_Period
    featureOfInterest_GFI_Feature BASE_Identifier as ref
    featureOfInterest_SF_SpatialSamplingFeature BASE_Identifier [0..*] as ref
    parameter _NamedValue [0..*] as ref
    procedure_OM_Process BASE_Identifier as ref
    relatedObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "OMSO_PointObservation" {
    * description = "Observation that represents a measurement of a property at a single point in time and space.
  
    The PointObservation represents a single measurement or estimation of a property at a single point in time and space. For example a single temperture measurement at a fixed weather station."
    * identifier = "Point Observations::PointObservation"
    * tableName = "OMSO_PointObservation"
    id INTEGER NOT NULL PRIMARY KEY
    phenomenonTime TM_Object NOT NULL
    resultQuality DQ_Element
    resultTime TM_Instant NOT NULL
    validTime TM_Period
    featureOfInterest_GFI_Feature BASE_Identifier as ref
    featureOfInterest_SF_SpatialSamplingFeature BASE_Identifier [0..*] as ref
    parameter _NamedValue [0..*] as ref
    procedure_OM_Process BASE_Identifier as ref
    relatedObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "OMSO_PointTimeSeriesObservation" {
    * description = "Observation that represents a time-series of point measurements of a property at a fixed location in space
  
    A PointTimeSeriesObservation is a time series of observations made at the same fixed spatial location e.g. Measurements made repeatedly by a fixed monitoring instrument."
    * identifier = "Point Observations::PointTimeSeriesObservation"
    * tableName = "OMSO_PointTimeSeriesObservation"
    id INTEGER NOT NULL PRIMARY KEY
    phenomenonTime TM_Object NOT NULL
    resultQuality DQ_Element
    resultTime TM_Instant NOT NULL
    validTime TM_Period
    featureOfInterest_GFI_Feature BASE_Identifier as ref
    featureOfInterest_SF_SpatialSamplingFeature BASE_Identifier [0..*] as ref
    parameter _NamedValue [0..*] as ref
    procedure_OM_Process BASE_Identifier as ref
    relatedObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
}
Container <<leaf>> "Trajectory and Profile Observations" {
  * fileName = "Trajectory and Profile Observations"
  Attributes <<dataType>> "OMSO_TimeLocationValueTriple" {
    * description = "A triple set of Time, location, value (measurement). For example, at a point along a trajectory."
    * identifier = "Trajectory and Profile Observations::TimeLocationValueTriple"
    * tableName = "OMSO_TimeLocationValueTriple"
    geometry TM_Instant NOT NULL
    geometry_anyOther TM_TemporalPosition
    geometry_date8601 DATE
    geometry_dateTime8601 DATETIME
    geometry_time8601 TEXT
    geometry_time8601_uom TEXT CHECK(GML_UomIdentifier)
    id INTEGER NOT NULL PRIMARY KEY
    location_direct_coordinate <<missing>>
    location_direct_dimension INTEGER
    value Record NOT NULL
    collection Timeseries [0..*] as ref
    collection CVT_DiscreteTimeInstantCoverage [0..*] as ref
    collection CV_DiscreteCoverage [0..*] as ref
    extension CV_ValueObject [0..*] as ref
  }
  Attributes <<featureType>> "OMSO_TrajectoryObservation" {
    * description = "Observation representing  the measurement of a property along a meandering curve in time and space.
  
    A TrajectoryObservatation is an Observation representing  the measurement of a property along a meandering curve in time and space. For example a Pollutant concentration from a mobile air quality sensor."
    * identifier = "Trajectory and Profile Observations::TrajectoryObservation"
    * tableName = "OMSO_TrajectoryObservation"
    id INTEGER NOT NULL PRIMARY KEY
    phenomenonTime TM_Object NOT NULL
    resultQuality DQ_Element
    resultTime TM_Instant NOT NULL
    validTime TM_Period
    featureOfInterest_GFI_Feature BASE_Identifier as ref
    featureOfInterest_SF_SpatialSamplingFeature BASE_Identifier [0..*] as ref
    parameter _NamedValue [0..*] as ref
    procedure_OM_Process BASE_Identifier as ref
    relatedObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
  Attributes <<featureType>> "OMSO_ProfileObservation" {
    * description = "Observation representing  the measurement of a property along a vertical profile in space at a single time instant.
  
    A ProfileObservatation is an Observation representing  the measurement of a property along a vertical profice in space at a single time instant. For example a CTD profile measuring salinty at different depths in the ocean."
    * identifier = "Trajectory and Profile Observations::ProfileObservation"
    * tableName = "OMSO_ProfileObservation"
    id INTEGER NOT NULL PRIMARY KEY
    phenomenonTime TM_Object NOT NULL
    resultQuality DQ_Element
    resultTime TM_Instant NOT NULL
    validTime TM_Period
    featureOfInterest_GFI_Feature BASE_Identifier as ref
    featureOfInterest_SF_SpatialSamplingFeature BASE_Identifier [0..*] as ref
    parameter _NamedValue [0..*] as ref
    procedure_OM_Process BASE_Identifier as ref
    relatedObservation_OM_Observation BASE_Identifier [0..*] as ref
  }
}
Container "Temporal Reference System" {
  * fileName = "Temporal Reference System"
  Class "TM_TemporalPosition" {
    RationalRose$Java:ConstructorIs = "public"
    RationalRose$Java:Final = "False"
    RationalRose$Java:GenerateDefaultConstructor = "True"
    RationalRose$Java:GenerateFinalizer = "False"
    RationalRose$Java:GenerateInstanceInitializer = "False"
    RationalRose$Java:GenerateStaticInitializer = "False"
    RationalRose$Oracle8:CollectionOfREFS = "False"
    RationalRose$Visual Basic:CollectionClass = "Collection"
    RationalRose$Visual Basic:Creatable = "(221)"
    RationalRose$Visual Basic:GenerateInitialization = "False"
    RationalRose$Visual Basic:GenerateTermination = "False"
    RationalRose$Visual Basic:OptionBase = "(none)"
    RationalRose$Visual Basic:OptionCompare = "(none)"
    RationalRose$Visual Basic:OptionExplicit = "True"
    indeterminatePosition : TEXT [0..1]
    frame TM_ReferenceSystem as ref
  }
  Constraint Enum <<enumeration>> "TRS_TM_IndeterminateValue" {
    * identifier = "Temporal Reference System::TM_IndeterminateValue"
    after
    before
    name
    now
    unknow
  }
  Class "TM_ReferenceSystem" {
    RationalRose$Java:ConstructorIs = "public"
    RationalRose$Java:Final = "False"
    RationalRose$Java:GenerateDefaultConstructor = "True"
    RationalRose$Java:GenerateFinalizer = "False"
    RationalRose$Java:GenerateInstanceInitializer = "False"
    RationalRose$Java:GenerateStaticInitializer = "False"
    RationalRose$Oracle8:CollectionOfREFS = "False"
    RationalRose$Visual Basic:CollectionClass = "Collection"
    RationalRose$Visual Basic:Creatable = "(221)"
    RationalRose$Visual Basic:GenerateInitialization = "False"
    RationalRose$Visual Basic:GenerateTermination = "False"
    RationalRose$Visual Basic:OptionBase = "(none)"
    RationalRose$Visual Basic:OptionCompare = "(none)"
    RationalRose$Visual Basic:OptionExplicit = "True"
    name : RS_Identifier
    name_authority_date : DATE [0..1]
    name_authority_level : LegislationLevelValue [0..1]
    name_authority_link : TEXT [0..1]
    name_authority_name : TEXT [0..1]
    name_authority_type : TEXT [0..1]
    name_code : TEXT
    name_codeSpace : TEXT [0..1]
    name_version : TEXT [0..1]
    domainOfValidity EX_Extent [0..*] as ref
    position TM_TemporalPosition [0..*] as ref
  }
}
Container <<applicationSchema>> "Base Types 2" {
  * fileName = "Base Types 2"
  Constraint Enum <<enumeration>> "BASE2_SimpleCitationType" {
    CI_Citation
    DocumentCitation
    LegislationCitation
  }
}
Container "Identification information" {
  * fileName = "Identification information"
  Constraint Enum <<enumeration>> "GMD_MD_TopicCategoryCode" {
    * identifier = "Identification information::MD_TopicCategoryCode"
    biota
    boundaries
    climatologyMeteorologyAtmosphere
    economy
    elevation
    environment
    farming
    geoscientificInformation
    health
    imageryBaseMapsEarthCover
    inlandWaters
    intelligenceMilitary
    location
    oceans
    planningCadastre
    society
    structure
    transportation
    utilitiesCommunication
  }
  Constraint Enum <<codeList>> "GMD_DS_InitiativeTypeCode" {
    * identifier = "Identification information::DS_InitiativeTypeCode"
    campaign
    collection
    exercise
    experiment
    investigation
    mission
    operation
    platform
    process
    program
    project
    sensor
    study
    task
    trial
  }
  Class "MD_DataIdentification" {
    abstract : TEXT
    citation_date : DATE [0..1]
    citation_level : LegislationLevelValue [0..1]
    citation_link : TEXT [0..1]
    citation_name : TEXT
    citation_type : TEXT
    environmentDescription : TEXT [0..1]
    purpose : TEXT [0..1]
    supplementalInformation : TEXT [0..1]
    <<array>> characterSets : TEXT [0..1]
    <<array>> credits : TEXT [0..1]
    <<array>> languages : TEXT
    <<array>> spatialRepresentationTypes : TEXT [0..1]
    <<array>> statuses : TEXT [0..1]
    <<array>> topicCategories : TEXT
    extent EX_Extent [0..*] as ref
    pointOfContact GMD_CI_ResponsibleParty [0..*] as ref
    spatialResolution MD_Resolution [0..*] as ref
  }
  Class <<union>> "MD_Resolution" {
    RationalRose$Java:ConstructorIs = "public"
    RationalRose$Java:Final = "False"
    RationalRose$Java:GenerateDefaultConstructor = "True"
    RationalRose$Java:GenerateFinalizer = "False"
    RationalRose$Java:GenerateInstanceInitializer = "False"
    RationalRose$Java:GenerateStaticInitializer = "False"
    RationalRose$Oracle8:CollectionOfREFS = "False"
    RationalRose$Visual Basic:CollectionClass = "Collection"
    RationalRose$Visual Basic:Creatable = "(221)"
    RationalRose$Visual Basic:GenerateInitialization = "False"
    RationalRose$Visual Basic:GenerateTermination = "False"
    RationalRose$Visual Basic:OptionBase = "(none)"
    RationalRose$Visual Basic:OptionCompare = "(none)"
    RationalRose$Visual Basic:OptionExplicit = "True"
    distance : TEXT
    distance_uom : TEXT
    equivalentScale_denominator : INTEGER
  }
  Constraint Enum <<codeList>> "GMD_DS_AssociationTypeCode" {
    * identifier = "Identification information::DS_AssociationTypeCode"
    RationalRose$Java:ConstructorIs = "public"
    RationalRose$Java:Final = "False"
    RationalRose$Java:GenerateDefaultConstructor = "True"
    RationalRose$Java:GenerateFinalizer = "False"
    RationalRose$Java:GenerateInstanceInitializer = "False"
    RationalRose$Java:GenerateStaticInitializer = "False"
    RationalRose$Oracle8:CollectionOfREFS = "False"
    RationalRose$Visual Basic:CollectionClass = "Collection"
    RationalRose$Visual Basic:Creatable = "(221)"
    RationalRose$Visual Basic:GenerateInitialization = "False"
    RationalRose$Visual Basic:GenerateTermination = "False"
    RationalRose$Visual Basic:OptionBase = "(none)"
    RationalRose$Visual Basic:OptionCompare = "(none)"
    RationalRose$Visual Basic:OptionExplicit = "True"
    crossReference
    largerWorkCitation
    partOfSeamlessDatabase
    source
    stereoMate
  }
  Constraint Enum <<codeList>> "GMD_MD_CharacterSetCode" {
    * identifier = "Identification information::MD_CharacterSetCode"
    (reservedforfutureuse)
    8859part1
    8859part10
    8859part11
    8859part13
    8859part14
    8859part15
    8859part16
    8859part2
    8859part3
    8859part4
    8859part5
    8859part6
    8859part7
    8859part8
    8859part9
    GB2312
    big5
    ebcdic
    eucJP
    eucKR
    jis
    shiftJIS
    ucs2
    ucs4
    usAscii
    utf16
    utf7
    utf8
  }
  Constraint Enum <<codeList>> "GMD_MD_KeywordTypeCode" {
    * identifier = "Identification information::MD_KeywordTypeCode"
    discipline
    place
    stratum
    temporal
    theme
  }
  Constraint Enum <<codeList>> "GMD_MD_SpatialRepresentationTypeCode" {
    * identifier = "Identification information::MD_SpatialRepresentationTypeCode"
    grid
    stereoModel
    textTable
    tin
    vector
    video
  }
  Constraint Enum <<codeList>> "GMD_MD_ProgressCode" {
    * identifier = "Identification information::MD_ProgressCode"
    completed
    historicalArchive
    obsolete
    onGoing
    planned
    required
    underDevelopment
  }
}
Container "Metadata extension information" {
  * fileName = "Metadata extension information"
  Constraint Enum <<codeList>> "GMD_MD_DatatypeCode" {
    * identifier = "Metadata extension information::MD_DatatypeCode"
    abstractClass
    aggregateClass
    association
    characterString
    class
    codelist
    codelistElement
    datatypeClass
    enumeration
    integer
    interfaceClass
    metaClass
    specifiedClass
    typeClass
    unionClass
  }
  Constraint Enum <<enumeration>> "GMD_MD_ObligationCode" {
    * identifier = "Metadata extension information::MD_ObligationCode"
    conditional
    mandatory
    optional
  }
}
Container "Data quality information" {
  * fileName = "Data quality information"
  Abstract Class "DQ_Element" {
    evaluationMethodDescription : TEXT [0..1]
    evaluationMethodType : TEXT [0..1]
    evaluationProcedure_date : DATE [0..1]
    evaluationProcedure_level : LegislationLevelValue [0..1]
    evaluationProcedure_link : TEXT [0..1]
    evaluationProcedure_name : TEXT [0..1]
    evaluationProcedure_type : TEXT [0..1]
    measureDescription : TEXT [0..1]
    measureIdentification_authority_date : DATE [0..1]
    measureIdentification_authority_level : LegislationLevelValue [0..1]
    measureIdentification_authority_link : TEXT [0..1]
    measureIdentification_authority_name : TEXT [0..1]
    measureIdentification_authority_type : TEXT [0..1]
    measureIdentification_code : TEXT [0..1]
    <<array>> dateTimes : TEXT [0..1]
    <<array>> nameOfMeasures : TEXT [0..1]
    result DQ_Result [1..2] as ref
  }
  Abstract Class "DQ_PositionalAccuracy" {
    evaluationMethodDescription : TEXT [0..1]
    evaluationMethodType : TEXT [0..1]
    evaluationProcedure_date : DATE [0..1]
    evaluationProcedure_level : LegislationLevelValue [0..1]
    evaluationProcedure_link : TEXT [0..1]
    evaluationProcedure_name : TEXT [0..1]
    evaluationProcedure_type : TEXT [0..1]
    measureDescription : TEXT [0..1]
    measureIdentification_authority_date : DATE [0..1]
    measureIdentification_authority_level : LegislationLevelValue [0..1]
    measureIdentification_authority_link : TEXT [0..1]
    measureIdentification_authority_name : TEXT [0..1]
    measureIdentification_authority_type : TEXT [0..1]
    measureIdentification_code : TEXT [0..1]
    <<array>> dateTimes : TEXT [0..1]
    <<array>> nameOfMeasures : TEXT [0..1]
    result DQ_Result [1..2] as ref
  }
  Abstract Class "DQ_Result" {}
  Constraint Enum <<codeList>> "GMD_DQ_EvaluationMethodTypeCode" {
    * identifier = "Data quality information::DQ_EvaluationMethodTypeCode"
    directExternal
    directInternal
    indirect
  }
}
Container "Segmented Curve" {
  * fileName = "Segmented Curve"
  Constraint Enum <<codeList>> "SC_CV_CommonPointRule" {
    * identifier = "Segmented Curve::CV_CommonPointRule"
    all
    average
    end
    high
    low
    start
  }
}
Container "Maintenance information" {
  * fileName = "Maintenance information"
  Constraint Enum <<codeList>> "GMD_MD_ScopeCode" {
    * identifier = "Maintenance information::MD_ScopeCode"
    RationalRose$Java:ConstructorIs = "public"
    RationalRose$Java:Final = "False"
    RationalRose$Java:GenerateDefaultConstructor = "True"
    RationalRose$Java:GenerateFinalizer = "False"
    RationalRose$Java:GenerateInstanceInitializer = "False"
    RationalRose$Java:GenerateStaticInitializer = "False"
    RationalRose$Oracle8:CollectionOfREFS = "False"
    RationalRose$Visual Basic:CollectionClass = "Collection"
    RationalRose$Visual Basic:Creatable = "(221)"
    RationalRose$Visual Basic:GenerateInitialization = "False"
    RationalRose$Visual Basic:GenerateTermination = "False"
    RationalRose$Visual Basic:OptionBase = "(none)"
    RationalRose$Visual Basic:OptionCompare = "(none)"
    RationalRose$Visual Basic:OptionExplicit = "True"
    attribute
    attributeType
    collectionHardware
    collectionSession
    dataset
    dimensionGroup
    feature
    featureType
    fieldSession
    model
    nonGeographicDataset
    propertyType
    series
    service
    software
    tile
  }
  Constraint Enum <<codeList>> "GMD_MD_MaintenanceFrequencyCode" {
    * identifier = "Maintenance information::MD_MaintenanceFrequencyCode"
    annually
    asNeeded
    biannually
    continual
    daily
    fortnightly
    irregular
    monthly
    notPlanned
    quarterly
    unknown
    weekly
  }
}
Container "Timeseries" {
  * fileName = "Timeseries"
  Constraint Enum <<codeList>> "WML2_DataQualityCode" {
    * identifier = "Timeseries::DataQualityCode"
    Estimate
    Good
    Missing
    Poor
    Suspect
    Unchecked
  }
  Attributes <<dataType>> "WML2_PointMetadata" {
    * identifier = "Timeseries::PointMetadata"
    * tableName = "WML2_PointMetadata"
    aggregationDuration_days TEXT
    aggregationDuration_designator TEXT DEFAULT 'P'
    aggregationDuration_hours TEXT
    aggregationDuration_minutes TEXT
    aggregationDuration_months TEXT
    aggregationDuration_seconds TEXT
    aggregationDuration_timeIndicator TEXT DEFAULT 'T'
    aggregationDuration_years TEXT
    comment TEXT
    id INTEGER NOT NULL PRIMARY KEY
    nilReason_NilReasonEnumeration <<missing>>
    nilReason_URI <<missing>>
    processing TEXT CHECK(WML2_ProcessingCode)
    quality TEXT CHECK(WML2_DataQualityCode)
    source MD_DataIdentification
    <<reference>> relatedObservation_OM_Observation INTEGER
    qualifier Quality [0..*] as ref
  }
  Constraint Enum <<codeList>> "WML2_ProcessingCode" {
    * identifier = "Timeseries::ProcessingCode"
  }
  Relation "WML2_PointMetadata_relatedObservation_OM_Observation" {
    * profile = "attributes"
    * relatedReference = "attribute WML2_PointMetadata#relatedObservation_OM_Observation"
    * tableName = "WML2_PointMetadata_relatedObservation_OM_Observation"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES WML2_PointMetadata(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES BASE_Identifier(id)
  }
}
Container "Citation and responsible party information" {
  * fileName = "Citation and responsible party information"
  Attributes <<dataType>> "GMD_CI_ResponsibleParty" {
    * description = "Identification of, and means of communication with, person(s) and organisations associated with the dataset"
    * identifier = "Citation and responsible party information::CI_ResponsibleParty"
    * tableName = "GMD_CI_ResponsibleParty"
    contactInfo_contactInstructions TEXT
    contactInfo_hoursOfService TEXT
    contactInfo_onlineResource_applicationProfile TEXT
    contactInfo_onlineResource_description TEXT
    contactInfo_onlineResource_function TEXT CHECK(GMD_CI_OnLineFunctionCode)
    contactInfo_onlineResource_linkage TEXT
    contactInfo_onlineResource_name TEXT
    contactInfo_onlineResource_protocol TEXT
    id INTEGER NOT NULL PRIMARY KEY
    individualName TEXT
    organisationName TEXT
    positionName TEXT
    role TEXT NOT NULL CHECK(GMD_CI_RoleCode)
    <<reference>> contactInfo_address INTEGER
    <<reference>> contactInfo_phone INTEGER
  }
  Constraint Enum <<codeList>> "GMD_CI_RoleCode" {
    * identifier = "Citation and responsible party information::CI_RoleCode"
    author
    custodian
    distributor
    originator
    owner
    pointOfContact
    principalInvestigator
    processor
    publisher
    resourceProvider
    user
  }
  Constraint Enum <<codeList>> "GMD_CI_OnLineFunctionCode" {
    * identifier = "Citation and responsible party information::CI_OnLineFunctionCode"
    download
    information
    offlineAccess
    order
    search
  }
  Attributes <<dataType>> "GMD_CI_Telephone" {
    * description = "Telephone numbers for contacting the responsible individual or organisation"
    * identifier = "Citation and responsible party information::CI_Telephone"
    * tableName = "GMD_CI_Telephone"
    id INTEGER NOT NULL PRIMARY KEY
    <<array>> facsimiles TEXT
    <<array>> voices TEXT
  }
  Attributes <<dataType>> "GMD_CI_Address" {
    * description = "Location of the responsible individual or organisation"
    * identifier = "Citation and responsible party information::CI_Address"
    * tableName = "GMD_CI_Address"
    administrativeArea TEXT
    city TEXT
    country TEXT
    id INTEGER NOT NULL PRIMARY KEY
    postalCode TEXT
    <<array>> deliveryPoints TEXT
    <<array>> electronicMailAddresses TEXT
  }
  Relation "GMD_CI_ResponsibleParty_contactInfo_phone" {
    * profile = "attributes"
    * relatedReference = "attribute GMD_CI_ResponsibleParty#contactInfo_phone"
    * tableName = "GMD_CI_ResponsibleParty_contactInfo_phone"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES GMD_CI_ResponsibleParty(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GMD_CI_Telephone(id)
  }
  Relation "GMD_CI_ResponsibleParty_contactInfo_address" {
    * profile = "attributes"
    * relatedReference = "attribute GMD_CI_ResponsibleParty#contactInfo_address"
    * tableName = "GMD_CI_ResponsibleParty_contactInfo_address"
    base_id INTEGER NOT NULL FOREIGN KEY (base_id) REFERENCES GMD_CI_ResponsibleParty(id)
    related_id INTEGER NOT NULL FOREIGN KEY (related_id) REFERENCES GMD_CI_Address(id)
  }
}
Container "ISO 00639 Language Codes" {
  * fileName = "ISO 00639 Language Codes"
  Constraint Enum <<codeList>> "GMD_LanguageCode" {
    * identifier = "ISO 00639 Language Codes::LanguageCode"
    Afrikaans
    Albanian
    Arabic
    Basque
    Belarusian
    Bulgarian
    Catalan
    Chinese
    Croatian
    Czech
    Danish
    Dutch
    English
    Estonian
    Faeroese
    Finnish
    French
    French(Canadian)
    German
    Greek
    Hawaian
    Hebrew
    Hungarian
    Icelandic
    Indonesian
    Italian
    Japanese
    Korean
    Latvian
    Lithuanian
    Malaysian
    Norwegian
    Polish
    Portuguese
    Romanian
    Russian
    Serbian
    Slovak
    Slovenian
    Spanish
    Swahili
    Swedish
    Turkish
    Ukranian
  }
}
Container "ISO 03166 Country Codes" {
  * fileName = "ISO 03166 Country Codes"
  Constraint Enum <<codeList>> "GMD_CountryCode" {
    * identifier = "ISO 03166 Country Codes::CountryCode"
  }
}
Container "Units of Measure" {
  * fileName = "Units of Measure"
  Constraint Enum <<codeList>> "GML_MeasureType" {
    * identifier = "Units of Measure::MeasureType"
    angle
    area
    length
    scale
    time
    velocity
    volume
    weight
  }
  Constraint Enum "GML_UomIdentifier" {}
}
Container "Distribution information" {
  * fileName = "Distribution information"
  Constraint Enum <<codeList>> "GMD_MD_MediumFormatCode" {
    * identifier = "Distribution information::MD_MediumFormatCode"
    cpio
    highSierra
    iso9660
    iso9660AppleHFS
    iso9660RockRidge
    tar
  }
  Constraint Enum <<codeList>> "GMD_MD_MediumNameCode" {
    * identifier = "Distribution information::MD_MediumNameCode"
    1quarterInchCartridgeTape
    3480Cartridge
    3490Cartridge
    3580Cartridge
    3halfInchFloppy
    4mmCartridgeTape
    5quarterInchFloppy
    7trackTape
    8mmCartridgeTape
    9trackTape
    cdRom
    digitalLinearTape
    dvd
    dvdRom
    hardcopy
    onLine
    satellite
    telephoneLink
  }
}
Container <<applicationSchema>> "Base Types" {
  * fileName = "Base Types"
  Attributes <<dataType>> "BASE_Identifier" {
    * description = "External unique object identifier published by the responsible body, which may be used by external applications to reference the spatial object.
  
    NOTE1 External object identifiers are distinct from thematic object identifiers.
  
    NOTE 2 The voidable version identifier attribute is not part of the unique identifier of a spatial object and may be used to distinguish two versions of the same spatial object.
  
    NOTE 3 The unique identifier will not change during the life-time of a spatial object."
    * identifier = "Base Types::Identifier"
    * tableName = "BASE_Identifier"
    id INTEGER NOT NULL PRIMARY KEY
    localId TEXT NOT NULL
    namespace TEXT NOT NULL
    <<lifeCycleInfo>>, <<voidable>> versionId TEXT
  }
  Metadata "Unknown" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Unpopulated" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attribute"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
  Metadata "Withheld" {
    * metadata = "http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld"
    * mimeType = "text/plain"
    * scope = "attributeType"
    * standardUri = "http://www.isotc211.org/2005/gmd"
  }
}
Package "Temporal Objects" {
  Class "TM_TopologicalComplex" {
    primitive TM_TopologicalPrimitive [1..*] as ref
  }
  Class "TM_Object" {}
  Class "TM_Instant" {
    position_anyOther_indeterminatePosition : TEXT [0..1]
    position_date8601 : DATE [0..1]
    position_dateTime8601 : DATETIME [0..1]
    position_time8601 : TEXT [0..1]
    position_time8601_uom : TEXT [0..1]
    begunBy TM_Period [0..*] as ref
    endedBy TM_Period [0..*] as ref
    topology TM_Node [0..1] as ref
  }
  Class "TM_Period" {
    begin TM_Instant as ref
    end TM_Instant as ref
    topology TM_Edge [0..1] as ref
  }
  Class "TM_Edge" {
    complex TM_TopologicalComplex as ref
    end TM_Node as ref
    geometry TM_Period [0..1] as ref
    start TM_Node as ref
  }
  Class "TM_TopologicalPrimitive" {
    complex TM_TopologicalComplex as ref
  }
  Class "TM_Node" {
    complex TM_TopologicalComplex as ref
    geometry TM_Instant [0..1] as ref
    nextEdge TM_Edge [0..*] as ref
    previousEdge TM_Edge [0..*] as ref
  }
}
Package "Extent information" {
  Class "EX_Extent" {
    RationalRose$Java:ConstructorIs = "public"
    RationalRose$Java:Final = "False"
    RationalRose$Java:GenerateDefaultConstructor = "True"
    RationalRose$Java:GenerateFinalizer = "False"
    RationalRose$Java:GenerateInstanceInitializer = "False"
    RationalRose$Java:GenerateStaticInitializer = "False"
    RationalRose$Oracle8:CollectionOfREFS = "False"
    RationalRose$Visual Basic:CollectionClass = "Collection"
    RationalRose$Visual Basic:Creatable = "(221)"
    RationalRose$Visual Basic:GenerateInitialization = "False"
    RationalRose$Visual Basic:GenerateTermination = "False"
    RationalRose$Visual Basic:OptionBase = "(none)"
    RationalRose$Visual Basic:OptionCompare = "(none)"
    RationalRose$Visual Basic:OptionExplicit = "True"
    description : TEXT [0..1]
  }
}
Package "Records and Class Metadata" {
  Class <<type>>, <<type>> "Any" {}
  Class <<type>>, <<type>> "RecordType" {
    typeName_aName : TEXT
    record Record [0..*] as ref
    schema Schema [0..*] as ref
  }
  Class <<type>>, <<type>> "Record" {
    recordType RecordType [0..1] as ref
  }
}
Container "observation" {
  * fileName = "observation"
  Attributes <<dataType>> "_NamedValue" {
    * description = "The class <i>NamedValue</i> provides for a generic soft-typed parameter value. NamedValue shall support two attributes."
    * identifier = "observation::NamedValue"
    * tableName = "_NamedValue"
    id INTEGER NOT NULL PRIMARY KEY
  }
}
Package "EA Model" {
  Class "applicationSchema" {}
  Class "leaf" {}
  Datatype LegislationLevelValue
  
}

Package "Simple Components" {
  Class "AllowedTokens" {
    xsdDerivation = "true#NOTES#Values: true | false
    Default: true
    Description: class implemented as new type + element, or by applying constraints only
    "
    <<property>>, <<array>> values : TEXT [0..1]
    <<property>> pattern : TEXT [0..1]
  }
  Class <<type>> "QuantityRange" {
    xsdDerivation = "true#NOTES#Values: true | false
    Default: true
    Description: class implemented as new type + element, or by applying constraints only
    "
    uom_formula : TEXT [0..1]
    uom_measureType : TEXT
    uom_nameStandardUnit : TEXT [0..1]
    uom_offsetToStandardUnit : REAL [0..1]
    uom_scaleToStandardUnit : REAL [0..1]
    uom_uomName : TEXT
    uom_uomSymbol : TEXT
    <<property>> axisID : TEXT [0..1]
    <<property>> constraint : AllowedValues [0..1]
    <<property>> definition : ScopedName [0..1]
    <<property>> description : TEXT [0..1]
    <<property>> extension : Any [0..*]
    <<property>> identifier : ScopedName [0..1]
    <<property>> label : TEXT [0..1]
    <<property>> nilValues : NilValues [0..1]
    <<property>> optional : BOOLEAN [0..1]
    <<property>> quality : Quality [0..*]
    <<property>> referenceFrame : SC_CRS [0..1]
    <<property>> updatable : BOOLEAN [0..1]
    <<property>> value SWE_RealPair [0..1] as ref
  }
  Class <<union>> "Quality" {
    hasXmlLang = "false#NOTES#Values: true | false
    Default: false
    Description: axml attribute xml:lang shall be generated for the type representing the class
    "
    <<property>> byCategory : Category
    <<property>> byQuantity : Quantity
    <<property>> byQuantityRange : QuantityRange
    <<Property>> byText : Text
  }
  Class "AllowedValues" {
    xsdDerivation = "true#NOTES#Values: true | false
    Default: true
    Description: class implemented as new type + element, or by applying constraints only
    "
    <<property>>, <<array>> values : TEXT [0..1]
    <<property>> significantFigures : INTEGER [0..1]
    <<Property>> interval SWE_RealPair [0..*] as ref
  }
  Class <<type>> "Text" {
    xsdDerivation = "true#NOTES#Values: true | false
    Default: true
    Description: class implemented as new type + element, or by applying constraints only
    "
    <<property>> axisID : TEXT [0..1]
    <<property>> constraint : AllowedTokens [0..1]
    <<property>> definition : ScopedName [0..1]
    <<property>> description : TEXT [0..1]
    <<property>> extension : Any [0..*]
    <<property>> identifier : ScopedName [0..1]
    <<property>> label : TEXT [0..1]
    <<property>> nilValues : NilValues [0..1]
    <<property>> optional : BOOLEAN [0..1]
    <<property>> quality : Quality [0..*]
    <<property>> referenceFrame : SC_CRS [0..1]
    <<property>> updatable : BOOLEAN [0..1]
    <<property>> value : TEXT [0..1]
  }
  Class <<type>> "Category" {
    xsdDerivation = "true#NOTES#Values: true | false
    Default: true
    Description: class implemented as new type + element, or by applying constraints only
    "
    <<property>> axisID : TEXT [0..1]
    <<property>> codeSpace : Dictionary [0..1]
    <<property>> constraint : AllowedTokens [0..1]
    <<property>> definition : ScopedName [0..1]
    <<property>> description : TEXT [0..1]
    <<property>> extension : Any [0..*]
    <<property>> identifier : ScopedName [0..1]
    <<property>> label : TEXT [0..1]
    <<property>> nilValues : NilValues [0..1]
    <<property>> optional : BOOLEAN [0..1]
    <<property>> quality : Quality [0..*]
    <<property>> referenceFrame : SC_CRS [0..1]
    <<property>> updatable : BOOLEAN [0..1]
    <<property>> value : TEXT [0..1]
  }
  Class <<type>> "Quantity" {
    xsdDerivation = "true#NOTES#Values: true | false
    Default: true
    Description: class implemented as new type + element, or by applying constraints only
    "
    uom_formula : TEXT [0..1]
    uom_measureType : TEXT
    uom_nameStandardUnit : TEXT [0..1]
    uom_offsetToStandardUnit : REAL [0..1]
    uom_scaleToStandardUnit : REAL [0..1]
    uom_uomName : TEXT
    uom_uomSymbol : TEXT
    <<property>> axisID : TEXT [0..1]
    <<property>> constraint : AllowedValues [0..1]
    <<property>> definition : ScopedName [0..1]
    <<property>> description : TEXT [0..1]
    <<property>> extension : Any [0..*]
    <<property>> identifier : ScopedName [0..1]
    <<property>> label : TEXT [0..1]
    <<property>> nilValues : NilValues [0..1]
    <<property>> optional : BOOLEAN [0..1]
    <<property>> quality : Quality [0..*]
    <<property>> referenceFrame : SC_CRS [0..1]
    <<property>> updatable : BOOLEAN [0..1]
    <<property>> value : REAL [0..1]
  }
  Class <<type>> "NilValues" {
    xsdDerivation = "true"
  }
}
Package "Reference system information" {
  Class "RS_Identifier" {
    authority_date : DATE [0..1]
    authority_level : LegislationLevelValue [0..1]
    authority_link : TEXT [0..1]
    authority_name : TEXT [0..1]
    authority_type : TEXT [0..1]
    code : TEXT
    codeSpace : TEXT [0..1]
    version : TEXT [0..1]
  }
}
Package "Coordinate Reference Systems" {
  Abstract Class <<type>> "SC_CRS" {
    xmlSchemaType = "#NOTES#Description: If the type has a canonical XML Schema encoding the XML Schema typename corresponding to the data type shall be given as the value (applies to ISO 19136:2007 encoding rule)
    "
    alias : GenericName [0..*]
    domainOfValidity : EX_Extent [0..1]
    identifier : RS_Identifier [0..*]
    name : RS_Identifier
    remarks : TEXT [0..1]
    <<array>> scopes : TEXT
    coordOperationFrom CC_CoordinateOperation [0..*] as ref
    coordOperationTo CC_CoordinateOperation [0..*] as ref
    directPosition DirectPosition [0..*] as ref
    grid CV_ReferenceableGrid [0..*] as ref
    grid CV_ReferenceableGrid [0..*] as ref
    object GEOMETRY [0..*] as ref
  }
}
Package "Names" {
  Class <<type>> "NameSpace" {
    isGlobal : BOOLEAN
    acceptableClassList TypeName [0..*] as ref
    name GenericName [0..*] as ref
  }
  Class <<type>>, <<type>> "TypeName" {
    aName : TEXT
    scope NameSpace as ref
  }
  Abstract Class <<type>>, <<type>> "GenericName" {
    scope NameSpace as ref
  }
  Class <<type>> "ScopedName" {
    scope NameSpace as ref
  }
}
Package "dictionary" {
  Class <<type>> "Dictionary" {
    description : TEXT [0..1]
    descriptionReference : TEXT [0..1]
    identifier : ScopedName [0..1]
    name : GenericName [0..*]
  }
}
Container "Basic Types" {
  * fileName = "Basic Types"
  Attributes <<dataType>> "SWE_RealPair" {
    * identifier = "Basic Types::RealPair"
    * tableName = "SWE_RealPair"
    asXMLList = "true"
    xsdDerivation = "true#NOTES#Values: true | false
    Default: true
    Description: class implemented as new type + element, or by applying constraints only
    "
    id INTEGER NOT NULL PRIMARY KEY
    <<property>>, <<array>> items TEXT
  }
}
Package "Coordinate Operations" {
  Class <<type>> "CC_CoordinateOperation" {
    xmlSchemaType = "#NOTES#Description: If the type has a canonical XML Schema encoding the XML Schema typename corresponding to the data type shall be given as the value (applies to ISO 19136:2007 encoding rule)
    "
    alias : GenericName [0..*]
    domainOfValidity_description : TEXT [0..1]
    identifier : RS_Identifier [0..*]
    name : RS_Identifier
    operationVersion : TEXT [0..1]
    remarks : TEXT [0..1]
    <<array>> scopes : TEXT
    concatOperation CC_ConcatenatedOperation [0..*] as ref
    coordinateOperationAccuracy DQ_PositionalAccuracy [0..*] as ref
    passThruOperation CC_PassThroughOperation [0..*] as ref
    sourceCRS SC_CRS [0..1] as ref
    targetCRS SC_CRS [0..1] as ref
  }
}
